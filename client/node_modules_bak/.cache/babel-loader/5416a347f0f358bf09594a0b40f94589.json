{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/SignIn/SocialLogins.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nmutation loginExternal(\\n        $email: String!,\\n        $id: String!\\n      ){\\n        loginExternal(email: $email, id: $id) {\\n            dataOut{\\n                success\\n                _id\\n                name\\n                email\\n                description\\n                picture\\n                token\\n                \\n                }\\n            errorOut{\\n                  name\\n                  message\\n                }\\n        }\\n      }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { UserContext } from \"src/userContext\";\nimport { NEW_USER } from \"src/Services/GQL/NEW_USER\";\nimport Spinner from \"src/Atoms/Spinner\";\nexport const LOGINEXTERNAL = gql(_templateObject());\nexport default function SocialLogins() {\n  const classes = useStyles();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        extUser = _useState2[0],\n        setExtUser = _useState2[1];\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  const _useMutation = useMutation(LOGINEXTERNAL),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        loginExt = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error,\n        data = _useMutation2$.data;\n\n  const _useMutation3 = useMutation(NEW_USER),\n        _useMutation4 = _slicedToArray(_useMutation3, 2),\n        newUser = _useMutation4[0],\n        newUserStates = _useMutation4[1];\n\n  let history = useHistory();\n  var GoogleV = 'https://res.cloudinary.com/party-images-app/image/upload/v1557462915/vgvduspc6s8j368y1ras.png'; //If I got fbc User, lets login and get all user data\n\n  useEffect(() => {\n    if (extUser) {\n      loginExt({\n        variables: {\n          email: extUser.email,\n          id: extUser.id\n        }\n      });\n    }\n  }, [extUser]); //After fbc aproval, login or make new user\n\n  useEffect(() => {\n    if (data && data.loginExternal && data.loginExternal.dataOut) {\n      if (data.loginExternal.dataOut.success === false) {\n        newUser({\n          variables: {\n            name: extUser.name,\n            email: extUser.email,\n            password: extUser.id,\n            description: \"Hi, I am \".concat(extUser.name),\n            picture: extUser.picture,\n            type: \"social account\"\n          }\n        });\n      }\n\n      if (data.loginExternal.dataOut.success) {\n        window.localStorage.setItem(\"token\", data.loginExternal.dataOut.token);\n        console.log(\"Setting context in SOcialLogins\");\n        setContext(prev => {\n          return _objectSpread({}, prev, {\n            _id: data.loginExternal.dataOut._id,\n            success: data.loginExternal.dataOut.success,\n            name: data.loginExternal.dataOut.name,\n            email: data.loginExternal.dataOut.email,\n            picture: data.loginExternal.dataOut.picture,\n            description: data.loginExternal.dataOut.description,\n            token: data.loginExternal.dataOut.token\n          });\n        }); // context.setUserToContext(data.loginExternal.dataOut)\n      }\n    }\n  }, [data && data.loginExternal]); //Login after creating new user\n\n  useEffect(() => {\n    console.log(\"NSW finished new user: \", newUserStates);\n\n    if (newUserStates && newUserStates.data && newUserStates.data.newUser && newUserStates.data.newUser.dataOut) {\n      if (newUserStates.data.newUser.dataOut.success) {\n        console.log(\"Setting new user automaticaly when sign in for first tine from fcb/google\");\n        setContext(prev => {\n          return _objectSpread({}, prev, {\n            _id: newUserStates.data.newUser.dataOut._id,\n            success: newUserStates.data.newUser.dataOut.success,\n            name: newUserStates.data.newUser.dataOut.name,\n            email: newUserStates.data.newUser.dataOut.email,\n            picture: newUserStates.data.newUser.dataOut.picture,\n            description: newUserStates.data.newUser.dataOut.description,\n            token: newUserStates.data.newUser.dataOut.token\n          });\n        });\n      }\n    }\n  }, [newUserStates]);\n  useEffect(() => {\n    if (context._id) {\n      console.log(\"DATA LoginExt: create new user!! \", data.loginExternal.dataOut.success);\n      history.push(\"/\");\n    }\n  }, [context._id]);\n\n  const responseExternal = (response, type) => {\n    console.log(\"FB GG response \", type, response);\n\n    switch (type) {\n      case \"fb\":\n        if (response.id) {\n          setExtUser({\n            name: response.name,\n            email: response.email,\n            id: response.id,\n            picture: response.picture.data.url\n          });\n        }\n\n        break;\n\n      case \"gg\":\n        if (response.profileObj && response.profileObj.googleId) {\n          setExtUser({\n            email: response.profileObj.email,\n            name: response.profileObj.name,\n            picture: response.profileObj.imageUrl,\n            id: response.profileObj.googleId\n          });\n        }\n\n        break;\n\n      default: // code block\n\n    }\n  };\n\n  let fbContent;\n  fbContent = React.createElement(Grid, {\n    container: true,\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.spinnerWrapGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, newUserStates && newUserStates.loading ? React.createElement(Spinner, {\n    height: 40,\n    width: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }) : '', loading ? React.createElement(Spinner, {\n    height: 40,\n    width: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }) : \"finished\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.itemFacebook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(FacebookLogin, {\n    appId: \"601460357134288\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    scope: \"public_profile,email\",\n    size: \"metro\",\n    redirectUri: \"https://www.charliehouseparty.club/\",\n    disableMobileRedirect: true,\n    isMobile: true,\n    className: classes.buttonFacebook,\n    callback: e => responseExternal(e, \"fb\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.itemGoogle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(GoogleLogin, {\n    clientId: \"119981354324-7sj8o5l3dk03s56paf6d4fd0fbr9vuu6.apps.googleusercontent.com\",\n    render: renderProps => React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.googleBtn,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      alignContent: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.iconGoogle,\n      src: GoogleV,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.googleBtnText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Login with GOOGLE\")))))),\n    buttonText: \"Login\",\n    onSuccess: e => responseExternal(e, \"gg\"),\n    onFailure: e => responseExternal(e, \"gg\"),\n    cookiePolicy: 'single_host_origin',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, fbContent);\n}\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    width: '100%',\n    minHeight: 100\n  },\n  spinnerWrapGrid: {\n    height: 0,\n    zIndex: 100\n  },\n  iconGoogle: {\n    height: 20,\n    width: 20,\n    marginRight: 10\n  },\n  googleBtn: {\n    width: '100%'\n  },\n  googleBtnText: {\n    marginTop: 3,\n    marginBottom: 3\n  },\n  itemFacebook: {\n    backgroundColor: '#4c69ba',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  itemGoogle: {\n    marginBottom: 10\n  },\n  buttonFacebook: {\n    width: '100%'\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/SignIn/SocialLogins.js"],"names":["React","useState","useEffect","useContext","Grid","Button","FacebookLogin","GoogleLogin","useHistory","gql","useMutation","makeStyles","UserContext","NEW_USER","Spinner","LOGINEXTERNAL","SocialLogins","classes","useStyles","extUser","setExtUser","context","setContext","loginExt","loading","error","data","newUser","newUserStates","history","GoogleV","variables","email","id","loginExternal","dataOut","success","name","password","description","picture","type","window","localStorage","setItem","token","console","log","prev","_id","push","responseExternal","response","url","profileObj","googleId","imageUrl","fbContent","mainContainer","spinnerWrapGrid","itemFacebook","buttonFacebook","e","itemGoogle","renderProps","googleBtn","onClick","disabled","iconGoogle","googleBtnText","theme","width","minHeight","height","zIndex","marginRight","marginTop","marginBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport FacebookLogin from \"react-facebook-login\"\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { UserContext } from \"src/userContext\";\nimport { NEW_USER } from \"src/Services/GQL/NEW_USER\"\n\nimport Spinner from \"src/Atoms/Spinner\";\n\nexport const LOGINEXTERNAL = gql`\nmutation loginExternal(\n        $email: String!,\n        $id: String!\n      ){\n        loginExternal(email: $email, id: $id) {\n            dataOut{\n                success\n                _id\n                name\n                email\n                description\n                picture\n                token\n                \n                }\n            errorOut{\n                  name\n                  message\n                }\n        }\n      }\n`;\n\nexport default function SocialLogins(){\n    const classes = useStyles();\n    const [extUser, setExtUser] = useState()\n    const { context, setContext } = useContext(UserContext);\n    const [loginExt, { loading, error, data }] = useMutation(LOGINEXTERNAL);\n    const [newUser, newUserStates] = useMutation(NEW_USER);\n    let history = useHistory();\n    var GoogleV = 'https://res.cloudinary.com/party-images-app/image/upload/v1557462915/vgvduspc6s8j368y1ras.png'\n\n//If I got fbc User, lets login and get all user data\n    useEffect(() => {\n      if(extUser){\n        loginExt({\n          variables: {\n            email: extUser.email,\n            id: extUser.id\n          }\n        });\n      }\n  }, [extUser])\n\n  //After fbc aproval, login or make new user\n    useEffect(() => {\n        if(data && data.loginExternal && data.loginExternal.dataOut){\n          if(data.loginExternal.dataOut.success === false){\n            newUser({\n            variables: {\n              name:  extUser.name,\n              email:  extUser.email,\n              password: extUser.id,\n              description: `Hi, I am ${extUser.name}`,\n              picture: extUser.picture,\n              type: \"social account\"\n            }\n          })\n          }\n          if(data.loginExternal.dataOut.success){\n            window.localStorage.setItem(\"token\", data.loginExternal.dataOut.token);\n            console.log(\"Setting context in SOcialLogins\")\n            setContext(prev => {\n              return({\n                ...prev,\n                _id: data.loginExternal.dataOut._id,\n                success: data.loginExternal.dataOut.success,\n                name: data.loginExternal.dataOut.name,\n                email: data.loginExternal.dataOut.email,\n                picture: data.loginExternal.dataOut.picture,\n                description: data.loginExternal.dataOut.description,\n                token: data.loginExternal.dataOut.token\n              })\n            })\n            // context.setUserToContext(data.loginExternal.dataOut)\n          }\n\n        }\n    }, [data && data.loginExternal])\n\n  //Login after creating new user\n  useEffect(() => {\n    console.log(\"NSW finished new user: \", newUserStates)\n    if(newUserStates && newUserStates.data && newUserStates.data.newUser && newUserStates.data.newUser.dataOut){\n      if(newUserStates.data.newUser.dataOut.success){\n        console.log(\"Setting new user automaticaly when sign in for first tine from fcb/google\")\n        setContext(prev => {\n          return({\n            ...prev,\n            _id: newUserStates.data.newUser.dataOut._id,\n            success: newUserStates.data.newUser.dataOut.success,\n            name: newUserStates.data.newUser.dataOut.name,\n            email: newUserStates.data.newUser.dataOut.email,\n            picture: newUserStates.data.newUser.dataOut.picture,\n            description: newUserStates.data.newUser.dataOut.description,\n            token: newUserStates.data.newUser.dataOut.token\n          })\n        })\n      } \n    }\n\n  }, [newUserStates])\n\n  useEffect(() => {\n    if(context._id){\n      console.log(\"DATA LoginExt: create new user!! \", data.loginExternal.dataOut.success)\n      history.push(\"/\")\n    }\n  }, [context._id])\n\n    const responseExternal = (response, type) => {\n        console.log(\"FB GG response \", type, response)\n\n        switch(type) {\n          case \"fb\":\n            if(response.id){\n              setExtUser({\n                name: response.name,\n                email: response.email,\n                id: response.id,\n                picture: response.picture.data.url\n              })\n            }\n            break;\n          case \"gg\":\n            if(response.profileObj && response.profileObj.googleId){\n              setExtUser({\n                email: response.profileObj.email,\n                name: response.profileObj.name,\n                picture: response.profileObj.imageUrl,\n                id: response.profileObj.googleId})\n            }\n            break;\n          default:\n            // code block\n        }\n  }\n\n\n\n    let fbContent;\n\n        fbContent = (<Grid container className={classes.mainContainer}>\n\n          <Grid item xs={12} className={classes.spinnerWrapGrid}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                {newUserStates && newUserStates.loading ? <Spinner height={40} width={40} /> : ''}\n                {loading ? <Spinner height={40} width={40} /> : \"finished\"}\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.itemFacebook}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                  <FacebookLogin\n                        appId=\"601460357134288\"\n                        autoLoad={false}\n                        fields=\"name,email,picture\"\n                        scope=\"public_profile,email\"\n                        size=\"metro\"\n                        redirectUri=\"https://www.charliehouseparty.club/\"\n                        disableMobileRedirect={true}\n                        isMobile={true}\n                        className={classes.buttonFacebook}\n                        callback={(e) => responseExternal(e, \"fb\")}\n                      />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.itemGoogle}>\n            {/* <Grid container justify=\"center\">\n              <Grid item> */}\n              <GoogleLogin\n                    clientId=\"119981354324-7sj8o5l3dk03s56paf6d4fd0fbr9vuu6.apps.googleusercontent.com\"\n                    render={renderProps => (\n                      <Button variant=\"contained\" className={classes.googleBtn} onClick={renderProps.onClick} disabled={renderProps.disabled}>\n                        <Grid container alignItems=\"center\" justify=\"center\">\n                          <Grid item>\n                          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\n                            <Grid item>\n                              <img className={classes.iconGoogle} src={GoogleV} />\n                            </Grid>\n                            <Grid item>\n                              <p className={classes.googleBtnText}>Login with GOOGLE</p>\n                            </Grid>\n                          </Grid>\n                          </Grid>\n                        </Grid>\n                      </Button>\n                    )}\n                    buttonText=\"Login\"\n                    onSuccess={(e) => responseExternal(e, \"gg\")}\n                    onFailure={(e) => responseExternal(e, \"gg\")}\n                    cookiePolicy={'single_host_origin'}\n                  />\n              {/* </Grid>\n            </Grid> */}\n          </Grid>\n        </Grid>)\n\n    return (\n      <div>\n      {fbContent}\n      </div>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    width: '100%',\n    minHeight: 100,\n  },\n  spinnerWrapGrid: {\n    height: 0,\n    zIndex: 100\n  },\n  iconGoogle: {\n    height: 20,\n    width: 20,\n    marginRight: 10\n  },\n  googleBtn:{\n    width: '100%',\n  },\n  googleBtnText:{\n    marginTop: 3,\n    marginBottom: 3\n  },\n  itemFacebook: {\n    backgroundColor: '#4c69ba',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  itemGoogle: {\n    marginBottom: 10\n  },\n  buttonFacebook: {\n    width: '100%'\n  }\n}));"]},"metadata":{},"sourceType":"module"}