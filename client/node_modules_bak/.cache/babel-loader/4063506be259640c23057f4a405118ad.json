{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/UpperStripeAndDrawer/DrawerProfileBox.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"src/userContext\";\nimport ptyBck from \"src/Images/ptybck.png\";\nconst useStyles = makeStyles(theme => ({\n  blackBox: {\n    width: \"100%\",\n    height: 160,\n    backgroundColor: \"#E8045D\",\n    color: \"white\" // backgroundImage: `url(${ptyBck})`,\n    // backgroundSize: \"cover\"\n\n  },\n  topPart: {\n    height: 40,\n    backgroundColor: \"rgba(0,0,0,0.3)\"\n  },\n  middlePart: {\n    width: \"100%\",\n    height: 100,\n    backgroundColor: \"rgba(0,0,0,0.3)\"\n  },\n  bottomPart: {\n    width: \"100%\",\n    height: 60,\n    backgroundColor: \"rgba(0,0,0,0.3)\"\n  },\n  avatar: {\n    height: 80,\n    width: 80\n  },\n  actBtns: {\n    marginRight: 4\n  },\n  chipOutline: {\n    // borderBottom: \"1px solid white\",\n    margin: 5\n  }\n}));\nexport default function DrawerProfileBox({\n  handleDrawerToggle\n}) {\n  const classes = useStyles();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  let history = useHistory();\n\n  const Out = () => {\n    context.deleteToken();\n    context.getLoggedInUser();\n    handleDrawerToggle();\n  };\n\n  const SignIn = () => {\n    history.push(\"/signin\");\n    handleDrawerToggle();\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.blackBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.middlePart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    onClick: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: context.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(AccountCircleIcon, {\n    fontSize: \"large\",\n    onClick: SignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.bottomPart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, context.name && React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    className: classes.actBtns,\n    onClick: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    badgeContent: context.countUnseenBookings + context.countUnseenRatings,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"ACTIVITY\")))), React.createElement(Grid, {\n    item: true,\n    onClick: Out,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    className: classes.chipOutline // avatar={<Avatar style={{backgroundColor: \"#696565\"}}><ExitToAppIcon fontSize=\"small\" style={{color: \"white\"}} /></Avatar>}\n    ,\n    label: \"SIGN OUT\" // color=\"secondary\"\n    ,\n    style: {\n      color: \"white\",\n      borderColor: \"white\"\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), !context.name && React.createElement(Grid, {\n    item: true,\n    onClick: SignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    className: classes.chipOutline,\n    label: \"SIGN IN\" // color=\"secondary\"\n    ,\n    style: {\n      color: \"white\",\n      borderColor: \"white\"\n    },\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/UpperStripeAndDrawer/DrawerProfileBox.js"],"names":["React","useState","useContext","useEffect","makeStyles","Grid","Avatar","Chip","Badge","Typography","ExitToAppIcon","AccountCircleIcon","NavLink","useHistory","UserContext","ptyBck","useStyles","theme","blackBox","width","height","backgroundColor","color","topPart","middlePart","bottomPart","avatar","actBtns","marginRight","chipOutline","margin","DrawerProfileBox","handleDrawerToggle","classes","context","setContext","history","Out","deleteToken","getLoggedInUser","SignIn","push","picture","name","countUnseenBookings","countUnseenRatings","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Badge from '@material-ui/core/Badge';\nimport Typography from '@material-ui/core/Typography';\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nimport { UserContext } from \"src/userContext\";\nimport ptyBck from \"src/Images/ptybck.png\";\n\nconst useStyles = makeStyles(theme => ({\n    blackBox: {\n        width: \"100%\",\n        height: 160,\n        backgroundColor: \"#E8045D\",\n        color: \"white\",\n        // backgroundImage: `url(${ptyBck})`,\n        // backgroundSize: \"cover\"\n    },\n    topPart: {\n        height: 40,\n        backgroundColor: \"rgba(0,0,0,0.3)\"\n    },\n    middlePart: {\n        width: \"100%\",\n        height: 100,\n        backgroundColor: \"rgba(0,0,0,0.3)\"\n    },\n    bottomPart: {\n        width: \"100%\",\n        height: 60,\n        backgroundColor: \"rgba(0,0,0,0.3)\"\n    },\n    avatar: {\n        height: 80,\n        width: 80,\n    },\n    actBtns: {\n        marginRight: 4\n    },\n    chipOutline: {\n        // borderBottom: \"1px solid white\",\n        margin: 5\n    },\n}));\n\nexport default function DrawerProfileBox({handleDrawerToggle}) {\n  const classes = useStyles();\n  const { context, setContext } = useContext(UserContext);\n  let history = useHistory();\n\n  const Out = () => {\n    context.deleteToken()\n    context.getLoggedInUser()\n    handleDrawerToggle()\n  };\n\n  const SignIn = () => {\n    history.push(\"/signin\")\n    handleDrawerToggle()\n  };\n\n  return (\n        <Grid container className={classes.blackBox}>\n            <Grid item xs={12}>\n                <Grid container justify='center' alignItems=\"center\" className={classes.middlePart}>\n                    <Grid item onClick={handleDrawerToggle}>\n                        <NavLink\n                            to={`/profile`}\n                            >\n                            <Avatar className={classes.avatar} src={context.picture}>\n                                <AccountCircleIcon  fontSize=\"large\" onClick={SignIn} />\n                            </Avatar>\n                        </NavLink>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid item xs={12} >\n            <Grid container justify='center' alignItems=\"center\" className={classes.bottomPart}>\n            {context.name && <>\n            <Grid item className={classes.actBtns} onClick={handleDrawerToggle}>\n            <Badge badgeContent={context.countUnseenBookings + context.countUnseenRatings} \n                    color=\"secondary\">\n                <NavLink to={`/profile`}>\n                    {/* <Chip\n                    className={classes.chip}\n                    // avatar={\n                    //   <Avatar\n                    //     alt={booking.user.name}\n                    //     src={booking.user.picture}\n                    //   >\n                    //     M\n                    //   </Avatar>\n                    // }\n                    label=\"Actions\"\n                    style={{ color: \"white\"}}\n                    /> */}\n                        <Typography component=\"p\">\n                            ACTIVITY\n                        </Typography>\n                </NavLink>\n            </Badge>\n            </Grid>\n            <Grid item onClick={Out} >\n                <Chip\n                    className={classes.chipOutline}\n                    // avatar={<Avatar style={{backgroundColor: \"#696565\"}}><ExitToAppIcon fontSize=\"small\" style={{color: \"white\"}} /></Avatar>}\n                    label=\"SIGN OUT\"\n                    // color=\"secondary\"\n                    style={{color: \"white\", borderColor: \"white\"}}\n                    variant=\"outlined\"\n                    />\n            </Grid>\n            </>}\n            {!context.name &&             \n            <Grid item onClick={SignIn} >\n                    <Chip\n                        className={classes.chipOutline}\n                        \n                        label=\"SIGN IN\"\n                        // color=\"secondary\"\n                        style={{color: \"white\", borderColor: \"white\"}}\n                        variant=\"outlined\"\n                        \n                      />\n            </Grid>\n            }\n            </Grid>\n            </Grid>\n\n        </Grid>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}