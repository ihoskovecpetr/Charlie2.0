{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Profile/EventInfoLines.js\";\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport { displayDate } from \"../../Services/transform-services\";\nimport { useCountDistance } from \"../../Hooks/useCountDistance\";\nimport { UserContext } from \"../../userContext\";\nimport countdown from \"countdown\";\nexport default function TimeLine({\n  event\n}) {\n  const classes = useStyles();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  let history = useHistory();\n  const distance = useCountDistance(event.geometry.coordinates[1], event.geometry.coordinates[0], context.geolocationObj && context.geolocationObj.lat, context.geolocationObj && context.geolocationObj.lng, \"K\");\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapDiv,\n    onClick: () => {\n      history.push(\"/event/\".concat(event._id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.mainHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, event.name)), React.createElement(Grid, {\n    item: true,\n    className: classes.listRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Launching in:\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.standardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, countdown(new Date(), new Date(event.dateStart), \"X\", 1).toString())))), React.createElement(Grid, {\n    item: true,\n    className: classes.listRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"distance\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.standardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"\".concat(Math.floor(distance * 10) / 10, \" Km\")))))));\n}\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    padding: 5,\n    paddingLeft: 15\n  },\n  wrapDiv: {\n    border: \"2px solid #26BFB9\",\n    borderRadius: 10,\n    width: \"100%\",\n    marginLeft: 20,\n    marginRight: 20\n  },\n  listRow: {\n    //width: \"100%\",\n    marginTop: 2,\n    marginBottom: 2 // backgroundColor: \"rgba(213,208,208,0.4)\",\n\n  },\n  mainHead: {\n    fontWeight: 800,\n    fontSize: 18,\n    textAlign: \"center\",\n    color: \"#26BFB9\" // backgroundColor: \"rgba(136,136,136,0.2)\",\n    // padding: 10\n\n  },\n  head: {\n    fontWeight: 500,\n    fontSize: 16,\n    textAlign: \"right\",\n    color: \"#26BFB9\",\n    // backgroundColor: \"rgba(136,136,136,0.2)\",\n    padding: 10\n  },\n  standardContent: {\n    fontWeight: 600,\n    textAlign: \"left\",\n    // color: \"rgba(50,48,28,1)\",\n    padding: 10\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Profile/EventInfoLines.js"],"names":["React","useContext","makeStyles","Grid","Typography","useHistory","displayDate","useCountDistance","UserContext","countdown","TimeLine","event","classes","useStyles","context","setContext","history","distance","geometry","coordinates","geolocationObj","lat","lng","mainContainer","wrapDiv","push","_id","mainHead","name","listRow","head","standardContent","Date","dateStart","toString","Math","floor","theme","padding","paddingLeft","border","borderRadius","width","marginLeft","marginRight","marginTop","marginBottom","fontWeight","fontSize","textAlign","color"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { displayDate } from \"../../Services/transform-services\";\nimport { useCountDistance } from \"../../Hooks/useCountDistance\";\nimport { UserContext } from \"../../userContext\";\n\nimport countdown from \"countdown\";\n\nexport default function TimeLine({ event }) {\n  const classes = useStyles();\n  const { context, setContext } = useContext(UserContext);\n  let history = useHistory();\n\n  const distance = useCountDistance(\n    event.geometry.coordinates[1],\n    event.geometry.coordinates[0],\n    context.geolocationObj && context.geolocationObj.lat,\n    context.geolocationObj && context.geolocationObj.lng,\n    \"K\"\n  );\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <div className={classes.wrapDiv} onClick={() => {\n        history.push(`/event/${event._id}`)\n      }}>\n        <Grid item>\n          <Typography component=\"p\" className={classes.mainHead}>\n            {event.name}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.listRow}>\n          <Grid container item xs={12}>\n            <Grid item xs={6}>\n              <Typography component=\"p\" className={classes.head}>\n                Launching in:\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography component=\"p\" className={classes.standardContent}>\n                {countdown(\n                  new Date(),\n                  new Date(event.dateStart),\n                  \"X\",\n                  1\n                ).toString()}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes.listRow}>\n          <Grid container item xs={12}>\n            <Grid item xs={6}>\n              <Typography component=\"p\" className={classes.head}>\n                distance\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography component=\"p\" className={classes.standardContent}>\n                {`${Math.floor(distance * 10) / 10} Km`}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    padding: 5,\n    paddingLeft: 15\n  },\n  wrapDiv: {\n    border: \"2px solid #26BFB9\",\n    borderRadius: 10,\n    width: \"100%\",\n    marginLeft: 20,\n    marginRight: 20\n  },\n  listRow: {\n    //width: \"100%\",\n    marginTop: 2,\n    marginBottom: 2\n    // backgroundColor: \"rgba(213,208,208,0.4)\",\n  },\n  mainHead: {\n    fontWeight: 800,\n    fontSize: 18,\n    textAlign: \"center\",\n    color: \"#26BFB9\",\n    // backgroundColor: \"rgba(136,136,136,0.2)\",\n    // padding: 10\n  },\n  head: {\n    fontWeight: 500,\n    fontSize: 16,\n    textAlign: \"right\",\n    color: \"#26BFB9\",\n    // backgroundColor: \"rgba(136,136,136,0.2)\",\n    padding: 10\n  },\n  standardContent: {\n    fontWeight: 600,\n    textAlign: \"left\",\n    // color: \"rgba(50,48,28,1)\",\n    padding: 10\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}