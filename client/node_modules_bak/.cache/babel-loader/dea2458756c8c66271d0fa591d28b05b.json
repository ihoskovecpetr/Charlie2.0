{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/Infowindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, HttpLink, split, gql } from \"apollo-boost\";\nimport { BatchHttpLink } from \"apollo-link-batch-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { setContext } from \"apollo-link-context\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport countdown from \"countdown\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\nimport { UserContext } from \"src/userContext\";\nimport { displayDate } from \"src/Services/transform-services\";\nimport DrawerWrap from 'src/Molecules/map/DrawerWrap';\nvar GQL_ENDPOINT = \"http://localhost:4005/graphql\";\n\nif (process.env.NODE_ENV == \"production\") {\n  GQL_ENDPOINT = \"https://\".concat(window.location.host, \"/graphql\");\n}\n\nconst httpLink = new BatchHttpLink({\n  uri: GQL_ENDPOINT,\n  headers: {\n    authorization: window.localStorage.getItem(\"token\")\n  }\n});\nvar WS_ENDPOINT = \"ws://localhost:4005/subs\";\n\nif (process.env.NODE_ENV == \"production\") {\n  WS_ENDPOINT = \"wss://\".concat(window.location.host, \"/subs\");\n}\n\nconst wsLink = new WebSocketLink({\n  uri: WS_ENDPOINT,\n  options: {\n    reconnect: true\n  }\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // get the authentication token from local storage if it exists\n  const token = window.localStorage.getItem(\"token\"); // return the headers to the context so httpLink can read them\n\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: \"Bearer \".concat(token)\n    })\n  };\n});\nconst link = split(({\n  query\n}) => {\n  const _getMainDefinition = getMainDefinition(query),\n        kind = _getMainDefinition.kind,\n        operation = _getMainDefinition.operation;\n\n  return kind === \"OperationDefinition\" && operation === \"subscription\";\n}, wsLink, authLink.concat(httpLink));\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      fetchPolicy: \"network-only\",\n      errorPolicy: \"all\"\n    }\n  }\n});\n\nfunction Infowindow(props) {\n  const classes = useStyles();\n\n  const _useCountdown = useCountdown(props.location.dateStart, 1),\n        counteddownDate = _useCountdown.counteddownDate; // const { context, setContext } = useContext(UserContext);\n\n\n  let Pic = props.location.imagesArr[0];\n  let Author = props.location.author;\n  useEffect(() => {\n    return () => {\n      console.log(\"INfowindw unmounting\");\n    };\n  }, []);\n\n  const handleClickOpen = e => {\n    console.log(\"handleClickOpen EE\");\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (props.context.success) {\n      console.log(\"openModalEvent EE\");\n      props.setOpenDrawer(true);\n    } else {\n      props.redirectLogin();\n    }\n  }; // const openModalEvent = () => {\n  //   console.log(\"openModalEvent EE\")\n  //   // return(\n  //   //               <ApolloProvider client={client}>\n  //   //                 <UserContext.Provider value={() => {}} >\n  //   //                   <Router>\n  //   //                     <DrawerWrap open={true} event={props.location} context={props.context} setContext={props.setContext} />\n  //   //                   </Router>\n  //   //                 </UserContext.Provider>\n  //   //               </ApolloProvider>\n  //   // ) \n  //   // var string = \"/event/\" + props.location._id;\n  //   // window.AppHistory.push(string, {\n  //   //   //tady: napsatStateKdyÅ¾tak \n  //   // });\n  // };\n\n\n  return React.createElement(React.Fragment, null, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.topbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: classes.h3Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, props.location.name))), React.createElement(\"div\", {\n    className: classes.img,\n    style: {\n      backgroundImage: \"url('\".concat(Pic.thumbnail, \"')\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" \"), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.authorGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Author picture\",\n    src: Author.picture,\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"flex-end\",\n    className: classes.infoWindBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.countdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"start \", counteddownDate))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  img: {\n    height: 100,\n    width: 200,\n    backgroundSize: \"cover\"\n  },\n  topbar: {\n    position: \"absolute\",\n    //height: 35,\n    width: \"100%\",\n    background: \"linear-gradient(180deg, rgba(0,0,0,0.5) 30%, rgba(0,0,0,0.3) 100%)\",\n    color: \"white\",\n    flexGrow: 1,\n    alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  buttonOpen: {\n    width: \"100%\",\n    background: \"#E8045D\",\n    color: \"white\",\n    borderRadius: 0\n  },\n  h3Name: {\n    display: \"inline-block\",\n    margin: \"0.5em\",\n    fontSize: 18\n  },\n  authorGrid: {\n    top: -30,\n    height: 0,\n    position: \"relative\"\n  },\n  avatar: {\n    border: \"2px solid #FFFFFF\",\n    width: 60,\n    height: 60\n  },\n  infoWindBody: {\n    position: \"relative\",\n    height: 60\n  },\n  countdown: {\n    position: \"relative\",\n    width: \"100%\",\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontWeight: 600,\n    color: \"grey\",\n    textAlign: \"center\"\n  },\n  gridButton: {\n    width: \"100%\",\n    bottom: 0,\n    position: \"absolute\",\n    color: \"white\",\n    flexGrow: 1\n  }\n}));\nexport default Infowindow;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/Infowindow.js"],"names":["React","useState","useEffect","makeStyles","Grid","CssBaseline","Avatar","Typography","Button","Switch","Route","BrowserRouter","Router","ApolloClient","InMemoryCache","HttpLink","split","gql","BatchHttpLink","ApolloProvider","WebSocketLink","setContext","getMainDefinition","countdown","useCountdown","UserContext","displayDate","DrawerWrap","GQL_ENDPOINT","process","env","NODE_ENV","window","location","host","httpLink","uri","headers","authorization","localStorage","getItem","WS_ENDPOINT","wsLink","options","reconnect","authLink","_","token","link","query","kind","operation","concat","client","cache","defaultOptions","fetchPolicy","errorPolicy","Infowindow","props","classes","useStyles","dateStart","counteddownDate","Pic","imagesArr","Author","author","console","log","handleClickOpen","e","preventDefault","stopPropagation","context","success","setOpenDrawer","redirectLogin","topbar","h3Name","name","img","backgroundImage","thumbnail","authorGrid","picture","avatar","infoWindBody","theme","height","width","backgroundSize","position","background","color","flexGrow","alignItems","alignContent","buttonOpen","borderRadius","display","margin","fontSize","top","border","whiteSpace","overflow","textOverflow","fontWeight","textAlign","gridButton","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  split,\n  gql\n} from \"apollo-boost\";\nimport { BatchHttpLink } from \"apollo-link-batch-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { setContext } from \"apollo-link-context\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nimport countdown from \"countdown\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\nimport { UserContext } from \"src/userContext\";\nimport { displayDate } from \"src/Services/transform-services\";\nimport DrawerWrap from 'src/Molecules/map/DrawerWrap';\n\n\nvar GQL_ENDPOINT = `http://localhost:4005/graphql`;\nif (process.env.NODE_ENV == \"production\") {\n  GQL_ENDPOINT = `https://${window.location.host}/graphql`;\n}\nconst httpLink = new BatchHttpLink({\n  uri: GQL_ENDPOINT,\n  headers: {\n    authorization: window.localStorage.getItem(\"token\")\n  }\n});\n\nvar WS_ENDPOINT = `ws://localhost:4005/subs`;\nif (process.env.NODE_ENV == \"production\") {\n  WS_ENDPOINT = `wss://${window.location.host}/subs`;\n}\n\nconst wsLink = new WebSocketLink({\n  uri: WS_ENDPOINT,\n  options: {\n    reconnect: true\n  }\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = window.localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      fetchPolicy: \"network-only\",\n      errorPolicy: \"all\"\n    }\n  }\n});\n\nfunction Infowindow(props) {\n  const classes = useStyles();\n  const { counteddownDate } = useCountdown(props.location.dateStart, 1)\n  // const { context, setContext } = useContext(UserContext);\n  let Pic = props.location.imagesArr[0];\n  let Author = props.location.author;\n\n  useEffect(() => {\n    return(() => {\n      console.log(\"INfowindw unmounting\")\n    })\n  },[])\n\n  const handleClickOpen = (e) => {\n      console.log(\"handleClickOpen EE\")\n      e.preventDefault();\n      e.stopPropagation();\n      if (props.context.success) {\n        console.log(\"openModalEvent EE\")\n        props.setOpenDrawer(true)\n      } else {\n        props.redirectLogin();\n      }\n  }\n\n  // const openModalEvent = () => {\n  //   console.log(\"openModalEvent EE\")\n  //   // return(\n  //   //               <ApolloProvider client={client}>\n  //   //                 <UserContext.Provider value={() => {}} >\n  //   //                   <Router>\n  //   //                     <DrawerWrap open={true} event={props.location} context={props.context} setContext={props.setContext} />\n  //   //                   </Router>\n  //   //                 </UserContext.Provider>\n  //   //               </ApolloProvider>\n  //   // ) \n\n  //   // var string = \"/event/\" + props.location._id;\n  //   // window.AppHistory.push(string, {\n  //   //   //tady: napsatStateKdyÅ¾tak \n  //   // });\n  // };\n\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" className={classes.topbar}>\n        <Grid>\n          <h3 className={classes.h3Name}>{props.location.name}</h3>\n        </Grid>\n      </Grid>\n      {/* <img src={Pic.src} alt={Pic.capture} className={classes.img} /> */}\n      <div className={classes.img} style={{backgroundImage: `url('${Pic.thumbnail}')`}}> </div>\n      <Grid container justify=\"center\" className={classes.authorGrid}>\n        <Avatar\n          alt=\"Author picture\"\n          src={Author.picture}\n          className={classes.avatar}\n        />\n      </Grid>\n\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"flex-end\"\n        className={classes.infoWindBody}\n      >\n        <Grid item xs={12}>\n            <Typography variant=\"body1\" className={classes.countdown}>\n              {/* {countdown(\n                new Date(props.location.dateStart),\n                new Date(),\n                \"X\",\n                1\n              ).toString()}{\" \"}\n              ago */}\n              start {counteddownDate}\n            </Typography>\n          </Grid>\n      </Grid>\n\n      {/* <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.gridButton}\n      >\n        <Button\n          variant=\"contained\"\n          className={classes.buttonOpen}\n          onClick={handleClickOpen}\n        >\n          OPEN {!props.context.success && \"(LOGIN)\"}\n        </Button>\n      </Grid> */}\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  img: {\n    height: 100,\n    width: 200,\n    backgroundSize: \"cover\"\n  },\n  topbar: {\n    position: \"absolute\",\n    //height: 35,\n    width: \"100%\",\n    background:\n      \"linear-gradient(180deg, rgba(0,0,0,0.5) 30%, rgba(0,0,0,0.3) 100%)\",\n    color: \"white\",\n    flexGrow: 1,\n    alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  buttonOpen: {\n    width: \"100%\",\n    background: \"#E8045D\",\n    color: \"white\",\n    borderRadius: 0\n  },\n  h3Name: {\n    display: \"inline-block\",\n    margin: \"0.5em\",\n    fontSize: 18\n  },\n\n  authorGrid: {\n    top: -30,\n    height: 0,\n    position: \"relative\"\n  },\n  avatar: {\n    border: \"2px solid #FFFFFF\",\n    width: 60,\n    height: 60\n  },\n  infoWindBody: {\n    position: \"relative\",\n    height: 60,\n  },\n  countdown: {\n    position: \"relative\",\n    width: \"100%\",\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontWeight: 600,\n    color: \"grey\",\n    textAlign: \"center\"\n  },\n  gridButton: {\n    width: \"100%\",\n    bottom: 0,\n    position: \"absolute\",\n    color: \"white\",\n    flexGrow: 1\n  }\n}));\n\nexport default Infowindow;\n"]},"metadata":{},"sourceType":"module"}