{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/SignIn/SocialLogins.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nmutation loginExternal(\\n        $email: String!,\\n        $id: String!\\n      ){\\n        loginExternal(email: $email, id: $id) {\\n            dataOut{\\n                success\\n                _id\\n                name\\n                email\\n                description\\n                picture\\n                token\\n                typeSocial\\n                typeDirect\\n                }\\n            errorOut{\\n                  name\\n                  message\\n                }\\n        }\\n      }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { UserContext } from \"src/userContext\";\nimport { NEW_USER } from \"src/Services/GQL/NEW_USER\";\nimport { UPDATE_USER } from \"src/Services/GQL/UPDATE_USER\";\nimport Spinner from \"src/Atoms/Spinner\";\nexport const LOGINEXTERNAL = gql(_templateObject());\nexport default function SocialLogins() {\n  const classes = useStyles();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        extUser = _useState2[0],\n        setExtUser = _useState2[1];\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  const _useMutation = useMutation(LOGINEXTERNAL),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        loginExt = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error,\n        data = _useMutation2$.data;\n\n  const _useMutation3 = useMutation(NEW_USER),\n        _useMutation4 = _slicedToArray(_useMutation3, 2),\n        newUser = _useMutation4[0],\n        newUserStates = _useMutation4[1];\n\n  const _useMutation5 = useMutation(UPDATE_USER),\n        _useMutation6 = _slicedToArray(_useMutation5, 2),\n        updateUser = _useMutation6[0],\n        updateUserStates = _useMutation6[1];\n\n  let history = useHistory();\n  var GoogleV = 'https://res.cloudinary.com/party-images-app/image/upload/v1557462915/vgvduspc6s8j368y1ras.png'; //If I got fbc User, lets login and get all user data\n\n  useEffect(() => {\n    if (extUser) {\n      loginExt({\n        variables: {\n          email: extUser.email,\n          id: extUser.id\n        }\n      });\n    }\n  }, [extUser]); //After fbc aproval, login or make new user\n\n  useEffect(() => {\n    if (data && data.loginExternal && data.loginExternal.dataOut) {\n      if (data.loginExternal.dataOut.success === false) {\n        newUser({\n          variables: {\n            name: extUser.name,\n            email: extUser.email,\n            password: \"FAKE_FAKE\",\n            socialId: extUser.id,\n            description: \"Hi, I am \".concat(extUser.name),\n            picture: extUser.picture,\n            typeSocial: true,\n            typeDirect: false\n          }\n        });\n      }\n\n      if (data.loginExternal.dataOut.success) {\n        //user already existed, just find out if it was already social or not yes\n        if (data.loginExternal.dataOut.typeSocial) {\n          window.localStorage.setItem(\"token\", data.loginExternal.dataOut.token);\n          setContext(prev => {\n            return _objectSpread({}, prev, {\n              _id: data.loginExternal.dataOut._id,\n              success: data.loginExternal.dataOut.success,\n              name: data.loginExternal.dataOut.name,\n              email: data.loginExternal.dataOut.email,\n              picture: data.loginExternal.dataOut.picture,\n              description: data.loginExternal.dataOut.description,\n              token: data.loginExternal.dataOut.token\n            });\n          });\n        } else {\n          updateUser({\n            variables: {\n              socialId: extUser.id,\n              description: \"\".concat(data.loginExternal.dataOut.description, \" + SOcial update\"),\n              typeSocial: true\n            }\n          }); //set user info without doublechecking how update went (for now, TODO: later) \n\n          window.localStorage.setItem(\"token\", data.loginExternal.dataOut.token);\n          setContext(prev => {\n            return _objectSpread({}, prev, {\n              _id: data.loginExternal.dataOut._id,\n              success: data.loginExternal.dataOut.success,\n              name: data.loginExternal.dataOut.name,\n              email: data.loginExternal.dataOut.email,\n              picture: data.loginExternal.dataOut.picture,\n              description: data.loginExternal.dataOut.description,\n              token: data.loginExternal.dataOut.token\n            });\n          });\n        } // context.setUserToContext(data.loginExternal.dataOut)\n\n      }\n    }\n  }, [data && data.loginExternal]); //Login after creating new user\n\n  useEffect(() => {\n    console.log(\"NSW finished new user: \", newUserStates);\n\n    if (newUserStates && newUserStates.data && newUserStates.data.newUser && newUserStates.data.newUser.dataOut) {\n      if (newUserStates.data.newUser.dataOut.success) {\n        console.log(\"Setting new user automaticaly when sign in for first tine from fcb/google\");\n        setContext(prev => {\n          return _objectSpread({}, prev, {\n            _id: newUserStates.data.newUser.dataOut._id,\n            success: newUserStates.data.newUser.dataOut.success,\n            name: newUserStates.data.newUser.dataOut.name,\n            email: newUserStates.data.newUser.dataOut.email,\n            picture: newUserStates.data.newUser.dataOut.picture,\n            description: newUserStates.data.newUser.dataOut.description,\n            token: newUserStates.data.newUser.dataOut.token\n          });\n        });\n      }\n    }\n  }, [newUserStates]);\n  useEffect(() => {\n    if (context._id) {\n      history.push(\"/\");\n    }\n  }, [context._id]);\n\n  const responseExternal = (response, type) => {\n    console.log(\"FB GG response \", type, response);\n\n    switch (type) {\n      case \"fb\":\n        if (response.id) {\n          setExtUser({\n            name: response.name,\n            email: response.email,\n            id: response.id,\n            picture: response.picture.data.url\n          });\n        }\n\n        break;\n\n      case \"gg\":\n        if (response.profileObj && response.profileObj.googleId) {\n          setExtUser({\n            email: response.profileObj.email,\n            name: response.profileObj.name,\n            picture: response.profileObj.imageUrl,\n            id: response.profileObj.googleId\n          });\n        }\n\n        break;\n\n      default: // code block\n\n    }\n  };\n\n  let fbContent;\n  fbContent = React.createElement(Grid, {\n    container: true,\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.spinnerWrapGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, newUserStates && newUserStates.loading ? React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.spinnerWrapGridBackdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    height: 80,\n    width: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }))) : '', loading ? React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.spinnerWrapGridBackdrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    height: 80,\n    width: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }))) : \"\"), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.itemFacebook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(FacebookLogin, {\n    appId: \"601460357134288\",\n    autoLoad: false,\n    fields: \"name,email,picture\",\n    scope: \"public_profile,email\",\n    size: \"metro\",\n    redirectUri: \"https://www.charliehouseparty.club/\",\n    disableMobileRedirect: true,\n    isMobile: true,\n    className: classes.buttonFacebook,\n    callback: e => responseExternal(e, \"fb\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.itemGoogle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(GoogleLogin, {\n    clientId: \"119981354324-7sj8o5l3dk03s56paf6d4fd0fbr9vuu6.apps.googleusercontent.com\",\n    render: renderProps => React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.googleBtn,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      alignContent: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.iconGoogle,\n      src: GoogleV,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.googleBtnText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Login with GOOGLE\")))))),\n    buttonText: \"Login\",\n    onSuccess: e => responseExternal(e, \"gg\"),\n    onFailure: e => responseExternal(e, \"gg\"),\n    cookiePolicy: 'single_host_origin',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, fbContent);\n}\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    width: '100%',\n    minHeight: 100\n  },\n  spinnerWrapGrid: {\n    height: 0,\n    zIndex: 100\n  },\n  spinnerWrapGridBackdrop: {\n    height: 128,\n    width: '100%',\n    backgroundColor: 'rgba(255,255,255,0.4)'\n  },\n  iconGoogle: {\n    height: 20,\n    width: 20,\n    marginRight: 10\n  },\n  googleBtn: {\n    width: '100%'\n  },\n  googleBtnText: {\n    marginTop: 3,\n    marginBottom: 3\n  },\n  itemFacebook: {\n    backgroundColor: '#4c69ba',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  itemGoogle: {\n    marginBottom: 10\n  },\n  buttonFacebook: {\n    width: '100%'\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/SignIn/SocialLogins.js"],"names":["React","useState","useEffect","useContext","Grid","Button","FacebookLogin","GoogleLogin","useHistory","gql","useMutation","makeStyles","UserContext","NEW_USER","UPDATE_USER","Spinner","LOGINEXTERNAL","SocialLogins","classes","useStyles","extUser","setExtUser","context","setContext","loginExt","loading","error","data","newUser","newUserStates","updateUser","updateUserStates","history","GoogleV","variables","email","id","loginExternal","dataOut","success","name","password","socialId","description","picture","typeSocial","typeDirect","window","localStorage","setItem","token","prev","_id","console","log","push","responseExternal","response","type","url","profileObj","googleId","imageUrl","fbContent","mainContainer","spinnerWrapGrid","spinnerWrapGridBackdrop","itemFacebook","buttonFacebook","e","itemGoogle","renderProps","googleBtn","onClick","disabled","iconGoogle","googleBtnText","theme","width","minHeight","height","zIndex","backgroundColor","marginRight","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport FacebookLogin from \"react-facebook-login\"\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { UserContext } from \"src/userContext\";\nimport { NEW_USER } from \"src/Services/GQL/NEW_USER\"\nimport { UPDATE_USER } from \"src/Services/GQL/UPDATE_USER\"\n\nimport Spinner from \"src/Atoms/Spinner\";\n\nexport const LOGINEXTERNAL = gql`\nmutation loginExternal(\n        $email: String!,\n        $id: String!\n      ){\n        loginExternal(email: $email, id: $id) {\n            dataOut{\n                success\n                _id\n                name\n                email\n                description\n                picture\n                token\n                typeSocial\n                typeDirect\n                }\n            errorOut{\n                  name\n                  message\n                }\n        }\n      }\n`;\n\nexport default function SocialLogins(){\n    const classes = useStyles();\n    const [extUser, setExtUser] = useState()\n    const { context, setContext } = useContext(UserContext);\n    const [loginExt, { loading, error, data }] = useMutation(LOGINEXTERNAL);\n    const [newUser, newUserStates] = useMutation(NEW_USER);\n    const [updateUser, updateUserStates] = useMutation(UPDATE_USER)\n    let history = useHistory();\n    var GoogleV = 'https://res.cloudinary.com/party-images-app/image/upload/v1557462915/vgvduspc6s8j368y1ras.png'\n\n//If I got fbc User, lets login and get all user data\n    useEffect(() => {\n      if(extUser){\n        loginExt({\n          variables: {\n            email: extUser.email,\n            id: extUser.id\n          }\n        });\n      }\n  }, [extUser])\n\n  //After fbc aproval, login or make new user\n    useEffect(() => {\n        if(data && data.loginExternal && data.loginExternal.dataOut){\n          if(data.loginExternal.dataOut.success === false){\n            newUser({\n            variables: {\n              name:  extUser.name,\n              email:  extUser.email,\n              password: \"FAKE_FAKE\",\n              socialId: extUser.id,\n              description: `Hi, I am ${extUser.name}`,\n              picture: extUser.picture,\n              typeSocial: true,\n              typeDirect: false, \n            }\n          })\n          }\n          if(data.loginExternal.dataOut.success){\n            //user already existed, just find out if it was already social or not yes\n            if(data.loginExternal.dataOut.typeSocial){\n              window.localStorage.setItem(\"token\", data.loginExternal.dataOut.token);\n              setContext(prev => {\n                return({\n                  ...prev,\n                  _id: data.loginExternal.dataOut._id,\n                  success: data.loginExternal.dataOut.success,\n                  name: data.loginExternal.dataOut.name,\n                  email: data.loginExternal.dataOut.email,\n                  picture: data.loginExternal.dataOut.picture,\n                  description: data.loginExternal.dataOut.description,\n                  token: data.loginExternal.dataOut.token\n                })\n              })\n            }else{\n              updateUser({\n                variables: {\n                  socialId: extUser.id,\n                  description: `${data.loginExternal.dataOut.description} + SOcial update`,\n                  typeSocial: true,\n                },\n              })\n              //set user info without doublechecking how update went (for now, TODO: later) \n              window.localStorage.setItem(\"token\", data.loginExternal.dataOut.token);\n              setContext(prev => {\n                return({\n                  ...prev,\n                  _id: data.loginExternal.dataOut._id,\n                  success: data.loginExternal.dataOut.success,\n                  name: data.loginExternal.dataOut.name,\n                  email: data.loginExternal.dataOut.email,\n                  picture: data.loginExternal.dataOut.picture,\n                  description: data.loginExternal.dataOut.description,\n                  token: data.loginExternal.dataOut.token\n                })\n              })\n\n            }\n\n            // context.setUserToContext(data.loginExternal.dataOut)\n          }\n\n        }\n    }, [data && data.loginExternal])\n\n  //Login after creating new user\n  useEffect(() => {\n    console.log(\"NSW finished new user: \", newUserStates)\n    if(newUserStates && newUserStates.data && newUserStates.data.newUser && newUserStates.data.newUser.dataOut){\n      if(newUserStates.data.newUser.dataOut.success){\n        console.log(\"Setting new user automaticaly when sign in for first tine from fcb/google\")\n        setContext(prev => {\n          return({\n            ...prev,\n            _id: newUserStates.data.newUser.dataOut._id,\n            success: newUserStates.data.newUser.dataOut.success,\n            name: newUserStates.data.newUser.dataOut.name,\n            email: newUserStates.data.newUser.dataOut.email,\n            picture: newUserStates.data.newUser.dataOut.picture,\n            description: newUserStates.data.newUser.dataOut.description,\n            token: newUserStates.data.newUser.dataOut.token\n          })\n        })\n      } \n    }\n\n  }, [newUserStates])\n\n  useEffect(() => {\n    if(context._id){\n      history.push(\"/\")\n    }\n  }, [context._id])\n\n    const responseExternal = (response, type) => {\n        console.log(\"FB GG response \", type, response)\n\n        switch(type) {\n          case \"fb\":\n            if(response.id){\n              setExtUser({\n                name: response.name,\n                email: response.email,\n                id: response.id,\n                picture: response.picture.data.url\n              })\n            }\n            break;\n          case \"gg\":\n            if(response.profileObj && response.profileObj.googleId){\n              setExtUser({\n                email: response.profileObj.email,\n                name: response.profileObj.name,\n                picture: response.profileObj.imageUrl,\n                id: response.profileObj.googleId})\n            }\n            break;\n          default:\n            // code block\n        }\n  }\n\n\n\n    let fbContent;\n\n        fbContent = (<Grid container className={classes.mainContainer}>\n\n          <Grid item xs={12} className={classes.spinnerWrapGrid}>\n          {newUserStates && newUserStates.loading ?\n            <Grid container justify=\"center\" className={classes.spinnerWrapGridBackdrop}> \n              <Grid item>\n                <Spinner height={80} width={80} />\n              </Grid>\n            </Grid> \n            : ''}\n            {loading ? \n            <Grid container justify=\"center\" className={classes.spinnerWrapGridBackdrop}> \n              <Grid item >\n                <Spinner height={80} width={80} />\n              </Grid>\n            </Grid>\n            : \"\"}\n\n          </Grid>\n\n          <Grid item xs={12} className={classes.itemFacebook}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                  <FacebookLogin\n                        appId=\"601460357134288\"\n                        autoLoad={false}\n                        fields=\"name,email,picture\"\n                        scope=\"public_profile,email\"\n                        size=\"metro\"\n                        redirectUri=\"https://www.charliehouseparty.club/\"\n                        disableMobileRedirect={true}\n                        isMobile={true}\n                        className={classes.buttonFacebook}\n                        callback={(e) => responseExternal(e, \"fb\")}\n                      />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.itemGoogle}>\n            {/* <Grid container justify=\"center\">\n              <Grid item> */}\n              <GoogleLogin\n                    clientId=\"119981354324-7sj8o5l3dk03s56paf6d4fd0fbr9vuu6.apps.googleusercontent.com\"\n                    render={renderProps => (\n                      <Button variant=\"contained\" className={classes.googleBtn} onClick={renderProps.onClick} disabled={renderProps.disabled}>\n                        <Grid container alignItems=\"center\" justify=\"center\">\n                          <Grid item>\n                          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\n                            <Grid item>\n                              <img className={classes.iconGoogle} src={GoogleV} />\n                            </Grid>\n                            <Grid item>\n                              <p className={classes.googleBtnText}>Login with GOOGLE</p>\n                            </Grid>\n                          </Grid>\n                          </Grid>\n                        </Grid>\n                      </Button>\n                    )}\n                    buttonText=\"Login\"\n                    onSuccess={(e) => responseExternal(e, \"gg\")}\n                    onFailure={(e) => responseExternal(e, \"gg\")}\n                    cookiePolicy={'single_host_origin'}\n                  />\n              {/* </Grid>\n            </Grid> */}\n          </Grid>\n        </Grid>)\n\n    return (\n      <div>\n      {fbContent}\n      </div>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    width: '100%',\n    minHeight: 100,\n  },\n  spinnerWrapGrid: {\n    height: 0,\n    zIndex: 100\n  },\n  spinnerWrapGridBackdrop: {\n    height: 128,\n    width: '100%',\n    backgroundColor: 'rgba(255,255,255,0.4)'\n  },\n  iconGoogle: {\n    height: 20,\n    width: 20,\n    marginRight: 10\n  },\n  googleBtn:{\n    width: '100%',\n  },\n  googleBtnText:{\n    marginTop: 3,\n    marginBottom: 3\n  },\n  itemFacebook: {\n    backgroundColor: '#4c69ba',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  itemGoogle: {\n    marginBottom: 10\n  },\n  buttonFacebook: {\n    width: '100%'\n  }\n}));"]},"metadata":{},"sourceType":"module"}