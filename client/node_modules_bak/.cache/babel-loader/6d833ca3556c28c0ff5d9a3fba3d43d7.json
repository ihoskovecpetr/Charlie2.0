{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Snackbar from'@material-ui/core/Snackbar';import CloseIcon from'@material-ui/icons/Close';import Button from\"@material-ui/core/Button\";import IconButton from\"@material-ui/core/IconButton\";import{useHistory}from\"react-router-dom\";var useStyles=makeStyles(function(theme){return{spinnerWrap:{display:\"flex\",\"& > * + *\":{marginLeft:theme.spacing(2)}}};});export default function WindowEventSnackbar(props){var classes=useStyles();var history=useHistory();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];return React.createElement(React.Fragment,null,window.eventId&&React.createElement(Snackbar,{anchorOrigin:{vertical:'bottom',horizontal:'left'},open:window.eventId?true:false,autoHideDuration:6000,message:\"Event: \".concat(window.eventId),action:React.createElement(React.Fragment,null,React.createElement(Button,{color:\"secondary\",size:\"small\",onClick:function onClick(){history.replace(\"/event/\".concat(window.eventId));}},\"OPEN\"),React.createElement(IconButton,{size:\"small\",\"aria-label\":\"close\",color:\"inherit\",onClick:function onClick(){window.eventId=null;setOpen(false);}},React.createElement(CloseIcon,{fontSize:\"small\"})))}));}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/WindowEventSnackbar.js"],"names":["React","useState","makeStyles","Snackbar","CloseIcon","Button","IconButton","useHistory","useStyles","theme","spinnerWrap","display","marginLeft","spacing","WindowEventSnackbar","props","classes","history","open","setOpen","window","eventId","vertical","horizontal","replace"],"mappings":"qIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGN,UAAU,CAAC,SAAAO,KAAK,QAAK,CACrCC,WAAW,CAAE,CACXC,OAAO,CAAE,MADE,CAEX,YAAa,CACXC,UAAU,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADD,CAFF,CADwB,CAAL,EAAN,CAA5B,CASA,cAAe,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACjD,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,GAAIS,CAAAA,OAAO,CAAGV,UAAU,EAAxB,CAFiD,cAGzBN,QAAQ,CAAC,IAAD,CAHiB,wCAG1CiB,IAH0C,eAGpCC,OAHoC,eAMjD,MACE,yCACCC,MAAM,CAACC,OAAP,EAAkB,oBAAC,QAAD,EACT,YAAY,CAAE,CACZC,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,MAFA,CADL,CAKT,IAAI,CAAEH,MAAM,CAACC,OAAP,CAAiB,IAAjB,CAAwB,KALrB,CAMT,gBAAgB,CAAE,IANT,CAOT,OAAO,kBAAYD,MAAM,CAACC,OAAnB,CAPE,CAQT,MAAM,CACJ,wCACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,IAAI,CAAC,OAA/B,CAAuC,OAAO,CAAE,kBAAM,CAACJ,OAAO,CAACO,OAAR,kBAA0BJ,MAAM,CAACC,OAAjC,GAA4C,CAAnG,SADF,CAIE,oBAAC,UAAD,EAAc,IAAI,CAAC,OAAnB,CACc,aAAW,OADzB,CAEc,KAAK,CAAC,SAFpB,CAGc,OAAO,CAAE,kBAAM,CACXD,MAAM,CAACC,OAAP,CAAiB,IAAjB,CACAF,OAAO,CAAC,KAAD,CAAP,CACC,CANnB,EAOE,oBAAC,SAAD,EAAW,QAAQ,CAAC,OAApB,EAPF,CAJF,CATO,EADnB,CADF,CA6BD","sourcesContent":["import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  spinnerWrap: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function WindowEventSnackbar(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const [open, setOpen] = useState(true);\n\n\n  return (\n    <>\n    {window.eventId && <Snackbar\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              open={window.eventId ? true : false}\n              autoHideDuration={6000}\n              message={`Event: ${window.eventId}`}\n              action={\n                <>\n                  <Button color=\"secondary\" size=\"small\" onClick={() => {history.replace(`/event/${window.eventId}`)}}>\n                    OPEN\n                  </Button>\n                  <IconButton   size=\"small\" \n                                aria-label=\"close\" \n                                color=\"inherit\" \n                                onClick={() => {\n                                    window.eventId = null\n                                    setOpen(false)\n                                    }} >\n                    <CloseIcon fontSize=\"small\" />\n                  </IconButton>\n                </>\n              }\n            />}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}