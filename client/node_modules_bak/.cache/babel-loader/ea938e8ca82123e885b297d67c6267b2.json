{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import React, {useState, useEffect} from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Container from \"@material-ui/core/Container\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Drawer from '@material-ui/core/Drawer';\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { UserContext } from \"src/userContext\";\n// const DrawerWrap = ({open, event}) => {\n//   const classes = useStyles();\n//   const [openState, setOpenState] = useState(false)\n//   useEffect(() => {\n//     if(open){\n//       setOpenState(true)\n//     }else{\n//       setOpenState(false)\n//     }\n//   }, [open])\n//   return(\n//     <>\n//       <Drawer anchor={\"left\"} open={openState} onClose={() => setOpenState(!openState)}>\n//       Event Info\n//     </Drawer>\n//     </>\n//   )\n// };\nimport React,{useState,useContext,useEffect}from\"react\";import CssBaseline from\"@material-ui/core/CssBaseline\";import{makeStyles,useTheme}from\"@material-ui/core/styles\";import Button from\"@material-ui/core/Button\";import Container from\"@material-ui/core/Container\";import Grid from\"@material-ui/core/Grid\";import Paper from\"@material-ui/core/Paper\";import Drawer from'@material-ui/core/Drawer';import Typography from\"@material-ui/core/Typography\";import{withRouter,useHistory,NavLink}from\"react-router-dom\";import{useMutation,useQuery}from\"@apollo/react-hooks\";import Gallery from\"react-grid-gallery\";import{displayDate}from\"src/Services/transform-services\";import{UserContext}from\"src/userContext\";import PlayPageList from\"src/Molecules/play/PlayPageList\";import PlayPageGallery from\"src/Molecules/play/PlayPageGallery\";import PlayPageMap from\"src/Molecules/play/PlayPageMap\";import{GET_ONE_EVENT}from\"src/Services/GQL/GET_ONE_EVENT\";import{EVENT_RATINGS}from\"src/Services/GQL/EVENT_RATINGS\";import EventButtons from\"src/Molecules/event/EventButtons\";import RatingCard from\"src/Molecules/rating-card\";import Spinner from\"src/Atoms/Spinner\";var dataMock;function DrawerWrap(props){console.log(\"DrawerWrap props: \",props);var classes=useStyles();// let history = useHistory();\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),windowHeight=_useState2[0],setWindowHeight=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openState=_useState4[0],setOpenState=_useState4[1];var _useQuery=useQuery(GET_ONE_EVENT,{variables:{event_id:props.event._id}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;var ratings=useQuery(EVENT_RATINGS,{variables:{event_id:props.event._id}});useEffect(function(){if(props.open){setOpenState(true);}else{setOpenState(false);}},[props.open]);console.log(\"DrawerWrap print context:\",props.context);useEffect(function(){window.scrollTo(0,0);setWindowHeight(window.innerHeight);},[]);var dataDB;var PaperEvent=function PaperEvent(props){return React.createElement(Paper,{className:classes.paper,style:{height:1*windowHeight,width:400,maxWidth:'86vw'}},props.children);};if(dataMock){dataDB=dataMock;}else if(data){dataDB=data;}if(dataDB&&dataDB.getOneEvent.success){return React.createElement(Drawer,{anchor:\"left\",open:openState,onClose:function onClose(){return setOpenState(!openState);}},React.createElement(\"div\",{id:\"paper_scrollable\"},React.createElement(PaperEvent,null,React.createElement(Grid,{container:true,justify:\"center\"},React.createElement(Grid,{item:true,className:classes.nameGrid},dataDB.getOneEvent.hide&&React.createElement(Typography,{component:\"h3\",variant:\"h3\",className:classes.name},\"CANCELLED\")),React.createElement(PlayPageGallery,{event:dataDB.getOneEvent}),React.createElement(PlayPageList,{event:dataDB.getOneEvent,propContext:props.context,bookings:dataDB.getOneEvent.bookings,GQL_refetch:GET_ONE_EVENT,refetchVariables:{id:props.event._id}}),React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\",alignContent:\"center\",direction:\"column\",className:classes.ratingContainer},ratings.data&&ratings.data.showRatings.map(function(rating,index){return React.createElement(Grid,{item:true},React.createElement(RatingCard,{rating:rating,key:index}));})),React.createElement(EventButtons,{event:dataDB&&dataDB.getOneEvent,propContext:props.context})))));}if(dataDB&&dataDB.getOneEvent.success==false){return React.createElement(Drawer,{anchor:\"left\",open:openState,onClose:function onClose(){return setOpenState(!openState);}},React.createElement(PaperEvent,null,React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){// history.goBack();\n}},\"Back\"),React.createElement(Paper,null,React.createElement(Typography,{component:\"div\"},dataDB.getOneEvent.message))));}return React.createElement(Drawer,{anchor:\"left\",open:openState,onClose:function onClose(){return setOpenState(!openState);}},React.createElement(PaperEvent,null,React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\",style:{width:\"100%\",height:300}},React.createElement(Grid,{item:true},React.createElement(Spinner,{height:100,width:100})))));;}var useStyles=makeStyles(function(theme){return{paper:{background:\"#242323\",color:\"white\",overflow:\"scroll\",borderRadius:0// borderBottomRightRadius: 0,\n// borderBottomLeftRadius: 0\n},gridButtons:{background:\"black\",color:\"white\",marginTop:\"0 !important\",//padding: theme.spacing(3, 2),\ndisplay:\"flex\",//width: 300,\noverflow:\"scroll\",borderBottomRightRadius:5,borderBottomLeftRadius:5,boxShadow:\"0px -2px 5px 0px rgba(200,200,200,0.3)\"},closeButton:{background:theme.palette.violetova,color:\"white\"},nameGrid:{margin:15},name:{textAlign:\"center\"},ratingContainer:{width:\"100%\",overflow:\"scroll\"}};});export default DrawerWrap;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/map/DrawerWrap.js"],"names":["React","useState","useContext","useEffect","CssBaseline","makeStyles","useTheme","Button","Container","Grid","Paper","Drawer","Typography","withRouter","useHistory","NavLink","useMutation","useQuery","Gallery","displayDate","UserContext","PlayPageList","PlayPageGallery","PlayPageMap","GET_ONE_EVENT","EVENT_RATINGS","EventButtons","RatingCard","Spinner","dataMock","DrawerWrap","props","console","log","classes","useStyles","windowHeight","setWindowHeight","openState","setOpenState","variables","event_id","event","_id","loading","error","data","refetch","ratings","open","context","window","scrollTo","innerHeight","dataDB","PaperEvent","paper","height","width","maxWidth","children","getOneEvent","success","nameGrid","hide","name","bookings","id","ratingContainer","showRatings","map","rating","index","message","theme","background","color","overflow","borderRadius","gridButtons","marginTop","display","borderBottomRightRadius","borderBottomLeftRadius","boxShadow","closeButton","palette","violetova","margin","textAlign"],"mappings":"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","sourcesContent":["// import React, {useState, useEffect} from \"react\";\n// import ReactDOM from \"react-dom\";\n\n// import Container from \"@material-ui/core/Container\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Typography from \"@material-ui/core/Typography\";\n// import Drawer from '@material-ui/core/Drawer';\n\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { UserContext } from \"src/userContext\";\n\n// const DrawerWrap = ({open, event}) => {\n//   const classes = useStyles();\n//   const [openState, setOpenState] = useState(false)\n\n//   useEffect(() => {\n//     if(open){\n//       setOpenState(true)\n//     }else{\n//       setOpenState(false)\n//     }\n//   }, [open])\n\n\n\n//   return(\n//     <>\n//       <Drawer anchor={\"left\"} open={openState} onClose={() => setOpenState(!openState)}>\n//       Event Info\n//     </Drawer>\n//     </>\n//   )\n// };\n\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { withRouter, useHistory, NavLink } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Gallery from \"react-grid-gallery\";\nimport { displayDate } from \"src/Services/transform-services\";\n\nimport { UserContext } from \"src/userContext\";\n\nimport PlayPageList from \"src/Molecules/play/PlayPageList\";\nimport PlayPageGallery from \"src/Molecules/play/PlayPageGallery\";\nimport PlayPageMap from \"src/Molecules/play/PlayPageMap\";\n\nimport {GET_ONE_EVENT} from \"src/Services/GQL/GET_ONE_EVENT\";\nimport { EVENT_RATINGS } from \"src/Services/GQL/EVENT_RATINGS\";\nimport EventButtons from \"src/Molecules/event/EventButtons\";\nimport RatingCard from \"src/Molecules/rating-card\";\nimport Spinner from \"src/Atoms/Spinner\";\n\n\nlet dataMock;\n\nfunction DrawerWrap(props) {\n\n  console.log(\"DrawerWrap props: \", props)\n  const classes = useStyles();\n  // let history = useHistory();\n  const [windowHeight, setWindowHeight] = useState(0);\n  const [openState, setOpenState] = useState(false)\n  const { loading, error, data, refetch } = useQuery(GET_ONE_EVENT, {\n    variables: { event_id: props.event._id }\n  });\n  const ratings = useQuery(EVENT_RATINGS, {\n    variables: { event_id: props.event._id }\n  });\n\n  useEffect(() => {\n    if(props.open){\n      setOpenState(true)\n    }else{\n      setOpenState(false)\n    }\n  }, [props.open])\n\n\n  console.log(\"DrawerWrap print context:\", props.context)\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setWindowHeight(window.innerHeight)\n  }, []);\n\n  let dataDB;\n\n  const PaperEvent = props => {\n    return <Paper \n                  className={classes.paper}\n                  style={{height: 1 * windowHeight, width: 400, maxWidth: '86vw'}}\n                  >\n              {props.children}\n          </Paper>;\n  };\n\n\n  if (dataMock) {\n    dataDB = dataMock;\n  } else if (data) {\n    dataDB = data;\n  }\n\n\n  if (dataDB && dataDB.getOneEvent.success) {\n    return (\n      <Drawer anchor={\"left\"} open={openState} onClose={() => setOpenState(!openState)}>\n        <div id=\"paper_scrollable\">\n          <PaperEvent>\n            <Grid\n              container\n              justify=\"center\"\n            >\n              <Grid item className={classes.nameGrid}>\n                {dataDB.getOneEvent.hide && <Typography component=\"h3\" variant=\"h3\" className={classes.name}>\n                  CANCELLED\n                </Typography>}\n              </Grid>\n              <PlayPageGallery event={dataDB.getOneEvent} />\n              <PlayPageList\n                    event={dataDB.getOneEvent}\n                    propContext={props.context}\n                    bookings={dataDB.getOneEvent.bookings}\n                    GQL_refetch={GET_ONE_EVENT}\n                    refetchVariables={{ id: props.event._id }}\n                  />\n              {/* <PlayPageMap\n                    event={dataDB.getOneEvent}\n                    showBookings={dataDB.getOneEvent.bookings} //showBookings\n                  />  */}\n\n              <Grid\n                container\n                justify=\"center\"\n                alignItems=\"center\"\n                alignContent=\"center\"\n                direction=\"column\"\n                className={classes.ratingContainer}\n              >\n                {ratings.data &&\n                  ratings.data.showRatings.map((rating, index) => (\n                    <Grid item>\n                      <RatingCard rating={rating} key={index} />\n                    </Grid>\n                  ))}\n              </Grid>\n              <EventButtons\n                event={dataDB && dataDB.getOneEvent}\n                propContext={props.context}\n              />\n            </Grid>\n          </PaperEvent>\n        </div>\n        </Drawer>\n    );\n  }\n  if (dataDB && dataDB.getOneEvent.success == false) {\n    return (\n      <Drawer anchor={\"left\"} open={openState} onClose={() => setOpenState(!openState)}>\n\n        <PaperEvent>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              // history.goBack();\n            }}\n          >\n            Back\n          </Button>\n          <Paper>\n            <Typography component=\"div\">\n              {dataDB.getOneEvent.message}\n            </Typography>\n          </Paper>\n        </PaperEvent>\n        </ Drawer>\n    );\n  }\n  return(\n    <Drawer anchor={\"left\"} open={openState} onClose={() => setOpenState(!openState)}>\n\n      <PaperEvent>\n          <Grid container justify=\"center\" alignItems=\"center\" style={{width: \"100%\", height: 300}}>\n            <Grid item>\n              <Spinner height={100} width={100} />\n            </Grid>\n          </Grid>\n      </PaperEvent>\n    </ Drawer>\n  );;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    background: \"#242323\",\n    color: \"white\",\n    overflow: \"scroll\",\n    borderRadius: 0,\n    // borderBottomRightRadius: 0,\n    // borderBottomLeftRadius: 0\n  },\n  gridButtons: {\n    background: \"black\",\n    color: \"white\",\n    marginTop: \"0 !important\",\n    //padding: theme.spacing(3, 2),\n    display: \"flex\",\n    //width: 300,\n    overflow: \"scroll\",\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    boxShadow: \"0px -2px 5px 0px rgba(200,200,200,0.3)\"\n  },\n  closeButton: {\n    background: theme.palette.violetova,\n    color: \"white\"\n  },\n  nameGrid: {\n    margin: 15\n  },\n  name: {\n    textAlign: \"center\"\n  },\n  ratingContainer: {\n    width: \"100%\",\n    overflow: \"scroll\"\n  },\n}));\n\nexport default DrawerWrap;\n"]},"metadata":{},"sourceType":"module"}