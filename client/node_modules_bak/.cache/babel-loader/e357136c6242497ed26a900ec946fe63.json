{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _CheckButton = require('./CheckButton.js');\n\nvar _CheckButton2 = _interopRequireDefault(_CheckButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Image = function (_Component) {\n  _inherits(Image, _Component);\n\n  function Image(props) {\n    _classCallCheck(this, Image);\n\n    var _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props));\n\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: 'tagStyle',\n    value: function tagStyle() {\n      if (this.props.tagStyle) return this.props.tagStyle;\n      return {\n        display: \"inline\",\n        padding: \".2em .6em .3em\",\n        fontSize: \"75%\",\n        fontWeight: \"600\",\n        lineHeight: \"1\",\n        color: \"yellow\",\n        background: \"rgba(0,0,0,0.65)\",\n        textAlign: \"center\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"baseline\",\n        borderRadius: \".25em\"\n      };\n    }\n  }, {\n    key: 'tileViewportStyle',\n    value: function tileViewportStyle() {\n      if (this.props.tileViewportStyle) return this.props.tileViewportStyle.call(this);\n      var nanoBase64Backgorund = {};\n\n      if (this.props.item.nano) {\n        nanoBase64Backgorund = {\n          background: 'url(' + this.props.item.nano + ')',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center center'\n        };\n      }\n\n      if (this.props.item.isSelected) return Object.assign({\n        width: this.props.item.vwidth - 32,\n        height: this.props.height - 32,\n        margin: 16,\n        overflow: \"hidden\"\n      }, nanoBase64Backgorund);\n      return Object.assign({\n        width: this.props.item.vwidth,\n        height: this.props.height,\n        overflow: \"hidden\"\n      }, nanoBase64Backgorund);\n    }\n  }, {\n    key: 'thumbnailStyle',\n    value: function thumbnailStyle() {\n      if (this.props.thumbnailStyle) return this.props.thumbnailStyle.call(this);\n      var rotationTransformValue = undefined;\n\n      switch (this.props.item.orientation) {\n        case 3:\n          rotationTransformValue = \"rotate(180deg)\";\n          break;\n\n        case 6:\n          rotationTransformValue = \"rotate(90deg)\";\n          break;\n\n        case 8:\n          rotationTransformValue = \"rotate(270deg)\";\n          break;\n\n        case 2:\n          rotationTransformValue = \"rotateY(180deg)\";\n          break;\n\n        case 4:\n          rotationTransformValue = \"rotate(180deg) rotateY(180deg)\";\n          break;\n\n        case 5:\n          rotationTransformValue = \"rotate(270deg) rotateY(180deg)\";\n          break;\n\n        case 7:\n          rotationTransformValue = \"rotate(90deg) rotateY(180deg)\";\n          break;\n      }\n\n      if (this.props.item.isSelected) {\n        var ratio = this.props.item.scaletwidth / this.props.height;\n        var height = 0;\n        var width = 0;\n        var viewportHeight = this.props.height - 32;\n        var viewportWidth = this.props.item.vwidth - 32;\n\n        if (this.props.item.scaletwidth > this.props.height) {\n          width = this.props.item.scaletwidth - 32;\n          height = Math.floor(width / ratio);\n        } else {\n          height = this.props.height - 32;\n          width = Math.floor(height * ratio);\n        }\n\n        var marginTop = -Math.abs(Math.floor((viewportHeight - height) / 2));\n        var marginLeft = -Math.abs(Math.floor((viewportWidth - width) / 2));\n        return {\n          cursor: 'pointer',\n          width: width,\n          height: height,\n          marginLeft: marginLeft,\n          marginTop: marginTop,\n          transform: rotationTransformValue\n        };\n      }\n\n      return {\n        cursor: 'pointer',\n        width: this.props.item.scaletwidth,\n        height: this.props.height,\n        marginLeft: this.props.item.marginLeft,\n        marginTop: 0,\n        transform: rotationTransformValue\n      };\n    }\n  }, {\n    key: 'renderCheckButton',\n    value: function renderCheckButton() {\n      return _react2.default.createElement(_CheckButton2.default, {\n        key: 'Select',\n        index: this.props.index,\n        color: \"rgba(255, 255, 255, 0.7)\",\n        selectedColor: \"#4285f4\",\n        hoverColor: \"rgba(255, 255, 255, 1)\",\n        isSelected: this.props.item.isSelected,\n        isSelectable: this.props.isSelectable,\n        onClick: this.props.isSelectable ? this.props.onSelectImage : null,\n        parentHover: this.state.hover\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var alt = this.props.item.alt ? this.props.item.alt : \"\";\n      var tags = typeof this.props.item.tags === 'undefined' ? _react2.default.createElement('noscript', null) : this.props.item.tags.map(function (tag) {\n        return _react2.default.createElement('div', {\n          title: tag.title,\n          key: \"tag-\" + tag.value,\n          style: {\n            display: \"inline-block\",\n            cursor: 'pointer',\n            pointerEvents: 'visible',\n            margin: \"2px\"\n          }\n        }, _react2.default.createElement('span', {\n          style: _this2.tagStyle()\n        }, tag.value));\n      });\n      var customOverlay = typeof this.props.item.customOverlay === 'undefined' ? _react2.default.createElement('noscript', null) : _react2.default.createElement('div', {\n        className: 'ReactGridGallery_custom-overlay',\n        key: \"custom-overlay-\" + this.props.index,\n        style: {\n          pointerEvents: \"none\",\n          opacity: this.state.hover ? 1 : 0,\n          position: \"absolute\",\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }, this.props.item.customOverlay);\n      var thumbnailProps = {\n        key: \"img-\" + this.props.index,\n        src: this.props.item.thumbnail,\n        alt: alt,\n        title: this.props.item.caption,\n        style: this.thumbnailStyle()\n      };\n      var ThumbnailImageComponent = this.props.thumbnailImageComponent;\n      return _react2.default.createElement('div', {\n        className: 'ReactGridGallery_tile',\n        key: \"tile-\" + this.props.index,\n        onMouseEnter: function onMouseEnter(e) {\n          return _this2.setState({\n            hover: true\n          });\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          return _this2.setState({\n            hover: false\n          });\n        },\n        style: {\n          margin: this.props.margin,\n          WebkitUserSelect: \"none\",\n          position: \"relative\",\n          float: \"left\",\n          background: \"#eee\",\n          padding: \"0px\"\n        }\n      }, _react2.default.createElement('div', {\n        className: 'ReactGridGallery_tile-icon-bar',\n        key: \"tile-icon-bar-\" + this.props.index,\n        style: {\n          pointerEvents: \"none\",\n          opacity: 1,\n          position: \"absolute\",\n          height: \"36px\",\n          width: \"100%\"\n        }\n      }, this.renderCheckButton()), _react2.default.createElement('div', {\n        className: 'ReactGridGallery_tile-bottom-bar',\n        key: \"tile-bottom-bar-\" + this.props.index,\n        style: {\n          padding: \"2px\",\n          pointerEvents: \"none\",\n          position: \"absolute\",\n          minHeight: \"0px\",\n          maxHeight: \"160px\",\n          width: \"100%\",\n          bottom: \"0px\",\n          overflow: \"hidden\"\n        }\n      }, tags), customOverlay, _react2.default.createElement('div', {\n        className: 'ReactGridGallery_tile-overlay',\n        key: \"tile-overlay-\" + this.props.index,\n        style: {\n          pointerEvents: \"none\",\n          opacity: 1,\n          position: \"absolute\",\n          height: \"100%\",\n          width: \"100%\",\n          background: this.state.hover && !this.props.item.isSelected && this.props.isSelectable ? 'linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)' : 'none'\n        }\n      }), _react2.default.createElement('div', {\n        className: 'ReactGridGallery_tile-viewport',\n        style: this.tileViewportStyle(),\n        key: \"tile-viewport-\" + this.props.index,\n        onClick: this.props.onClick ? function (e) {\n          return _this2.props.onClick.call(_this2, _this2.props.index, e);\n        } : null\n      }, ThumbnailImageComponent ? _react2.default.createElement(ThumbnailImageComponent, _extends({}, this.props, {\n        imageProps: thumbnailProps\n      })) : _react2.default.createElement('img', thumbnailProps)), this.props.item.thumbnailCaption && _react2.default.createElement('div', {\n        className: 'ReactGridGallery_tile-description',\n        style: {\n          background: \"white\",\n          height: \"100%\",\n          width: \"100%\",\n          margin: 0,\n          userSelect: \"text\",\n          WebkitUserSelect: \"text\",\n          MozUserSelect: \"text\",\n          overflow: \"hidden\"\n        }\n      }, this.props.item.thumbnailCaption));\n    }\n  }]);\n\n  return Image;\n}(_react.Component);\n\nImage.propTypes = {\n  item: _propTypes2.default.object,\n  index: _propTypes2.default.number,\n  margin: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  isSelectable: _propTypes2.default.bool,\n  onClick: _propTypes2.default.func,\n  onSelectImage: _propTypes2.default.func,\n  tileViewportStyle: _propTypes2.default.func,\n  thumbnailStyle: _propTypes2.default.func,\n  tagStyle: _propTypes2.default.object,\n  customOverlay: _propTypes2.default.element,\n  thumbnailImageComponent: _propTypes2.default.func\n};\nImage.defaultProps = {\n  isSelectable: true,\n  hover: false\n};\nexports.default = Image;","map":null,"metadata":{},"sourceType":"script"}