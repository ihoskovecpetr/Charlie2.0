{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/profile/ProfileTopBox.js\";\nimport React, { useState, useContext, useRef, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_USER } from \"src/Services/GQL/UPDATE_USER\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { LOGIN } from \"src/Services/GQL/LOGIN\";\nimport { findEmpty } from \"src/Services/functions\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport { useAverageRating } from \"src/Hooks/useAverageRating\";\nimport { UserContext } from \"src/userContext\";\nimport DropzoneSignup from \"src/Molecules/DropzoneSignup\";\nexport default function ProfileTopBox({\n  errorQuery,\n  showRatings\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const _useXsSize = useXsSize(),\n        md_size_memo = _useXsSize.md_size_memo;\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const _useState3 = useState({\n    picture: context.picture\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formValue = _useState4[0],\n        setFormValue = _useState4[1];\n\n  const _useMutation = useMutation(UPDATE_USER),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        updateUser = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error,\n        data = _useMutation2$.data;\n\n  const inputName = useRef(null);\n  const inputEmail = useRef(null);\n  const inputDescription = useRef(null);\n\n  const _useAverageRating = useAverageRating(showRatings),\n        averageRating = _useAverageRating.averageRating;\n\n  const _ref = data ? data.updateUser : {\n    dataOut: undefined\n  },\n        dataOut = _ref.dataOut;\n\n  const _ref2 = data ? data.updateUser : {\n    errorOut: undefined\n  },\n        errorOut = _ref2.errorOut;\n\n  useEffect(() => {\n    if (dataOut && dataOut.success) {\n      context.getLoggedInUser();\n    }\n  }, [dataOut]);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    console.log(\"Updating: \", inputName.current.value, inputEmail.current.value, inputDescription.current.value);\n    let load = {\n      name: inputName.current.value,\n      email: inputEmail.current.value,\n      description: inputDescription.current.value,\n      picture: formValue ? formValue.picture : context.picture\n    };\n    let empty = findEmpty(load);\n    empty = empty.map(item => \"\".concat(item, \" is Empty\"));\n    if (load.password != load.password2) empty.push(\"Not matching passwords\");\n    console.log(\"Empty ones: \", empty);\n\n    if (empty.length == 0) {\n      updateUser({\n        variables: load,\n        refetchQueries: () => [{\n          query: PROFILE_DATA,\n          variables: {\n            host_id: context._id\n          }\n        }]\n      });\n      setExpanded(!expanded);\n    } else {// setFEerrors(empty);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.mainWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    alignItems: \"center\",\n    style: {\n      // backgroundImage: `url(${context.picture})`,\n      background: md_size_memo ? null : \"linear-gradient(90deg, rgba(29,47,94,1) 0%, rgba(123,81,117,1) 100%)\"\n    },\n    className: classes.mainGridContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    style: {\n      paddingTop: md_size_memo ? 80 : 40\n    },\n    className: classes.profileTopBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, expanded ? null : React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    src: context.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.centerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, context.name)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.centerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, context.email)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.centerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    name: \"simple-controlled\",\n    readOnly: true,\n    value: averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.oneLineDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, context.description), React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.oneLineDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, errorQuery && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"ERROR while loading profile data\"))))), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.descWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    direction: \"column\",\n    className: classes.gridDropzone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(DropzoneSignup, {\n    setFormValue: setFormValue,\n    formValue: formValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Name\",\n    variant: \"filled\",\n    defaultValue: context.name,\n    inputRef: inputName,\n    className: classes.textFieldDesc,\n    multiline: true,\n    rows: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Email\",\n    variant: \"filled\",\n    disabled: true,\n    defaultValue: context.email,\n    inputRef: inputEmail,\n    className: classes.textFieldDesc,\n    multiline: true,\n    rows: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Description\",\n    variant: \"filled\",\n    defaultValue: context.description,\n    inputRef: inputDescription,\n    className: classes.textFieldDesc,\n    multiline: true,\n    rows: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.saveButton,\n    onClick: e => {\n      onSubmitHandler(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"SAVE\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.outButton,\n    onClick: () => {\n      history.push(\"/signout\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"SIGN OUT\")))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    onClick: () => {\n      setExpanded(!expanded);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.settingsButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(CreateIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), expanded ? React.createElement(ExpandLessIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }) : React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })))))))))));\n}\nconst useStyles = makeStyles(theme => ({\n  mainWrap: {\n    backgroundColor: \"rgba(0,0,0,0.1)\"\n  },\n  mainContainer: {\n    padding: 0\n  },\n  mainGridContainer: {\n    wieght: \"100%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    // filter: \"blur(4px),\"\n    color: \"white\"\n  },\n  profileTopBox: {\n    zIndex: 2,\n    // background: \"linear-gradient(90deg, rgba(76,113,209,1) 0%, rgba(162,88,222,1) 100%)\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingBottom: 5\n  },\n  gridDropzone: {\n    width: \"100%\",\n    margin: theme.spacing(3, 0, 2)\n  },\n  oneLineDescription: {\n    width: \"100%\",\n    marginTop: 10,\n    padding: 10,\n    textAlign: \"center\",\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  centerText: {\n    textAlign: \"center\",\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: \"100%\",\n    marginBottom: 10\n  },\n  descWrap: {\n    width: \"100%\",\n    padding: 5\n  },\n  textFieldDesc: {\n    margin: 5,\n    width: \"100%\",\n    borderRadius: 5,\n    backgroundColor: \"rgba(255,255,255,0.6)\"\n  },\n  standardHeading: {\n    width: '100%',\n    fontWeight: 500,\n    // color: \"lightGrey\",\n    textAlign: 'left',\n    padding: 10,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  avatar: {\n    height: 80,\n    width: 80,\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n  outButton: {\n    color: \"white\",\n    fontWeight: 600,\n    height: 40,\n    width: 120,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n  settingsButton: {\n    color: \"white\",\n    height: 40,\n    width: 120,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n  saveButton: {\n    color: \"white\",\n    height: 40,\n    width: \"100%\",\n    marginTop: 10,\n    marginBottom: 15,\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/profile/ProfileTopBox.js"],"names":["React","useState","useContext","useRef","useEffect","Container","Grid","ExitToAppIcon","Typography","IconButton","LockOutlinedIcon","CreateIcon","ExpandMoreIcon","ExpandLessIcon","Avatar","Button","Rating","Collapse","TextField","makeStyles","NavLink","useHistory","useMutation","UPDATE_USER","PROFILE_DATA","LOGIN","findEmpty","useXsSize","useAverageRating","UserContext","DropzoneSignup","ProfileTopBox","errorQuery","showRatings","classes","useStyles","history","md_size_memo","context","expanded","setExpanded","picture","formValue","setFormValue","updateUser","loading","error","data","inputName","inputEmail","inputDescription","averageRating","dataOut","undefined","errorOut","success","getLoggedInUser","onSubmitHandler","e","preventDefault","console","log","current","value","load","name","email","description","empty","map","item","password","password2","push","length","variables","refetchQueries","query","host_id","_id","mainWrap","mainContainer","background","mainGridContainer","paddingTop","profileTopBox","avatar","width","centerText","oneLineDescription","descWrap","gridDropzone","textFieldDesc","saveButton","buttonContainer","outButton","settingsButton","theme","backgroundColor","padding","wieght","backgroundSize","backgroundPosition","color","zIndex","height","paddingBottom","margin","spacing","marginTop","textAlign","whiteSpace","overflow","textOverflow","marginBottom","borderRadius","standardHeading","fontWeight","palette","secondary","main","boxShadow"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport { UPDATE_USER } from \"src/Services/GQL/UPDATE_USER\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { LOGIN } from \"src/Services/GQL/LOGIN\";\n\nimport { findEmpty } from \"src/Services/functions\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport { useAverageRating } from \"src/Hooks/useAverageRating\";\nimport { UserContext } from \"src/userContext\";\n\nimport DropzoneSignup from \"src/Molecules/DropzoneSignup\";\n\nexport default function ProfileTopBox({ errorQuery, showRatings }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { md_size_memo } = useXsSize();\n  const { context } = useContext(UserContext);\n  const [expanded, setExpanded] = useState(false)\n  const [formValue, setFormValue] = useState({ picture: context.picture });\n  const [updateUser, { loading, error, data }] = useMutation(UPDATE_USER);\n\n  const inputName = useRef(null);\n  const inputEmail = useRef(null);\n  const inputDescription = useRef(null);\n\n  const { averageRating } = useAverageRating(showRatings)\n\n  const { dataOut } = data ? data.updateUser : { dataOut: undefined };\n  const { errorOut } = data ? data.updateUser : { errorOut: undefined };\n  \n\n  useEffect(() => {\n    if(dataOut && dataOut.success){\n      context.getLoggedInUser()\n    }\n  }, [dataOut])\n\n\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    console.log(\"Updating: \", inputName.current.value, inputEmail.current.value, inputDescription.current.value)\n    let load = {\n      name: inputName.current.value,\n      email: inputEmail.current.value,\n      description: inputDescription.current.value,\n      picture: formValue ? formValue.picture : context.picture,\n      };\n    let empty = findEmpty(load);\n    empty = empty.map(item => `${item} is Empty`)\n    if(load.password != load.password2) empty.push(\"Not matching passwords\")\n\n    console.log(\"Empty ones: \", empty);\n\n  if (empty.length == 0) {\n      updateUser({\n        variables: load,\n        refetchQueries: () => [\n          {\n            query: PROFILE_DATA,\n            variables: { host_id: context._id }\n          }\n        ]\n      })\n      setExpanded(!expanded)\n  } else {\n      // setFEerrors(empty);\n    }\n}\n\n\n\n\n  return (\n    <div className={classes.mainWrap}>\n    <Container\n    maxWidth=\"sm\"\n    className={classes.mainContainer}\n  >\n      <Grid\n        container\n        justify=\"center\"\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{\n          // backgroundImage: `url(${context.picture})`,\n          background: md_size_memo\n            ? null\n            : \"linear-gradient(90deg, rgba(29,47,94,1) 0%, rgba(123,81,117,1) 100%)\"\n        }}\n        className={classes.mainGridContainer}\n      >\n        <Grid\n          item\n          style={{ paddingTop: md_size_memo ? 80 : 40 }}\n          className={classes.profileTopBox}\n        >\n          {expanded ? null \n          :\n          <>\n          <Grid container direction=\"row\" justify=\"center\">\n          <Grid item>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Avatar className={classes.avatar} src={context.picture}>\n                  <LockOutlinedIcon />\n                </Avatar>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n          <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ width: \"100%\" }}\n        >\n          <Grid item xs={12}>\n            <Typography component=\"h1\" variant=\"h5\" className={classes.centerText}>\n              {context.name}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" className={classes.centerText}>\n              {context.email}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" className={classes.centerText}>\n              <Rating name=\"simple-controlled\" readOnly value={averageRating} />\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" className={classes.oneLineDescription}>\n                {context.description}\n            </Typography>\n            <Typography variant=\"body1\" className={classes.oneLineDescription}>\n                {errorQuery && <h1>ERROR while loading profile data</h1>}\n            </Typography>\n          </Grid>\n        </Grid>\n          </>\n          }\n\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <Grid item className={classes.descWrap}>\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n            className={classes.gridDropzone}\n          >\n            <Grid item>\n              <DropzoneSignup setFormValue={setFormValue} formValue={formValue} />\n            </Grid>\n          </Grid>\n        {/* <Typography variant=\"body1\" className={classes.standardHeading}>NAME</Typography> */}\n              <TextField\n                      id=\"outlined-basic\"\n                      label=\"Name\"\n                      variant=\"filled\"\n                      defaultValue={context.name}\n                      inputRef={inputName}\n                      className={classes.textFieldDesc}\n                      multiline\n                      rows=\"1\"\n                    />\n        {/* <Typography variant=\"body1\" className={classes.standardHeading}>EMAIL</Typography> */}\n        <TextField\n                      id=\"outlined-basic\"\n                      label=\"Email\"\n                      variant=\"filled\"\n                      disabled\n                      defaultValue={context.email}\n                      inputRef={inputEmail}\n                      className={classes.textFieldDesc}\n                      multiline\n                      rows=\"1\"\n                    />\n        {/* <Typography variant=\"body1\" className={classes.standardHeading}>DESCRIPTION</Typography> */}\n        <TextField\n                id=\"outlined-basic\"\n                label=\"Description\"\n                variant=\"filled\"\n                defaultValue={context.description}\n                inputRef={inputDescription}\n                className={classes.textFieldDesc}\n                multiline\n                rows=\"4\"\n              />\n        <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.saveButton}\n                  onClick={e => {\n                    onSubmitHandler(e)\n                  }}\n                >\n                  SAVE\n                </Button>\n              </Grid>\n        </ Collapse>\n        <Grid item xs={12}>\n              <Grid container className={classes.buttonContainer}>\n              <Grid item xs={6}>\n                <Grid container justify=\"center\">\n                  <Grid item>\n                    <Button\n                      className={classes.outButton}\n                      onClick={() => {history.push(`/signout`); }}\n                    >\n                      SIGN OUT\n                      {/* <ExitToAppIcon /> */}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={6}>\n                <Grid container justify=\"center\">\n                  <Grid item onClick={() => {setExpanded(!expanded)}}>\n                  <Button className={classes.settingsButton}>\n                    <CreateIcon />\n                    \n                    {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                  </Button>\n                </Grid>\n                </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n       \n        </Grid>\n      </Grid>\n    </Container>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainWrap: {\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n  },\n  mainContainer: {\n    padding: 0\n  },\n  mainGridContainer: {\n    wieght: \"100%\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    // filter: \"blur(4px),\"\n    color: \"white\"\n  },\n  profileTopBox: {\n    zIndex: 2,\n    // background: \"linear-gradient(90deg, rgba(76,113,209,1) 0%, rgba(162,88,222,1) 100%)\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingBottom: 5\n  },\n  gridDropzone: {\n    width: \"100%\",\n    margin: theme.spacing(3, 0, 2)\n  },\n  oneLineDescription: {\n    width: \"100%\",\n    marginTop: 10,\n    padding: 10,\n    textAlign: \"center\",\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  centerText:{\n    textAlign: \"center\",\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: \"100%\",\n    marginBottom: 10\n  },\n  descWrap: {\n    width: \"100%\",\n    padding: 5,\n  },\n  textFieldDesc: {\n    margin: 5,\n    width: \"100%\",\n    borderRadius: 5,\n    backgroundColor: \"rgba(255,255,255,0.6)\"\n  },\n  standardHeading: {\n    width: '100%',\n    fontWeight: 500,\n    // color: \"lightGrey\",\n    textAlign: 'left',\n    padding: 10,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  avatar: {\n    height: 80,\n    width: 80,\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n  outButton: {\n    color: \"white\",\n    fontWeight: 600,\n    height: 40,\n    width: 120,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n  settingsButton: {\n    color: \"white\",\n    height: 40,\n    width: 120,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n  saveButton: {\n    color: \"white\",\n    height: 40,\n    width: \"100%\",\n    marginTop: 10,\n    marginBottom: 15,\n    boxShadow: \"4px 3px 5px 0px rgba(0,0,0,0.5)\"\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}