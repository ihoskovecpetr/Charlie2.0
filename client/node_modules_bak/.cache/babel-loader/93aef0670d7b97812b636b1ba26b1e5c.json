{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/UpperStripe.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { useScrollY } from \"../Hooks/useScrollY\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { UserContext } from \"src/userContext\";\nimport { useCountUnseenBookingsRatings } from \"src/Hooks/useCountUnseenBookingsRatings\";\nimport Spinner from \"./Spinner\";\nimport CharlieLogo from \"src/Images/charlie-logo.png\";\nimport SearchInput from \"src/Atoms/UpperStripeAndDrawer/SearchInput\";\n\nfunction UpperStripe({\n  drawerWidth,\n  location,\n  handleDrawerToggle,\n  ListOfNames,\n  ListOfUrls,\n  userApp,\n  loading\n}) {\n  const _useContext = useContext(UserContext),\n        context = _useContext.context;\n\n  let history = useHistory();\n\n  const _useScrollY = useScrollY({\n    y: 10\n  }),\n        displayPlay_memo = _useScrollY.displayPlay_memo;\n\n  useCountUnseenBookingsRatings();\n  const useStyles = makeStyles(theme => ({\n    upperWrap: {\n      position: \"fixed\",\n      top: 0,\n      width: \"100vw\"\n    },\n    containerMain: {\n      paddingLeft: 5,\n      paddingRight: 5,\n      zIndex: 100\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\"\n      }\n    },\n    hideSmall: {\n      display: \"block\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\"\n      }\n    },\n    showSmall: {\n      display: \"none\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    appBar: {\n      position: \"fixed\",\n      // width: \"100%\",\n      // zIndex: 100,\n      // marginLeft: drawerWidth,\n      color: \"black\"\n    },\n    buttonToBeHidden: {\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n        display: \"none\",\n        fontWeight: \"400 !important\"\n      },\n      fontWeight: \"550 !important\"\n    },\n    ButtonAvatar: {\n      marginLeft: \"10px\",\n      marginRight: \"10px\"\n    },\n    buttonNavi: {\n      fontWeight: \"600 !important\",\n      float: \"right\"\n    },\n    ellipsName: {\n      maxWidth: 100,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      textAlign: \"center\"\n    },\n    middle: {\n      position: 'absolute',\n      zIndex: 1,\n      left: 0,\n      right: 0,\n      margin: '0 auto'\n    }\n  }));\n  const classes = useStyles();\n  const pathSet = location.pathname.split(\"/\");\n  const disabledFromOut = window.eventId ? true : false;\n  return React.createElement(React.Fragment, null, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    className: classes.appBar,\n    style: {\n      backgroundColor: pathSet[1] === 'map' || pathSet[1] === 'profile' || displayPlay_memo ? \"rgba(255,255,255,0.6)\" : \"transparent\",\n      boxShadow: !displayPlay_memo && \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"xl\",\n    className: classes.containerMain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    justify: \"space-between\" // Add it here :)\n    ,\n    alignItems: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"start\",\n    onClick: handleDrawerToggle,\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, ListOfNames.map((text, index) => React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"inherit\",\n    className: classes.buttonToBeHidden,\n    disabled: disabledFromOut,\n    onClick: () => {\n      history.push(\"/\".concat(ListOfUrls[index]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, text != \"Charlie\" && React.createElement(React.Fragment, null, text), text == \"Charlie\" && React.createElement(Avatar, {\n    className: classes.avatarCharlie,\n    alt: \"Remy Sharp\",\n    src: CharlieLogo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"inherit\",\n    className: clsx(classes.buttonToBeHidden, classes.showSmall),\n    disabled: disabledFromOut,\n    onClick: () => {\n      history.push(\"/search\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"SEARCH\")), React.createElement(Grid, {\n    item: true,\n    className: classes.hideSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.buttonToBeHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, !userApp && context && context.name && React.createElement(Button, {\n    color: \"inherit\",\n    className: classes.buttonNavi,\n    disabled: disabledFromOut,\n    onClick: () => history.push(\"/profile\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.ellipsName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, context.name, \" X\"), React.createElement(Avatar, {\n    alt: \"Remy SharpXX\",\n    src: context.picture,\n    className: classes.ButtonAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"x\")), !userApp.success && !context.name && React.createElement(Badge, {\n    color: \"primary\",\n    badgeContent: React.createElement(\"p\", {\n      style: {\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"START HERE\")),\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"inherit\",\n    className: classes.buttonNavi,\n    disabled: disabledFromOut,\n    onClick: () => {\n      history.push(\"/signin\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"SIGN IN\", loading ? React.createElement(\"div\", {\n    className: classes.ButtonAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    height: 30,\n    width: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: classes.ButtonAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    color: \"disabled\",\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })))), userApp.success && React.createElement(Button, {\n    color: \"inherit\",\n    className: classes.buttonNavi,\n    disabled: disabledFromOut,\n    onClick: () => {\n      history.push(\"/profile\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: classes.ellipsName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, userApp.name), React.createElement(Badge, {\n    badgeContent: context.countUnseenBookings + context.countUnseenRatings // className={classes.badge} \n    ,\n    color: \"secondary\" // style={{ backgroundColor: event.decided ? \"grey\" : \"red\"}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Remy Sharping\",\n    src: userApp.picture,\n    className: classes.ButtonAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"x\")))))))));\n}\n\nexport default withRouter(UpperStripe);","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/UpperStripe.js"],"names":["React","useContext","useEffect","makeStyles","useTheme","Container","CssBaseline","AppBar","Grid","Toolbar","IconButton","MenuIcon","Typography","TextField","Input","InputAdornment","Button","Avatar","AccountCircle","Badge","useScrollY","withRouter","useHistory","clsx","UserContext","useCountUnseenBookingsRatings","Spinner","CharlieLogo","SearchInput","UpperStripe","drawerWidth","location","handleDrawerToggle","ListOfNames","ListOfUrls","userApp","loading","context","history","y","displayPlay_memo","useStyles","theme","upperWrap","position","top","width","containerMain","paddingLeft","paddingRight","zIndex","menuButton","marginRight","spacing","breakpoints","up","display","hideSmall","down","showSmall","appBar","color","buttonToBeHidden","fontWeight","ButtonAvatar","marginLeft","buttonNavi","float","ellipsName","maxWidth","whiteSpace","overflow","textOverflow","textAlign","middle","left","right","margin","classes","pathSet","pathname","split","disabledFromOut","window","eventId","backgroundColor","boxShadow","map","text","index","push","avatarCharlie","name","picture","success","vertical","horizontal","countUnseenBookings","countUnseenRatings"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport { useScrollY } from \"../Hooks/useScrollY\";\n\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\"\n\nimport { UserContext } from \"src/userContext\";\nimport { useCountUnseenBookingsRatings } from \"src/Hooks/useCountUnseenBookingsRatings\";\n\nimport Spinner from \"./Spinner\";\nimport CharlieLogo from \"src/Images/charlie-logo.png\"\nimport SearchInput from \"src/Atoms/UpperStripeAndDrawer/SearchInput\"\n\n\nfunction UpperStripe({drawerWidth, location, handleDrawerToggle, ListOfNames, ListOfUrls, userApp, loading}) {\n  const { context } = useContext(UserContext);\n  let history = useHistory(); \n  const {displayPlay_memo} = useScrollY({y: 10})\n  useCountUnseenBookingsRatings()\n\n  const useStyles = makeStyles(theme => ({\n    upperWrap: {\n      position: \"fixed\",\n      top: 0,\n      width: \"100vw\"\n    },\n    containerMain: {\n      paddingLeft: 5,\n      paddingRight: 5,\n      zIndex: 100,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\"\n      }\n    },\n    hideSmall:{\n      display: \"block\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\"\n      }\n    },\n    showSmall:{\n      display: \"none\",\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    appBar: {\n      position: \"fixed\",\n      // width: \"100%\",\n      // zIndex: 100,\n      // marginLeft: drawerWidth,\n      color: \"black\",\n    },\n    buttonToBeHidden: {\n      [theme.breakpoints.down(\"xs\")]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        display: \"none\",\n        fontWeight: \"400 !important\"\n      },\n      fontWeight: \"550 !important\",\n    },\n    ButtonAvatar: {\n      marginLeft: \"10px\",\n      marginRight: \"10px\"\n    },\n    buttonNavi: {\n      fontWeight: \"600 !important\",\n      float: \"right\",\n    },\n    ellipsName: {\n      maxWidth: 100,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      textAlign: \"center\",\n    },\n    middle: {\n      position: 'absolute',\n      zIndex: 1,\n      left: 0,\n      right: 0,\n      margin: '0 auto',\n    },\n  }));\n  const classes = useStyles();\n\n  const pathSet = location.pathname.split(\"/\");\n  const disabledFromOut = window.eventId ? true : false\n\n  return (\n    <>\n    <CssBaseline />\n      <AppBar \n              className={classes.appBar} \n              style={{\n                backgroundColor: pathSet[1] === 'map' || pathSet[1] === 'profile' || displayPlay_memo ? \"rgba(255,255,255,0.6)\" : \"transparent\" ,\n                boxShadow: !displayPlay_memo && \"none\"\n                }}>\n        <Container maxWidth=\"xl\" className={classes.containerMain}>\n        <Toolbar>\n          <Grid\n            justify=\"space-between\" // Add it here :)\n            alignItems=\"center\"\n            container\n          >\n            <Grid item>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Grid container alignItems=\"center\">\n                {ListOfNames.map((text, index) => (\n                  <Grid item>\n                    <Button\n                      color=\"inherit\"\n                      className={classes.buttonToBeHidden}\n                      disabled={disabledFromOut}\n                      onClick={() => {history.push(`/${ListOfUrls[index]}`)}}\n                    >\n                      {text != \"Charlie\" && <>{text}</> }\n                      {text == \"Charlie\" && <Avatar className={classes.avatarCharlie}\n                                                    alt=\"Remy Sharp\"\n                                                    src={CharlieLogo}\n                                                  />}\n                    </Button>\n                  </Grid>\n                    ))}\n                  <Grid item>\n                    <Button\n                      color=\"inherit\"\n                      className={clsx(classes.buttonToBeHidden , classes.showSmall)}\n                      disabled={disabledFromOut}\n                      onClick={() => {history.push(`/search`)}}\n                    >\n                      SEARCH\n                    </Button>\n                  </Grid>\n                  <Grid item className={classes.hideSmall}>\n                    <div className={classes.buttonToBeHidden}>\n                      <SearchInput />\n                    </div>\n                  </Grid>\n              </Grid>\n                            \n            </Grid>\n            <Grid item>\n              {!userApp && context && context.name && (\n                    <Button color=\"inherit\" \n                            className={classes.buttonNavi} \n                            disabled={disabledFromOut}\n                            onClick={() => history.push(`/profile`)}>\n                      <p className={classes.ellipsName}>{context.name} X</p>\n                      <Avatar\n                        alt=\"Remy SharpXX\"\n                        src={context.picture}\n                        className={classes.ButtonAvatar}\n                      >\n                        x\n                      </Avatar>\n                    </Button>\n              )}\n\n              {!userApp.success && !context.name && (\n                <Badge\n                  color=\"primary\"\n                  badgeContent={\n                    <p style={{ margin: 0 }}>\n                      <b>START HERE</b>\n                    </p>\n                  }\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"left\"\n                  }}\n                >\n                  <Button \n                      color=\"inherit\" \n                      className={classes.buttonNavi}\n                      disabled={disabledFromOut}\n                      onClick={() => {history.push(\"/signin\")}}>\n                      SIGN IN\n                      {loading ? (\n                          <div className={classes.ButtonAvatar}>\n                            <Spinner height={30} width={30} />\n                          </div>\n                        ) : (\n                          <div className={classes.ButtonAvatar}>\n                            <AccountCircle color=\"disabled\" fontSize=\"large\" />\n                          </div>\n                        )}\n                  </Button>\n                </Badge>\n              )}\n              {userApp.success && (\n                  <Button color=\"inherit\" \n                          className={classes.buttonNavi}\n                          disabled={disabledFromOut}\n                          onClick={() => {history.push(\"/profile\")}}>\n                    \n                    <p className={classes.ellipsName}>{userApp.name}</p>\n                    <Badge\n                        badgeContent={context.countUnseenBookings + context.countUnseenRatings} \n                        // className={classes.badge} \n                        color=\"secondary\"\n                        // style={{ backgroundColor: event.decided ? \"grey\" : \"red\"}}\n                        >\n                    <Avatar\n                      alt=\"Remy Sharping\"\n                      src={userApp.picture}\n                      className={classes.ButtonAvatar}\n                    >\n                      x\n                    </Avatar>\n                    </ Badge>\n                  </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Toolbar>\n        </Container>\n      </AppBar>\n      </>\n  );\n}\n\nexport default withRouter(UpperStripe);\n"]},"metadata":{},"sourceType":"module"}