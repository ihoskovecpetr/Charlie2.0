{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/ScrollAnimated.js\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Transition } from 'react-spring/renderprops';\nexport default function ScrollAnimated({\n  height,\n  width\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        toggle = _useState2[0],\n        setToggle = _useState2[1];\n\n  const useStyles = makeStyles(theme => ({\n    mainContainer: {\n      width: \"100%\"\n    },\n    mainItem: {\n      border: \"2px solid #E8045D\",\n      padding: 4,\n      borderRadius: 15\n    },\n    centerWrap: {\n      position: \"relative\",\n      width: width,\n      height: height\n    },\n    sliderCenter: {\n      width: width,\n      height: height * 0.5,\n      backgroundColor: \"#E8045D\",\n      borderRadius: width * 0.5\n    }\n  }));\n  const classes = useStyles();\n  useEffect(() => {\n    let timr = setTimeout(() => {\n      setToggle(!toggle);\n    }, 4000);\n    return () => {\n      clearInterval(timr);\n    };\n  }, [toggle]);\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.mainItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.centerWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Transition, {\n    items: toggle,\n    from: {\n      position: 'absolute',\n      opacity: 0,\n      top: height * 0.5,\n      transitionDuration: \"3s\"\n    },\n    enter: {\n      opacity: 1,\n      top: 0\n    },\n    leave: {\n      opacity: 0,\n      top: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, toggle => toggle ? props => React.createElement(\"div\", {\n    style: props,\n    className: classes.sliderCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }) //ðŸ˜„\n  : props => React.createElement(\"div\", {\n    style: props,\n    className: classes.sliderCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) //ðŸ¤ª\n  ))));\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/ScrollAnimated.js"],"names":["React","useState","useEffect","Grid","makeStyles","Transition","ScrollAnimated","height","width","toggle","setToggle","useStyles","theme","mainContainer","mainItem","border","padding","borderRadius","centerWrap","position","sliderCenter","backgroundColor","classes","timr","setTimeout","clearInterval","opacity","top","transitionDuration","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {Transition} from 'react-spring/renderprops'\n\nexport default function ScrollAnimated({height, width}) {\n  const [toggle, setToggle] = useState(false);\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        width: \"100%\"\n    },\n    mainItem:{\n        border: \"2px solid #E8045D\",\n        padding: 4,\n        borderRadius: 15\n    },\n    centerWrap:{\n        position: \"relative\",\n        width: width,\n        height: height,\n    },\n    sliderCenter:{\n        width: width,\n        height: (height * 0.5),\n        backgroundColor: \"#E8045D\",\n        borderRadius: (width * 0.5)\n    },\n}))\n\nconst classes = useStyles();\n\nuseEffect(() => {\n    let timr = setTimeout(() => {\n      setToggle(!toggle)\n    },4000)\n\n    return() => {\n        clearInterval(timr);\n      };\n\n  }, [toggle])\n\n  return (\n    <Grid container justify=\"center\" className={classes.mainContainer}>\n        <Grid item className={classes.mainItem}>\n            <div className={classes.centerWrap}>\n                <Transition\n                    items={toggle}\n                    from={{ position: 'absolute', opacity: 0, top: (height * 0.5), transitionDuration: \"3s\" }}\n                    enter={{ opacity: 1, top: 0 }}\n                    leave={{ opacity: 0, top: 0 }}>\n                    {toggle =>\n                        toggle\n                        ? props => <div style={props} className={classes.sliderCenter}></div> //ðŸ˜„\n                        : props => <div style={props} className={classes.sliderCenter}></div> //ðŸ¤ª\n                    }\n                </Transition>\n            </div>\n        </Grid>\n\n    </Grid>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}