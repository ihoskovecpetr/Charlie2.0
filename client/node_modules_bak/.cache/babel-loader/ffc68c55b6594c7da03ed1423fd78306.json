{"ast":null,"code":"function cameraName(label) {\n  var clean = label.replace(/\\s*\\([0-9a-f]+(:[0-9a-f]+)?\\)\\s*$/, '');\n  return clean || label || null;\n}\n\nclass Camera {\n  constructor(id, name) {\n    this.id = id;\n    this.name = name;\n    this._stream = null;\n  }\n\n  async start() {\n    var constraints = {\n      audio: false,\n      video: {\n        mandatory: {\n          sourceId: this.id,\n          minWidth: 600,\n          maxWidth: 800,\n          minAspectRatio: 1.6\n        },\n        optional: []\n      }\n    };\n    this._stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return window.URL.createObjectURL(this._stream);\n  }\n\n  stop() {\n    if (!this._stream) {\n      return;\n    }\n\n    for (let stream of this._stream.getVideoTracks()) {\n      stream.stop();\n    }\n\n    this._stream = null;\n  }\n\n  static async getCameras() {\n    var devices = await navigator.mediaDevices.enumerateDevices();\n    return devices.filter(d => d.kind === 'videoinput').map(d => new Camera(d.deviceId, cameraName(d.label)));\n  }\n\n}\n\nmodule.exports = Camera;","map":null,"metadata":{},"sourceType":"script"}