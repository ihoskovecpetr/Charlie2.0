{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/WindowEventSnackbar.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  spinnerWrap: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\nexport default function WindowEventSnackbar(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  return React.createElement(React.Fragment, null, window.eventId && React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: window.eventId ? true : false,\n    autoHideDuration: 6000,\n    message: \"Event: \".concat(window.eventId),\n    action: React.createElement(React.Fragment, null, React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: () => {\n        history.replace(\"/event/\".concat(window.eventId));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"OPEN\"), React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: () => {\n        window.eventId = null;\n        setOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      fontSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/WindowEventSnackbar.js"],"names":["React","useState","makeStyles","Snackbar","CloseIcon","Button","IconButton","useHistory","useStyles","theme","spinnerWrap","display","marginLeft","spacing","WindowEventSnackbar","props","classes","history","open","setOpen","window","eventId","vertical","horizontal","replace"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEX,iBAAa;AACXC,MAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFF;AADwB,CAAL,CAAN,CAA5B;AASA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,MAAIS,OAAO,GAAGV,UAAU,EAAxB;;AAFiD,oBAGzBN,QAAQ,CAAC,IAAD,CAHiB;AAAA;AAAA,QAG1CiB,IAH0C;AAAA,QAGpCC,OAHoC;;AAMjD,SACE,0CACCC,MAAM,CAACC,OAAP,IAAkB,oBAAC,QAAD;AACT,IAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADL;AAKT,IAAA,IAAI,EAAEH,MAAM,CAACC,OAAP,GAAiB,IAAjB,GAAwB,KALrB;AAMT,IAAA,gBAAgB,EAAE,IANT;AAOT,IAAA,OAAO,mBAAYD,MAAM,CAACC,OAAnB,CAPE;AAQT,IAAA,MAAM,EACJ,0CACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,IAAI,EAAC,OAA/B;AAAuC,MAAA,OAAO,EAAE,MAAM;AAACJ,QAAAA,OAAO,CAACO,OAAR,kBAA0BJ,MAAM,CAACC,OAAjC;AAA4C,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,UAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AACc,oBAAW,OADzB;AAEc,MAAA,KAAK,EAAC,SAFpB;AAGc,MAAA,OAAO,EAAE,MAAM;AACXD,QAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAF,QAAAA,OAAO,CAAC,KAAD,CAAP;AACC,OANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAJF,CATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,CADF;AA6BD","sourcesContent":["import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  spinnerWrap: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function WindowEventSnackbar(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const [open, setOpen] = useState(true);\n\n\n  return (\n    <>\n    {window.eventId && <Snackbar\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              open={window.eventId ? true : false}\n              autoHideDuration={6000}\n              message={`Event: ${window.eventId}`}\n              action={\n                <>\n                  <Button color=\"secondary\" size=\"small\" onClick={() => {history.replace(`/event/${window.eventId}`)}}>\n                    OPEN\n                  </Button>\n                  <IconButton   size=\"small\" \n                                aria-label=\"close\" \n                                color=\"inherit\" \n                                onClick={() => {\n                                    window.eventId = null\n                                    setOpen(false)\n                                    }} >\n                    <CloseIcon fontSize=\"small\" />\n                  </IconButton>\n                </>\n              }\n            />}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}