{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/AcceptPage.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation markEntered($event_id: ID!, $user_id: ID!) {\\n    markEntered(event_id: $event_id, user_id: $user_id) {\\n      success\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query acceptShowBooking($user_id: ID!, $event_id: ID!) {\\n    acceptShowBooking(user_id: $user_id, event_id: $event_id) {\\n      dataOut {\\n        confirmed\\n        cancelled\\n        decided\\n        entered\\n        message\\n        response\\n        user {\\n          _id\\n          name\\n          email\\n          picture\\n          description\\n        }\\n        event {\\n          _id\\n          name\\n        }\\n      }\\n      errorOut {\\n        name\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\";\nimport { withRouter, useHistory, NavLink } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { UserContext } from \"src/userContext\";\nimport LoginFirstBoard from \"src/Atoms/LoginFirstBoard\";\nimport Spinner from \"src/Atoms/Spinner\";\nimport UserCardPlay from \"src/Molecules/play/UserCardPlay\";\nimport AcceptDecide from \"src/Atoms/Accept/AcceptDecide\";\nimport AcceptEntered from \"src/Atoms/Accept/AcceptEntered\";\nimport AcceptDeclined from \"src/Atoms/Accept/AcceptDeclined\";\nconst ACCEPT_SHOW_BOOKING = gql(_templateObject());\nconst MARK_ENTERED = gql(_templateObject2());\nlet dataMock;\n\nfunction AcceptPage(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  const _useQuery = useQuery(ACCEPT_SHOW_BOOKING, {\n    variables: {\n      event_id: props.match.params.event_id,\n      user_id: props.match.params.user_id\n    },\n    //skip: !id,\n    //pollInterval: 500\n    fetchPolicy: \"network-only\"\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data,\n        refetch = _useQuery.refetch;\n\n  const _useMutation = useMutation(MARK_ENTERED),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        markEntered = _useMutation2[0],\n        markEnteredStates = _useMutation2[1];\n\n  console.log(\"Data: \", data);\n\n  const _ref = data ? data.acceptShowBooking : {\n    dataOut: undefined\n  },\n        dataOut = _ref.dataOut;\n\n  const _ref2 = data ? data.acceptShowBooking : {\n    errorOut: undefined\n  },\n        errorOut = _ref2.errorOut;\n\n  console.log(\"dataOut: \", dataOut);\n  console.log(\"errorOut: \", errorOut);\n\n  const markEnteredHandler = () => {\n    markEntered({\n      variables: {\n        user_id: props.match.params.user_id,\n        event_id: props.match.params.event_id\n      },\n      refetchQueries: () => [{\n        query: PROFILE_DATA,\n        variables: {\n          host_id: context._id\n        }\n      }, {\n        query: ACCEPT_SHOW_BOOKING,\n        variables: {\n          event_id: props.match.params.event_id,\n          user_id: props.match.params.user_id\n        }\n      }]\n    });\n  };\n\n  const Out = () => {\n    context.deleteToken();\n    context.getLoggedInUser();\n  };\n\n  console.log(\"markEnteredStates: \", markEnteredStates);\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, context._id ? React.createElement(\"div\", {\n    className: classes.contentWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, loading && \"LOADING..\", dataOut && React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.mainGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.mainSign,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, !markEnteredStates.data && !dataOut.entered && \"CONFIRM ENTRANCE\", dataOut.entered && \"ENTERED\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(UserCardPlay, {\n    author: dataOut.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, loading && \"LOADING..\", !markEnteredStates.data && !dataOut.entered && React.createElement(AcceptDecide, {\n    markEnteredStates: markEnteredStates,\n    markEnteredHandler: markEnteredHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), dataOut.entered && React.createElement(AcceptEntered, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))), dataOut.entered && React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => history.push('/'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"MAIN MENU\"))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    className: classes.mainGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, !dataOut && !errorOut && React.createElement(Spinner, {\n    height: 50,\n    width: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), !dataOut && errorOut && React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.messagetText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, errorOut[0].message)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, errorOut[0].name == \"Not Author Error\" && React.createElement(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    onClick: Out,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \" SIGN OUT \"))))) : React.createElement(Grid, {\n    justify: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(LoginFirstBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    marginTop: 20,\n    paddingLeft: 40,\n    paddingRight: 40,\n    borderRadius: 20\n  },\n  contentWrap: {\n    backgroundColor: \"rgba(0,0,0,0.15)\",\n    paddingTop: 10,\n    borderRadius: 10,\n    padding: 10\n  },\n  mainGrid: {},\n  mainSign: {\n    margin: 10\n  },\n  messagetText: {\n    textAlign: \"center\"\n  }\n}));\nexport default withRouter(AcceptPage);","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/AcceptPage.js"],"names":["React","useState","useContext","useEffect","CssBaseline","makeStyles","useTheme","Button","Container","Grid","IconButton","Avatar","Typography","withRouter","useHistory","NavLink","useMutation","useQuery","gql","PROFILE_DATA","UserContext","LoginFirstBoard","Spinner","UserCardPlay","AcceptDecide","AcceptEntered","AcceptDeclined","ACCEPT_SHOW_BOOKING","MARK_ENTERED","dataMock","AcceptPage","props","classes","useStyles","history","context","setContext","variables","event_id","match","params","user_id","fetchPolicy","loading","error","data","refetch","markEntered","markEnteredStates","console","log","acceptShowBooking","dataOut","undefined","errorOut","markEnteredHandler","refetchQueries","query","host_id","_id","Out","deleteToken","getLoggedInUser","mainContainer","contentWrap","mainGrid","mainSign","entered","user","push","messagetText","message","name","theme","marginTop","paddingLeft","paddingRight","borderRadius","backgroundColor","paddingTop","padding","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { withRouter, useHistory, NavLink } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { UserContext } from \"src/userContext\";\n\nimport LoginFirstBoard from \"src/Atoms/LoginFirstBoard\";\nimport Spinner from \"src/Atoms/Spinner\";\nimport UserCardPlay from \"src/Molecules/play/UserCardPlay\";\n\nimport AcceptDecide from \"src/Atoms/Accept/AcceptDecide\";\nimport AcceptEntered from \"src/Atoms/Accept/AcceptEntered\";\nimport AcceptDeclined from \"src/Atoms/Accept/AcceptDeclined\";\n\nconst ACCEPT_SHOW_BOOKING = gql`\n  query acceptShowBooking($user_id: ID!, $event_id: ID!) {\n    acceptShowBooking(user_id: $user_id, event_id: $event_id) {\n      dataOut {\n        confirmed\n        cancelled\n        decided\n        entered\n        message\n        response\n        user {\n          _id\n          name\n          email\n          picture\n          description\n        }\n        event {\n          _id\n          name\n        }\n      }\n      errorOut {\n        name\n        message\n      }\n    }\n  }\n`;\n\nconst MARK_ENTERED = gql`\n  mutation markEntered($event_id: ID!, $user_id: ID!) {\n    markEntered(event_id: $event_id, user_id: $user_id) {\n      success\n    }\n  }\n`;\n\nlet dataMock;\n\nfunction AcceptPage(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const { context, setContext } = useContext(UserContext);\n  const { loading, error, data, refetch } = useQuery(ACCEPT_SHOW_BOOKING, {\n    variables: {event_id: props.match.params.event_id, user_id: props.match.params.user_id},\n    //skip: !id,\n    //pollInterval: 500\n    fetchPolicy: \"network-only\"\n  });\n  const [markEntered, markEnteredStates] = useMutation(MARK_ENTERED);\n  console.log(\"Data: \", data);\n  const { dataOut } = data ? data.acceptShowBooking : { dataOut: undefined };\n  const { errorOut } = data ? data.acceptShowBooking : { errorOut: undefined };\n\n  console.log(\"dataOut: \", dataOut)\n  console.log(\"errorOut: \", errorOut)\n\n  const markEnteredHandler = () => {\n\n    markEntered({\n      variables: {\n        user_id: props.match.params.user_id,\n        event_id: props.match.params.event_id\n      },\n      refetchQueries: () => [\n        {\n          query: PROFILE_DATA,\n          variables: { host_id: context._id }\n        },\n        {\n          query: ACCEPT_SHOW_BOOKING,\n          variables: {event_id: props.match.params.event_id, user_id: props.match.params.user_id}\n        }\n      ]\n    });\n  }\n\n  const Out = () => {\n    context.deleteToken()\n    context.getLoggedInUser()\n  };\n\n\n  console.log(\"markEnteredStates: \", markEnteredStates);\n\n    return (\n            <Grid\n              container\n              justify=\"center\"\n            >\n              <Container maxWidth=\"sm\" className={classes.mainContainer}>\n                {context._id ? \n              <div className={classes.contentWrap}>\n              {loading && \"LOADING..\"}\n              {dataOut && <Grid container justify=\"center\" className={classes.mainGrid}>\n                      <Grid item>\n                      <Grid container direction=\"column\" alignItems=\"center\">\n                      <Grid item>\n                        <Typography variant=\"h6\" className={classes.mainSign}>\n                          {!markEnteredStates.data && !dataOut.entered && \"CONFIRM ENTRANCE\"}\n                          {dataOut.entered && \"ENTERED\"}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} >\n                        <UserCardPlay author={dataOut.user} />\n                      </Grid>\n                              \n                      </Grid>\n                      </Grid>\n                          <Grid item xs={12}>\n                            <Grid container justify=\"center\">\n                              <Grid item>\n                              {loading && \"LOADING..\"}\n                              {!markEnteredStates.data && !dataOut.entered && <AcceptDecide markEnteredStates={markEnteredStates} \n                                                                        markEnteredHandler={markEnteredHandler}/>}\n                              {dataOut.entered && <AcceptEntered />}\n                              </Grid>\n                            </Grid>\n                            {dataOut.entered && <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={() => history.push('/')}>MAIN MENU</Button>}\n                          </Grid>\n                      </Grid> \n              }\n              <Grid container justify=\"center\" direction=\"column\" className={classes.mainGrid}>\n                              {!dataOut && !errorOut && <Spinner height={50} width={50} />}\n              {!dataOut && errorOut && <>\n                <Grid item>\n                  <Typography variant=\"h6\" className={classes.messagetText}>\n                    {errorOut[0].message}\n                  </Typography>\n                </Grid>\n                <Grid item>{errorOut[0].name == \"Not Author Error\" && <Button color=\"primary\" fullWidth onClick={Out}> SIGN OUT </Button>}</Grid>\n                </>\n                }\n              </Grid>\n\n              </div>\n              :\n              <Grid justify=\"center\" container>\n                <Grid item >\n                  <LoginFirstBoard />\n                </Grid>\n              </Grid>  \n              }\n              \n              </ Container>\n            </Grid>\n    );\n\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    marginTop: 20,\n    paddingLeft: 40,\n    paddingRight: 40,\n    borderRadius: 20\n  },\n  contentWrap: {\n    backgroundColor: \"rgba(0,0,0,0.15)\",\n    paddingTop: 10,\n    borderRadius: 10,\n    padding: 10\n  },\n  mainGrid: {\n  },\n  mainSign:{\n    margin: 10\n  },\n  messagetText: {\n    textAlign: \"center\"\n  },\n\n}));\n\nexport default withRouter(AcceptPage);\n"]},"metadata":{},"sourceType":"module"}