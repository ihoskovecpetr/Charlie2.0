{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/play/PlayPageMap.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query showRatings($event_id: ID!) {\\n    showRatings(event_id: $event_id) {\\n      guest {\\n        picture\\n        name\\n      }\\n      message\\n      ratingValue\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Gallery from \"react-grid-gallery\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RoomIcon from '@material-ui/icons/Room';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { NavLink } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport PlayMap from \"./Carousel/PlayMap\";\nimport RatingCard from \"./RatingCardPlay\";\nconst EVENT_RATINGS = gql(_templateObject());\n\nconst PlayPageMap = ({\n  event,\n  paddingSides\n}) => {\n  const classes = useStyles();\n  const ratings = useQuery(EVENT_RATINGS, {\n    variables: {\n      event_id: event._id\n    } //skip: !id,\n    //pollInterval: 500\n\n  });\n  return React.createElement(Grid, {\n    container: true,\n    style: {\n      padding: paddingSides ? paddingSides : '20px'\n    },\n    className: classes.mapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: classes.gmapsLink,\n    target: \"blank\",\n    href: \"https://www.google.com/maps?q=\".concat(event.geometry.coordinates[1], \",\").concat(event.geometry.coordinates[0], \"&ll=\").concat(event.geometry.coordinates[1], \",\").concat(event.geometry.coordinates[0], \"&z=17\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, event.address, React.createElement(RoomIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(PlayMap, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    direction: \"row\",\n    className: classes.ratingAuthorContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nconst useStyles = makeStyles(theme => ({\n  mapContainer: {\n    width: '100%',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    borderRadius: 20\n  },\n  gmapsLink: {\n    textDecoration: \"underline\",\n    color: \"aqua\"\n  },\n  ratingAuthorContainer: {\n    padding: '0px',\n    paddingTop: '5px',\n    paddingBottom: '0px',\n    width: '100%',\n    color: 'white'\n  },\n  standardHeading: {\n    fontWeight: 500,\n    color: \"grey\",\n    textAlign: 'left'\n  },\n  authorContainer: {\n    width: \"100%\"\n  },\n  thisLine: {\n    height: '1px',\n    width: '100%',\n    marginTop: '2px',\n    backgroundColor: \"#707070\"\n  }\n}));\nexport default React.memo(PlayPageMap);","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/play/PlayPageMap.js"],"names":["React","Grid","Gallery","Typography","RoomIcon","makeStyles","useMutation","useQuery","NavLink","gql","PlayMap","RatingCard","EVENT_RATINGS","PlayPageMap","event","paddingSides","classes","useStyles","ratings","variables","event_id","_id","padding","mapContainer","gmapsLink","geometry","coordinates","address","ratingAuthorContainer","theme","width","paddingTop","paddingBottom","borderRadius","textDecoration","color","standardHeading","fontWeight","textAlign","authorContainer","thisLine","height","marginTop","backgroundColor","memo"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Gallery from \"react-grid-gallery\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RoomIcon from '@material-ui/icons/Room';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { NavLink } from \"react-router-dom\";\n\nimport gql from \"graphql-tag\";\n\nimport PlayMap from \"./Carousel/PlayMap\";\nimport RatingCard from \"./RatingCardPlay\";\n\nconst EVENT_RATINGS = gql`\n  query showRatings($event_id: ID!) {\n    showRatings(event_id: $event_id) {\n      guest {\n        picture\n        name\n      }\n      message\n      ratingValue\n      createdAt\n    }\n  }\n`;\n\nconst PlayPageMap = ({event, paddingSides}) => {\n    const classes = useStyles();\n    const ratings = useQuery(EVENT_RATINGS, {\n      variables: { event_id: event._id }\n      //skip: !id,\n      //pollInterval: 500\n    });\n\n    return(\n        <Grid container \n            style={{padding: paddingSides ? paddingSides : '20px'}}\n              className={classes.mapContainer}>\n        <a  className={classes.gmapsLink} \n            target=\"blank\"\n            href={`https://www.google.com/maps?q=${event.geometry.coordinates[1]},${event.geometry.coordinates[0]}&ll=${event.geometry.coordinates[1]},${event.geometry.coordinates[0]}&z=17`}>\n              {event.address}\n              <RoomIcon />\n        </a>\n        <PlayMap event={event} />\n        <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n          direction=\"row\"\n          className={classes.ratingAuthorContainer}\n        >\n        </Grid>\n\n      </Grid>  \n    )\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  mapContainer: {\n    width: '100%',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    borderRadius: 20\n  },\n  gmapsLink:{\n    textDecoration: \"underline\",\n    color: \"aqua\"\n  },\n  ratingAuthorContainer: {\n      padding: '0px',\n      paddingTop: '5px',\n      paddingBottom: '0px',\n      width: '100%',\n      color: 'white'\n    },\n    standardHeading: {\n      fontWeight: 500,\n      color: \"grey\",\n      textAlign: 'left'\n    },\n    authorContainer: {\n      width: \"100%\"\n    },\n    thisLine:{\n      height: '1px',\n      width: '100%',\n      marginTop: '2px',\n      backgroundColor: \"#707070\"\n    },\n  }));\n\nexport default React.memo(PlayPageMap)"]},"metadata":{},"sourceType":"module"}