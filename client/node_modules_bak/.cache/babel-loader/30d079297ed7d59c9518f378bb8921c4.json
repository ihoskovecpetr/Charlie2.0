{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Play/ListTopHalf.js\";\nimport React, { useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RoomIcon from '@material-ui/icons/Room';\nimport EventIcon from '@material-ui/icons/Event';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport countdown from \"countdown\";\nimport { UserContext } from \"src/userContext\";\nimport { displayDate } from \"src/Services/transform-services\";\nimport { useCountDistance } from \"src/Hooks/useCountDistance\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\n\nconst ListTopHalf = ({\n  event,\n  context,\n  transparent\n}) => {\n  console.log(\"ListTopHalf: cotnext: \", context);\n  const classes = useStyles();\n\n  const _useCountdown = useCountdown(event.dateStart, 1),\n        counteddownDate = _useCountdown.counteddownDate;\n\n  const _useXsSize = useXsSize(),\n        xs_size_memo = _useXsSize.xs_size_memo,\n        md_size_memo = _useXsSize.md_size_memo;\n\n  const distance = useCountDistance(event.geometry.coordinates[1], event.geometry.coordinates[0], context.geolocationObj && context.geolocationObj.lat, context.geolocationObj && context.geolocationObj.lng, \"K\");\n  let bgColor = \"transparent\";\n\n  if (md_size_memo) {\n    bgColor = \"rgba(0,0,0,0.1)\";\n  } else {\n    bgColor = \"rgba(0,0,0,0.1)\"; // \"white\" //\"rgba(0,0,0,0.05)\"\n  }\n\n  if (transparent) {\n    bgColor = \"transparent\";\n  }\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.blackBackContainer,\n    style: {\n      backgroundColor: bgColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    className: classes.nameAndPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.mainHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, event.name)), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.headerPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, event.price, \" \", event.currency), React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.headerPerPerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"/per person\"))), React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.addressGreyWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.addressGrey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, event.address)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(RoomIcon, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.timeDistanceWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.timeDistance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\".concat(Math.floor(distance * 10) / 10, \" Km\")), \" away\"))), React.createElement(\"p\", {\n    className: classes.thisLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.addressGreyWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.addressGrey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, event.dateStart && displayDate(event.dateStart))), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(EventIcon, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.timeDistanceWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.timeDistance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, counteddownDate))));\n};\n\nconst useStyles = makeStyles(theme => ({\n  blackBackContainer: {\n    borderRadius: 15,\n    marginTop: 20,\n    marginBottom: 20,\n    padding: 5,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  thisLine: {\n    height: '1px',\n    width: '80%',\n    margin: 0,\n    marginTop: '2px',\n    marginBottom: '2px',\n    marginLeft: '10%',\n    marginRight: '10%',\n    backgroundColor: \"#707070\"\n  },\n  nameAndPrice: {\n    marginBottom: 25\n  },\n  mainHeader: {\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: 600,\n    padding: 10\n  },\n  headerPrice: {\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  headerPerPerson: {\n    fontSize: 16,\n    fontWeight: 300,\n    textAlign: \"center\"\n  },\n  addressGreyWrap: {\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    textAlign: \"center\"\n  },\n  timeDistanceWrap: {\n    padding: 10,\n    paddingRight: 20\n  },\n  timeDistance: {\n    fontSize: 16,\n    textAlign: \"left\"\n  },\n  descWrap: {\n    padding: 20\n  }\n}));\nexport default ListTopHalf;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Play/ListTopHalf.js"],"names":["React","useContext","Grid","Typography","RoomIcon","EventIcon","makeStyles","countdown","UserContext","displayDate","useCountDistance","useXsSize","useCountdown","ListTopHalf","event","context","transparent","console","log","classes","useStyles","dateStart","counteddownDate","xs_size_memo","md_size_memo","distance","geometry","coordinates","geolocationObj","lat","lng","bgColor","blackBackContainer","backgroundColor","nameAndPrice","mainHeader","name","headerPrice","price","currency","headerPerPerson","addressGreyWrap","addressGrey","address","timeDistanceWrap","timeDistance","Math","floor","thisLine","theme","borderRadius","marginTop","marginBottom","padding","paddingTop","paddingBottom","height","width","margin","marginLeft","marginRight","textAlign","fontSize","fontWeight","paddingLeft","paddingRight","descWrap"],"mappings":"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","sourcesContent":["import React, {useContext} from \"react\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RoomIcon from '@material-ui/icons/Room';\nimport EventIcon from '@material-ui/icons/Event';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport countdown from \"countdown\";\n\nimport { UserContext } from \"src/userContext\";\nimport { displayDate } from \"src/Services/transform-services\";\nimport { useCountDistance } from \"src/Hooks/useCountDistance\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\n\n\nconst ListTopHalf = ({event, context, transparent}) => {\n  console.log(\"ListTopHalf: cotnext: \", context)\n    const classes = useStyles();\n    const { counteddownDate } = useCountdown(event.dateStart, 1)\n    const { xs_size_memo, md_size_memo } = useXsSize();\n    const distance = useCountDistance(event.geometry.coordinates[1], event.geometry.coordinates[0], context.geolocationObj && context.geolocationObj.lat, context.geolocationObj && context.geolocationObj.lng, \"K\")\n\n    let bgColor = \"transparent\"\n\n    if(md_size_memo){\n      bgColor = \"rgba(0,0,0,0.1)\"\n    } else {\n      bgColor = \"rgba(0,0,0,0.1)\" // \"white\" //\"rgba(0,0,0,0.05)\"\n    }\n    if(transparent){\n        bgColor = \"transparent\"\n    }\n\n    return(\n        <Grid item xs={12} \n              className={classes.blackBackContainer} \n              style={{backgroundColor: bgColor }}>\n            <Grid container \n                  alignItems=\"center\"\n                  justify=\"center\"\n                  className={classes.nameAndPrice} \n                  >\n              <Grid item xs={8}>\n                <Typography variant=\"h4\" className={classes.mainHeader}>\n                {event.name}\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography variant=\"h4\" className={classes.headerPrice}>\n                {event.price} {event.currency}\n                </Typography>\n                <Typography variant=\"h4\" className={classes.headerPerPerson}>\n                /per person\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container \n                  alignItems=\"center\">\n              <Grid item xs={6} className={classes.addressGreyWrap}>\n                <Typography variant=\"subtitle1\" className={classes.addressGrey}>\n                {event.address}\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <Grid container justify=\"center\">\n                    <Grid item>\n                        <RoomIcon color=\"secondary\" />\n                    </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={4} className={classes.timeDistanceWrap}>\n                <Typography variant=\"subtitle1\" className={classes.timeDistance}>\n                <b>{`${Math.floor(distance * 10)/10} Km`}</b> away\n                </Typography>\n              </Grid>\n            </Grid>\n            <p className={classes.thisLine}></p>\n            <Grid container \n                  alignItems=\"center\"\n                  justify=\"center\">\n              <Grid item xs={6} className={classes.addressGreyWrap}>\n                <Typography variant=\"subtitle1\" className={classes.addressGrey}>\n                  {event.dateStart && displayDate(event.dateStart)}\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <Grid container justify=\"center\">\n                    <Grid item>\n                        <EventIcon color=\"secondary\" />\n                    </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={4} className={classes.timeDistanceWrap}>\n                <Typography variant=\"subtitle1\" className={classes.timeDistance}>\n                {counteddownDate}\n                </Typography>\n              </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n   \n\n      blackBackContainer:{\n        borderRadius: 15,\n        marginTop: 20,\n        marginBottom: 20,\n        padding: 5,\n        paddingTop: 20,\n        paddingBottom: 20,\n      },\n      thisLine:{\n        height: '1px',\n        width: '80%',\n        margin: 0,\n        marginTop: '2px',\n        marginBottom: '2px',\n        marginLeft: '10%',\n        marginRight: '10%',\n        backgroundColor: \"#707070\"\n      },\n      nameAndPrice:{\n        marginBottom: 25\n      },\n      mainHeader:{\n        textAlign: \"center\",\n        fontSize: 30,\n        fontWeight: 600,\n        padding: 10,\n      },\n      headerPrice:{\n        fontSize: 20,\n        textAlign: \"center\",\n      },\n      headerPerPerson:{\n        fontSize: 16,\n        fontWeight: 300,\n        textAlign: \"center\",\n      },\n      addressGreyWrap:{\n        padding: 10,\n        paddingLeft: 20,\n        paddingRight: 20,\n        textAlign: \"center\",\n      },\n      timeDistanceWrap:{\n        padding: 10,\n        paddingRight: 20\n      },\n      timeDistance:{\n        fontSize: 16,\n        textAlign: \"left\",\n      },\n      descWrap:{\n        padding: 20\n      },\n  }));\n\nexport default ListTopHalf"]},"metadata":{},"sourceType":"module"}