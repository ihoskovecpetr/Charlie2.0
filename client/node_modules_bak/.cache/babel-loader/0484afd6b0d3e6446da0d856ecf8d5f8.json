{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  mutation confirmBooking(\\n    $event_id: ID!\\n    $user_id: ID!\\n    $decision: Boolean\\n    $response: String\\n  ) {\\n    confirmBooking(\\n      event_id: $event_id\\n      user_id: $user_id\\n      decision: $decision\\n      response: $response\\n    ) {\\n      success\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,useContext,useRef}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Grid from\"@material-ui/core/Grid\";import Avatar from\"@material-ui/core/Avatar\";import IconButton from\"@material-ui/core/IconButton\";import ExpandMoreIcon from\"@material-ui/icons/ExpandMore\";import DoneIcon from'@material-ui/icons/Done';import CloseIcon from'@material-ui/icons/Close';import TextField from'@material-ui/core/TextField';import{useMutation}from\"@apollo/react-hooks\";import gql from\"graphql-tag\";import{UserContext}from\"src/userContext\";import{PROFILE_DATA}from\"src/Services/GQL/PROFILE_DATA\";import{useXsSize}from\"src/Hooks/useXsSize\";import ConfirmPNG from\"src/Images/confirm_pink.png\";import ClosePNG from\"src/Images/close_black.png\";import Spinner from\"src/Atoms/Spinner\";var CONFIRM_BOOKING=gql(_templateObject());export default function BookingAcceptInput(_ref){var booking=_ref.booking;var classes=useStyles();var _useXsSize=useXsSize(),xs_size_memo=_useXsSize.xs_size_memo,md_size_memo=_useXsSize.md_size_memo;var _useContext=useContext(UserContext),context=_useContext.context,setContext=_useContext.setContext;var _useMutation=useMutation(CONFIRM_BOOKING),_useMutation2=_slicedToArray(_useMutation,2),confirmBooking=_useMutation2[0],confirmStates=_useMutation2[1];var inputDescription=useRef(null);var handleConfirmRequest=function handleConfirmRequest(decision){confirmBooking({variables:{user_id:booking.user._id,event_id:booking.event._id,decision:decision,response:inputDescription.current.value},refetchQueries:function refetchQueries(){return[{query:PROFILE_DATA,variables:{host_id:context._id}}// here refetch play data and event data\n];}});};return React.createElement(React.Fragment,null,!booking.decided&&React.createElement(Grid,{container:true,alignItems:\"center\",className:classes.decideContainer},React.createElement(Grid,{item:true,xs:2},React.createElement(Grid,{container:true,justify:\"center\"},React.createElement(Grid,{item:true},React.createElement(IconButton,{\"aria-label\":\"settings\",className:classes.iconBtn,disabled:confirmStates.loading?true:false,onClick:function onClick(){handleConfirmRequest(false);}},confirmStates.loading?React.createElement(Spinner,{height:20,width:20}):React.createElement(Avatar,{src:ClosePNG,className:classes.btnAvatar}))))),React.createElement(Grid,{item:true,xs:8},React.createElement(TextField,{id:\"outlined-basic\",label:\"Response...\",variant:\"outlined\",disabled:confirmStates.loading?true:false,inputRef:inputDescription,className:classes.textField,style:{width:true?\"100%\":\"300px\"}})),React.createElement(Grid,{item:true,xs:2},React.createElement(Grid,{container:true,justify:\"center\"},React.createElement(Grid,{item:true},React.createElement(IconButton,{\"aria-label\":\"settings\",className:classes.iconBtn,disabled:confirmStates.loading?true:false,onClick:function onClick(){handleConfirmRequest(true);}},confirmStates.loading?React.createElement(Spinner,{height:20,width:20}):React.createElement(Avatar,{src:ConfirmPNG,className:classes.btnAvatar})))))));}var useStyles=makeStyles(function(theme){return{decideContainer:{marginBottom:10},textField:{backgroundColor:\"white\",borderRadius:10},iconBtn:{backgroundColor:\"rgba(255,255,255,0.4)\"},btnAvatar:{height:20,width:20}};});","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/BookingAcceptInput.js"],"names":["React","useState","useEffect","useContext","useRef","makeStyles","Grid","Avatar","IconButton","ExpandMoreIcon","DoneIcon","CloseIcon","TextField","useMutation","gql","UserContext","PROFILE_DATA","useXsSize","ConfirmPNG","ClosePNG","Spinner","CONFIRM_BOOKING","BookingAcceptInput","booking","classes","useStyles","xs_size_memo","md_size_memo","context","setContext","confirmBooking","confirmStates","inputDescription","handleConfirmRequest","decision","variables","user_id","user","_id","event_id","event","response","current","value","refetchQueries","query","host_id","decided","decideContainer","iconBtn","loading","btnAvatar","textField","width","theme","marginBottom","backgroundColor","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { UserContext } from \"src/userContext\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\n\nimport ConfirmPNG from \"src/Images/confirm_pink.png\";\nimport ClosePNG from \"src/Images/close_black.png\";\nimport Spinner from \"src/Atoms/Spinner\";\n\nconst CONFIRM_BOOKING = gql`\n  mutation confirmBooking(\n    $event_id: ID!\n    $user_id: ID!\n    $decision: Boolean\n    $response: String\n  ) {\n    confirmBooking(\n      event_id: $event_id\n      user_id: $user_id\n      decision: $decision\n      response: $response\n    ) {\n      success\n    }\n  }\n`;\n\nexport default function BookingAcceptInput({ booking }) {\n  const classes = useStyles();\n  const { xs_size_memo, md_size_memo } = useXsSize();\n  const { context, setContext } = useContext(UserContext);\n  const [confirmBooking, confirmStates] = useMutation(CONFIRM_BOOKING);\n\n  const inputDescription = useRef(null);\n\n  const handleConfirmRequest = (decision) => {\n    confirmBooking({\n      variables: {\n        user_id: booking.user._id,\n        event_id: booking.event._id,\n        decision: decision,\n        response: inputDescription.current.value\n      },\n      refetchQueries: () => [\n        {\n          query: PROFILE_DATA,\n          variables: { host_id: context._id }\n        },\n        // here refetch play data and event data\n      ]\n    });\n  };\n\n  return (\n        <>\n      {!booking.decided && (\n        <Grid container alignItems=\"center\" className={classes.decideContainer}>\n          <Grid item xs={2}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <IconButton aria-label=\"settings\" \n                            className={classes.iconBtn} \n                            disabled={confirmStates.loading ? true : false}\n                            onClick={() => {handleConfirmRequest(false)}}>\n                              {confirmStates.loading \n                              ? <Spinner height={20} width={20} /> \n                              : <Avatar src={ClosePNG} className={classes.btnAvatar} />}\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={8}>\n                <TextField\n                        id=\"outlined-basic\"\n                        label=\"Response...\"\n                        variant=\"outlined\"\n                        disabled={confirmStates.loading ? true : false}\n                        inputRef={inputDescription}\n                        className={classes.textField}\n                        style={{ width: true ? \"100%\" : \"300px\" }}\n                      />\n          </Grid>\n          <Grid item xs={2}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <IconButton aria-label=\"settings\" \n                            className={classes.iconBtn} \n                            disabled={confirmStates.loading ? true : false}\n                            onClick={() => {handleConfirmRequest(true)}}>\n                  {confirmStates.loading \n                              ? <Spinner height={20} width={20} /> \n                              : <Avatar src={ConfirmPNG} className={classes.btnAvatar} />}\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  decideContainer: {\n    marginBottom: 10\n  },\n  textField: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  iconBtn: {\n    backgroundColor: \"rgba(255,255,255,0.4)\"\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  },\n\n}));\n"]},"metadata":{},"sourceType":"module"}