{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/menu/screen_3.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation newestUserBookings($user_id: ID!) {\\n    newestUserBookings(user_id: $user_id) {\\n      event {\\n        _id\\n        name\\n        description\\n        dateStart\\n        imagesArr {\\n          caption\\n          src\\n          thumbnail\\n          thumbnailHeight\\n          thumbnailWidth\\n          scaletwidth\\n          marginLeft\\n          vwidth\\n        }\\n        author {\\n          _id\\n          name\\n          picture\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Animated } from \"react-animated-css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\"; // import \"../../Pages/Menu.css\";\n\nimport { UserContext } from \"../../userContext\";\nimport Spinner from \"../../Atoms/Spinner\";\nimport LoginFirstBoard from \"src/Atoms/LoginFirstBoard\";\nimport EventCard from \"../../Atoms/EventCard\";\nconst USER_NEW_BOOKINGS = gql(_templateObject());\nexport default function Screen3(props) {\n  const classes = useStyles();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context;\n\n  const _useMutation = useMutation(USER_NEW_BOOKINGS, {\n    variables: {\n      user_id: context._id\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        newBookingsArr = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error,\n        data = _useMutation2$.data;\n\n  let Sorted = [];\n\n  if (context.success) {\n    {\n      !loading && !data && newBookingsArr();\n    }\n  }\n\n  useEffect(() => {\n    if (context.success && context._id) {\n      newBookingsArr();\n    }\n  }, [context]); // if (props.idx === 3) {\n  //   console.log(\"Ano podminka\");\n  // }\n\n  if (data) {\n    Sorted = data.newestUserBookings.filter(item => {\n      if (item.event) return true;\n      return false;\n    });\n\n    if (Sorted.length >= 2) {\n      Sorted = data.newestUserBookings.sort(function (a, b) {\n        let aDate = new Date(a.event.dateStart);\n        let bDate = new Date(b.event.dateStart);\n\n        if (aDate > bDate) {\n          return 1;\n        }\n\n        if (aDate < bDate) {\n          return -1;\n        }\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"section s3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.container_2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    id: \"s_3_id\" // style={{ display: \"none\" }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Animated, {\n    animationIn: \"bounceInLeft\",\n    animationOut: \"fadeOut\",\n    animationInDelay: 500,\n    animationInDuration: 1000,\n    isVisible: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.defaultHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"YOUR \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"NEXT\"), \" EVENT\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    justify: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, !loading && !data && React.createElement(LoginFirstBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), loading && React.createElement(Spinner, {\n    height: 100,\n    width: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), Sorted.map((event, index) => {\n    if (new Date(event.event.dateStart) >= new Date()) {\n      return React.createElement(EventCard, {\n        event: event.event,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"You have got no upconning event\");\n    }\n  }))))));\n}\nconst useStyles = makeStyles(theme => ({\n  container_2: {\n    color: \"black\",\n    paddingTop: 80,\n    paddingBottom: 80\n  },\n  defaultHeader: {\n    color: theme.palette.charliePink,\n    fontWeight: 300,\n    paddingTop: 20,\n    fontSize: 20,\n    margin: 10\n  },\n  containerIframe: {\n    width: \"100%\"\n  },\n  iFrame: {\n    width: \"100%\",\n    height: 250\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/menu/screen_3.js"],"names":["React","useState","useEffect","useContext","useMemo","Container","Grid","Typography","Animated","makeStyles","useMutation","useQuery","gql","UserContext","Spinner","LoginFirstBoard","EventCard","USER_NEW_BOOKINGS","Screen3","props","classes","useStyles","context","variables","user_id","_id","newBookingsArr","loading","error","data","Sorted","success","newestUserBookings","filter","item","event","length","sort","a","b","aDate","Date","dateStart","bDate","container_2","defaultHeader","map","index","theme","color","paddingTop","paddingBottom","palette","charliePink","fontWeight","fontSize","margin","containerIframe","width","iFrame","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Animated } from \"react-animated-css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\n// import \"../../Pages/Menu.css\";\nimport { UserContext } from \"../../userContext\";\n\nimport Spinner from \"../../Atoms/Spinner\";\nimport LoginFirstBoard from \"src/Atoms/LoginFirstBoard\";\nimport EventCard from \"../../Atoms/EventCard\";\n\nconst USER_NEW_BOOKINGS = gql`\n  mutation newestUserBookings($user_id: ID!) {\n    newestUserBookings(user_id: $user_id) {\n      event {\n        _id\n        name\n        description\n        dateStart\n        imagesArr {\n          caption\n          src\n          thumbnail\n          thumbnailHeight\n          thumbnailWidth\n          scaletwidth\n          marginLeft\n          vwidth\n        }\n        author {\n          _id\n          name\n          picture\n        }\n      }\n    }\n  }\n`;\n\n\nexport default function Screen3(props) {\n  const classes = useStyles();\n  const { context } = useContext(UserContext);\n  const [newBookingsArr, { loading, error, data }] = useMutation(\n    USER_NEW_BOOKINGS,\n    {\n      variables: { user_id: context._id }\n    }\n  );\n\n  let Sorted = [];\n\n  if (context.success) {\n    {\n      !loading && !data && newBookingsArr();\n    }\n  }\n\n  useEffect(() => {\n    if (context.success && context._id) {\n        newBookingsArr()\n    }\n\n  }, [context]);\n\n  // if (props.idx === 3) {\n  //   console.log(\"Ano podminka\");\n  // }\n  if (data) {\n    Sorted = data.newestUserBookings.filter(item => {\n      if(item.event)return true\n      return false})\n\n    if(Sorted.length >= 2){\n          Sorted = data.newestUserBookings.sort(function(a, b) {\n          let aDate = new Date(a.event.dateStart);\n          let bDate = new Date(b.event.dateStart);\n          if (aDate > bDate) {\n            return 1;\n          }\n          if (aDate < bDate) {\n            return -1;\n          }\n        });\n    }\n\n  }\n\n  return (\n    <div className=\"section s3\">\n      <Container maxWidth=\"sm\" className={classes.container_2}>\n        <Grid item id=\"s_3_id\" // style={{ display: \"none\" }}\n        >\n          <Animated\n            animationIn=\"bounceInLeft\"\n            animationOut=\"fadeOut\"\n            animationInDelay={500}\n            animationInDuration={1000}\n            isVisible={true}\n          >\n            <Typography className={classes.defaultHeader}>\n              YOUR <b>NEXT</b> EVENT\n            </Typography>\n          </Animated>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid justify=\"center\" container>\n            <Grid item >\n              {!loading && !data && <LoginFirstBoard />}\n              {loading && <Spinner height={100} width={100} />}\n              {Sorted.map((event, index) => {\n                if (new Date(event.event.dateStart) >= new Date()) {\n                  return <EventCard event={event.event} key={index} />;\n                } else {\n                  return <p>You have got no upconning event</p>;\n                }\n              })}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  container_2: {\n    color: \"black\",\n    paddingTop: 80,\n    paddingBottom: 80\n  },\n\n  defaultHeader: {\n    color: theme.palette.charliePink,\n    fontWeight: 300,\n    paddingTop: 20,\n    fontSize: 20,\n    margin: 10\n  },\n  containerIframe: {\n    width: \"100%\"\n  },\n  iFrame: {\n    width: \"100%\",\n    height: 250\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}