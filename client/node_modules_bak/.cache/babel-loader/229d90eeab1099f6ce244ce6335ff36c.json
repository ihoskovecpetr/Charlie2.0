{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/MapSettingsPanel.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport Spinner from \"../Atoms/Spinner\";\nconst useStyles = makeStyles(theme => ({\n  settingsPanel: {\n    position: \"absolute\",\n    top: 0,\n    height: 120,\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.2)\",\n    zIndex: 10\n  },\n  textField: {\n    margin: 0\n  },\n  dateInput: {},\n  inputTexFld: {\n    color: \"white\",\n    border: \"1px solid white\",\n    fontWeight: 600\n  }\n}));\nexport default function MapSettingsPanel(props) {\n  const classes = useStyles();\n  let den = new Date(props.dateState);\n\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen); // props.setWorkDate(prev => {\n    //   return { ...prev, date: isoDen };\n    // });\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    alignItems: \"flex-end\",\n    alignContent: \"flex-end\",\n    justify: \"flex-end\",\n    className: classes.settingsPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"flex-end\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.loading && React.createElement(Spinner, {\n    height: 40,\n    width: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: props.loading ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(RemoveIcon, {\n    fontSize: \"large\",\n    color: props.loading ? \"disabled\" : \"secondary\",\n    onClick: () => {\n      minusDay();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"datetime-local\" //label=\"Choose day\"\n    ,\n    variant: \"outlined\",\n    type: \"date\",\n    color: \"secondary\",\n    margin: \"dense\",\n    value: props.dateState,\n    className: classes.textField,\n    InputProps: {\n      className: classes.inputTexFld\n    },\n    InputLabelProps: {\n      shrink: true,\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: props.loading ? true : false,\n    onClick: () => {\n      plusDay();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    fontSize: \"large\",\n    color: props.loading ? \"disabled\" : \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/MapSettingsPanel.js"],"names":["React","makeStyles","TextField","Grid","IconButton","AddIcon","RemoveIcon","Spinner","useStyles","theme","settingsPanel","position","top","height","width","background","zIndex","textField","margin","dateInput","inputTexFld","color","border","fontWeight","MapSettingsPanel","props","classes","den","Date","dateState","plusDay","setDate","getDate","isoDen","toISOString","split","clearMarkers","handleScrollLocTime","minusDay","loading","className","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nimport Spinner from \"../Atoms/Spinner\";\n\nconst useStyles = makeStyles(theme => ({\n  settingsPanel: {\n    position: \"absolute\",\n    top: 0,\n    height: 120,\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.2)\",\n    zIndex: 10\n  },\n  textField: {\n    margin: 0\n  },\n  dateInput: {},\n  inputTexFld: {\n    color: \"white\",\n    border: \"1px solid white\",\n    fontWeight: 600\n  }\n}));\n\nexport default function MapSettingsPanel(props) {\n  const classes = useStyles();\n  let den = new Date(props.dateState);\n\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n    // props.setWorkDate(prev => {\n    //   return { ...prev, date: isoDen };\n    // });\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"flex-end\"\n        alignContent=\"flex-end\"\n        justify=\"flex-end\"\n        className={classes.settingsPanel}\n      >\n        <Grid item>\n          <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"flex-end\"\n            justify=\"flex-end\"\n          >\n            <Grid item>\n              {props.loading && <Spinner height={40} width={40} />}\n            </Grid>\n            <Grid item>\n              <IconButton disabled={props.loading ? true : false}>\n                <RemoveIcon\n                  fontSize=\"large\"\n                  color={props.loading ? \"disabled\" : \"secondary\"}\n                  onClick={() => {\n                    minusDay();\n                  }}\n                />\n              </IconButton>\n            </Grid>\n\n            <Grid item>\n              <TextField\n                id=\"datetime-local\"\n                //label=\"Choose day\"\n                variant=\"outlined\"\n                type=\"date\"\n                color=\"secondary\"\n                margin=\"dense\"\n                value={props.dateState}\n                className={classes.textField}\n                InputProps={{\n                  className: classes.inputTexFld\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                  color: \"white\"\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <IconButton\n                disabled={props.loading ? true : false}\n                onClick={() => {\n                  plusDay();\n                }}\n              >\n                <AddIcon\n                  fontSize=\"large\"\n                  color={props.loading ? \"disabled\" : \"secondary\"}\n                />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}