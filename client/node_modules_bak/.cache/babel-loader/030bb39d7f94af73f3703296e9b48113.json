{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/BookingAcceptInput.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation confirmBooking(\\n    $event_id: ID!\\n    $user_id: ID!\\n    $decision: Boolean\\n    $response: String\\n  ) {\\n    confirmBooking(\\n      event_id: $event_id\\n      user_id: $user_id\\n      decision: $decision\\n      response: $response\\n    ) {\\n      success\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { UserContext } from \"src/userContext\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport ConfirmPNG from \"src/Images/confirm_pink.png\";\nimport ClosePNG from \"src/Images/close_black.png\";\nimport Spinner from \"src/Atoms/Spinner\";\nconst CONFIRM_BOOKING = gql(_templateObject());\nexport default function BookingAcceptInput({\n  booking\n}) {\n  const classes = useStyles();\n\n  const _useXsSize = useXsSize(),\n        xs_size_memo = _useXsSize.xs_size_memo,\n        md_size_memo = _useXsSize.md_size_memo;\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  const _useMutation = useMutation(CONFIRM_BOOKING),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        confirmBooking = _useMutation2[0],\n        confirmStates = _useMutation2[1];\n\n  const inputDescription = useRef(null);\n\n  const handleConfirmRequest = decision => {\n    confirmBooking({\n      variables: {\n        user_id: booking.user._id,\n        event_id: booking.event._id,\n        decision: decision,\n        response: inputDescription.current.value\n      },\n      refetchQueries: () => [{\n        query: PROFILE_DATA,\n        variables: {\n          host_id: context._id\n        }\n      } // here refetch play data and event data\n      ]\n    });\n  };\n\n  return React.createElement(React.Fragment, null, !booking.decided && React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.decideContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    className: classes.iconBtn,\n    disabled: confirmStates.loading ? true : false,\n    onClick: () => {\n      handleConfirmRequest(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, confirmStates.loading ? React.createElement(Spinner, {\n    height: 20,\n    width: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : React.createElement(Avatar, {\n    src: ClosePNG,\n    className: classes.btnAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Response...\",\n    variant: \"outlined\",\n    disabled: confirmStates.loading ? true : false,\n    inputRef: inputDescription,\n    className: classes.textField,\n    style: {\n      width: true ? \"100%\" : \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    className: classes.iconBtn,\n    disabled: confirmStates.loading ? true : false,\n    onClick: () => {\n      handleConfirmRequest(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, confirmStates.loading ? React.createElement(Spinner, {\n    height: 20,\n    width: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }) : React.createElement(Avatar, {\n    src: ConfirmPNG,\n    className: classes.btnAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })))))));\n}\nconst useStyles = makeStyles(theme => ({\n  decideContainer: {\n    marginBottom: 10\n  },\n  textField: {\n    backgroundColor: \"white\",\n    borderRadius: 10\n  },\n  iconBtn: {\n    backgroundColor: \"rgba(255,255,255,0.4)\"\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/BookingAcceptInput.js"],"names":["React","useState","useEffect","useContext","useRef","makeStyles","Grid","Avatar","IconButton","ExpandMoreIcon","DoneIcon","CloseIcon","TextField","useMutation","gql","UserContext","PROFILE_DATA","useXsSize","ConfirmPNG","ClosePNG","Spinner","CONFIRM_BOOKING","BookingAcceptInput","booking","classes","useStyles","xs_size_memo","md_size_memo","context","setContext","confirmBooking","confirmStates","inputDescription","handleConfirmRequest","decision","variables","user_id","user","_id","event_id","event","response","current","value","refetchQueries","query","host_id","decided","decideContainer","iconBtn","loading","btnAvatar","textField","width","theme","marginBottom","backgroundColor","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { UserContext } from \"src/userContext\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\n\nimport ConfirmPNG from \"src/Images/confirm_pink.png\";\nimport ClosePNG from \"src/Images/close_black.png\";\nimport Spinner from \"src/Atoms/Spinner\";\n\nconst CONFIRM_BOOKING = gql`\n  mutation confirmBooking(\n    $event_id: ID!\n    $user_id: ID!\n    $decision: Boolean\n    $response: String\n  ) {\n    confirmBooking(\n      event_id: $event_id\n      user_id: $user_id\n      decision: $decision\n      response: $response\n    ) {\n      success\n    }\n  }\n`;\n\nexport default function BookingAcceptInput({ booking }) {\n  const classes = useStyles();\n  const { xs_size_memo, md_size_memo } = useXsSize();\n  const { context, setContext } = useContext(UserContext);\n  const [confirmBooking, confirmStates] = useMutation(CONFIRM_BOOKING);\n\n  const inputDescription = useRef(null);\n\n  const handleConfirmRequest = (decision) => {\n    confirmBooking({\n      variables: {\n        user_id: booking.user._id,\n        event_id: booking.event._id,\n        decision: decision,\n        response: inputDescription.current.value\n      },\n      refetchQueries: () => [\n        {\n          query: PROFILE_DATA,\n          variables: { host_id: context._id }\n        },\n        // here refetch play data and event data\n      ]\n    });\n  };\n\n  return (\n        <>\n      {!booking.decided && (\n        <Grid container alignItems=\"center\" className={classes.decideContainer}>\n          <Grid item xs={2}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <IconButton aria-label=\"settings\" \n                            className={classes.iconBtn} \n                            disabled={confirmStates.loading ? true : false}\n                            onClick={() => {handleConfirmRequest(false)}}>\n                              {confirmStates.loading \n                              ? <Spinner height={20} width={20} /> \n                              : <Avatar src={ClosePNG} className={classes.btnAvatar} />}\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={8}>\n                <TextField\n                        id=\"outlined-basic\"\n                        label=\"Response...\"\n                        variant=\"outlined\"\n                        disabled={confirmStates.loading ? true : false}\n                        inputRef={inputDescription}\n                        className={classes.textField}\n                        style={{ width: true ? \"100%\" : \"300px\" }}\n                      />\n          </Grid>\n          <Grid item xs={2}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <IconButton aria-label=\"settings\" \n                            className={classes.iconBtn} \n                            disabled={confirmStates.loading ? true : false}\n                            onClick={() => {handleConfirmRequest(true)}}>\n                  {confirmStates.loading \n                              ? <Spinner height={20} width={20} /> \n                              : <Avatar src={ConfirmPNG} className={classes.btnAvatar} />}\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  decideContainer: {\n    marginBottom: 10\n  },\n  textField: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  iconBtn: {\n    backgroundColor: \"rgba(255,255,255,0.4)\"\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  },\n\n}));\n"]},"metadata":{},"sourceType":"module"}