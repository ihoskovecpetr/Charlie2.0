{"ast":null,"code":"import _defineProperty from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useContext,useEffect}from\"react\";import{useMutation,useQuery}from\"@apollo/react-hooks\";import{UserContext}from\"../userContext\";import{PROFILE_DATA}from\"src/Services/GQL/PROFILE_DATA\";export function useCountUnseenBookingsRatings(){var _useContext=useContext(UserContext),context=_useContext.context,setContext=_useContext.setContext;var _useQuery=useQuery(PROFILE_DATA,{variables:{host_id:context._id}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;useEffect(function(){if(data){var showRatings=data.showRatings,showUserBookings=data.showUserBookings,showHostBookings=data.showHostBookings;var count=0;showHostBookings.map(function(item){if(!item.seenHost)count++;});showUserBookings.map(function(item){if(!item.seenUser)count++;});var countRatings=0;showRatings.map(function(item){if(!item.seenHost)countRatings++;});setContext(function(prev){return _objectSpread({},prev,{countUnseenBookings:count,countUnseenRatings:countRatings});});}},[data]);return null;}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Hooks/useCountUnseenBookingsRatings.js"],"names":["React","useState","useContext","useEffect","useMutation","useQuery","UserContext","PROFILE_DATA","useCountUnseenBookingsRatings","context","setContext","variables","host_id","_id","loading","error","data","showRatings","showUserBookings","showHostBookings","count","map","item","seenHost","seenUser","countRatings","prev","countUnseenBookings","countUnseenRatings"],"mappings":"m5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CAEA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,qBAAtC,CAEA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,YAAT,KAA6B,+BAA7B,CAGA,MAAO,SAASC,CAAAA,6BAAT,EAAyC,iBACfN,UAAU,CAACI,WAAD,CADK,CACvCG,OADuC,aACvCA,OADuC,CAC9BC,UAD8B,aAC9BA,UAD8B,eAEdL,QAAQ,CAACE,YAAD,CAAe,CACtDI,SAAS,CAAE,CAAEC,OAAO,CAAEH,OAAO,CAACI,GAAnB,CAD2C,CAAf,CAFM,CAEvCC,OAFuC,WAEvCA,OAFuC,CAE9BC,KAF8B,WAE9BA,KAF8B,CAEvBC,IAFuB,WAEvBA,IAFuB,CAM/Cb,SAAS,CAAC,UAAM,CAEf,GAAIa,IAAJ,CAAU,IAETC,CAAAA,WAFS,CAKJD,IALI,CAETC,WAFS,CAGTC,gBAHS,CAKJF,IALI,CAGTE,gBAHS,CAITC,gBAJS,CAKJH,IALI,CAITG,gBAJS,CAOV,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAEED,gBAAgB,CAACE,GAAjB,CAAqB,SAAAC,IAAI,CAAI,CAC9B,GAAG,CAACA,IAAI,CAACC,QAAT,CAAmBH,KAAK,GACtB,CAFD,EAGAF,gBAAgB,CAACG,GAAjB,CAAqB,SAAAC,IAAI,CAAI,CAC9B,GAAG,CAACA,IAAI,CAACE,QAAT,CAAmBJ,KAAK,GACtB,CAFD,EAIF,GAAIK,CAAAA,YAAY,CAAG,CAAnB,CAEER,WAAW,CAACI,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CACzB,GAAG,CAACA,IAAI,CAACC,QAAT,CAAmBE,YAAY,GAC7B,CAFD,EAIAf,UAAU,CAAC,SAAAgB,IAAI,CAAI,CACpB,wBAAYA,IAAZ,EACCC,mBAAmB,CAAEP,KADtB,CAECQ,kBAAkB,CAAEH,YAFrB,GAIE,CALS,CAAV,CAMD,CACC,CA/BM,CA+BJ,CAACT,IAAD,CA/BI,CAAT,CAiCD,MAAO,KAAP,CACC","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\n\nimport { UserContext } from \"../userContext\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\n\n\nexport function useCountUnseenBookingsRatings() {\n\tconst { context, setContext } = useContext(UserContext);\n\tconst { loading, error, data } = useQuery(PROFILE_DATA, {\n\t  variables: { host_id: context._id }\n\t});\n\n\tuseEffect(() => {\n\n\t\tif (data) {\n\t\t  let {\n\t\t\tshowRatings,\n\t\t\tshowUserBookings,\n\t\t\tshowHostBookings\n\t\t  } = data;\n\n\t\tlet count = 0\n\n\t\t  showHostBookings.map(item => {\n\t\t\tif(!item.seenHost) count++\n\t\t  })\n\t\t  showUserBookings.map(item => {\n\t\t\tif(!item.seenUser) count++\n\t\t  })\n\n\t\tlet countRatings = 0\n\t\t\n\t\t  showRatings.map(item => {\n\t\t\tif(!item.seenHost) countRatings++\n\t\t  })\n\n\t\t  setContext(prev => {\n\t\t\treturn { ...prev, \n\t\t\t\tcountUnseenBookings: count, \n\t\t\t\tcountUnseenRatings: countRatings\n\t\t\t};\n\t\t  })\n\t\t}\n\t  }, [data]);\n\t\nreturn null\n}"]},"metadata":{},"sourceType":"module"}