{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Search/EventSearchResult.js\";\nimport React, { useState, useRef, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport Badge from '@material-ui/core/Badge';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport { withRouter, useHistory, NavLink } from \"react-router-dom\";\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\nimport { UserContext } from \"src/userContext\";\nimport { useHighlitedSearchString } from \"src/Hooks/useHighlitedSearchString\";\nimport PartyOn from \"src/Atoms/PartyOn\";\nexport default function EventCardProfile({\n  event,\n  searchText\n}) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useXsSize = useXsSize(),\n        xs_size_memo = _useXsSize.xs_size_memo,\n        md_size_memo = _useXsSize.md_size_memo;\n\n  const _useCountdown = useCountdown(event.dateStart, 1),\n        counteddownDate = _useCountdown.counteddownDate;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  let bgColor = \"transparent\";\n\n  if (event.happeningNow) {\n    bgColor = \"transparent\";\n  } else if (expanded) {\n    if (md_size_memo) {\n      bgColor = \"rgba(0,0,0,0.1)\";\n    } else {\n      bgColor = \"transparent\"; //\"rgba(0,0,0,0.05)\"\n    }\n  }\n\n  return React.createElement(Grid, {\n    item: true,\n    className: classes.mainItem,\n    onClick: () => history.push(\"/event/\".concat(event._id)),\n    style: {\n      backgroundColor: bgColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.mainSolidLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: xs_size_memo ? 4 : 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.itemAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    badgeContent: React.createElement(Avatar, {\n      src: event.author.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    className: classes.badge //color={event ? \"primary\" : \"secondary\"}\n    // style={{ backgroundColor: event.decided ? \"grey\" : \"red\"}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: event.imagesArr[0].thumbnail,\n    className: classes.mainAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: xs_size_memo ? 8 : 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"left\",\n    className: classes.mainHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, useHighlitedSearchString({\n    string: event.name,\n    searchText: searchText\n  }).map(item => item)), \" hosted by \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, event.author.name)), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"left\",\n    className: classes.countdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, useHighlitedSearchString({\n    string: event.address,\n    searchText: searchText\n  }).map(item => item), \", Start \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, counteddownDate)), React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"left\",\n    className: classes.descriptionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, useHighlitedSearchString({\n    string: event.description,\n    searchText: searchText\n  }).map(item => item))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.partyOnGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, event.happeningNow && React.createElement(PartyOn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))))));\n}\nconst useStyles = makeStyles(theme => ({\n  mainItem: {\n    width: '100%',\n    borderBottom: \"1px solid lightGrey\"\n  },\n  mainSolidLine: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  leftMiddleItem: {},\n  middleBody: {},\n  mainHeader: {\n    fontSize: 16,\n    marginLeft: 20,\n    marginRight: 20 // textDecoration: \"underline\"\n\n  },\n  countdown: {\n    marginTop: 10,\n    fontWeight: 400,\n    color: \"grey\",\n    marginLeft: 20\n  },\n  descriptionText: {\n    marginTop: 10,\n    marginLeft: 20\n  },\n  partyOnGrid: {\n    marginTop: 10\n  },\n  badge: {\n    padding: '0 important'\n  },\n  dotBadge: {\n    height: 15,\n    width: 15\n  },\n  userAvatar: {\n    backgroundColor: red[500],\n    height: 80,\n    width: 80\n  },\n  btnContainer: {\n    marginBottom: 5,\n    marginTop: 10\n  },\n  textField: {},\n  textFieldCont: {\n    margin: 10\n  },\n  btnWrapLeft: {\n    borderRight: \"1px solid #707070\"\n  },\n  btn: {// height: 50,\n    // width: \"50%\"\n  },\n  itemAvatar: {},\n  mainAvatar: {\n    height: 90,\n    width: 90\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  },\n  thisLine: {\n    height: \"1px\",\n    width: \"100%\",\n    marginTop: \"2px\",\n    backgroundColor: \"#707070\"\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Search/EventSearchResult.js"],"names":["React","useState","useRef","useContext","useEffect","makeStyles","Grid","Avatar","IconButton","ExpandMoreIcon","ExpandLessIcon","DoneIcon","CloseIcon","FiberManualRecordIcon","Badge","Collapse","Typography","red","withRouter","useHistory","NavLink","useXsSize","useCountdown","UserContext","useHighlitedSearchString","PartyOn","EventCardProfile","event","searchText","classes","useStyles","history","xs_size_memo","md_size_memo","dateStart","counteddownDate","expanded","setExpanded","context","setContext","bgColor","happeningNow","mainItem","push","_id","backgroundColor","mainSolidLine","itemAvatar","author","picture","badge","imagesArr","thumbnail","mainAvatar","mainHeader","string","name","map","item","countdown","address","descriptionText","description","partyOnGrid","theme","width","borderBottom","marginTop","marginBottom","leftMiddleItem","middleBody","fontSize","marginLeft","marginRight","fontWeight","color","padding","dotBadge","height","userAvatar","btnContainer","textField","textFieldCont","margin","btnWrapLeft","borderRight","btn","btnAvatar","thisLine"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,kBAAhD;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,wBAAT,QAAyC,oCAAzC;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA1B,EAAiD;AAC9D,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,MAAIC,OAAO,GAAGZ,UAAU,EAAxB;;AAF8D,qBAGvBE,SAAS,EAHc;AAAA,QAGtDW,YAHsD,cAGtDA,YAHsD;AAAA,QAGxCC,YAHwC,cAGxCA,YAHwC;;AAAA,wBAIlCX,YAAY,CAACK,KAAK,CAACO,SAAP,EAAkB,CAAlB,CAJsB;AAAA,QAItDC,eAJsD,iBAItDA,eAJsD;;AAAA,oBAK9BlC,QAAQ,CAAC,KAAD,CALsB;AAAA;AAAA,QAKvDmC,QALuD;AAAA,QAK7CC,WAL6C;;AAAA,sBAM9BlC,UAAU,CAACoB,WAAD,CANoB;AAAA,QAMtDe,OANsD,eAMtDA,OANsD;AAAA,QAM7CC,UAN6C,eAM7CA,UAN6C;;AAS9D,MAAIC,OAAO,GAAG,aAAd;;AACA,MAAGb,KAAK,CAACc,YAAT,EAAsB;AACpBD,IAAAA,OAAO,GAAG,aAAV;AACD,GAFD,MAEM,IAAGJ,QAAH,EAAY;AAChB,QAAGH,YAAH,EAAgB;AACdO,MAAAA,OAAO,GAAG,iBAAV;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,GAAG,aAAV,CADK,CACmB;AACzB;AACF;;AAID,SACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,EAAEX,OAAO,CAACa,QAFrB;AAGE,IAAA,OAAO,EAAE,MAAMX,OAAO,CAACY,IAAR,kBAAuBhB,KAAK,CAACiB,GAA7B,EAHjB;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEL;AAAnB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,SAAS,EAAEX,OAAO,CAACiB,aAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAEd,YAAY,GAAG,CAAH,GAAO,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAEH,OAAO,CAACkB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEpB,KAAK,CAACqB,MAAN,CAAaC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB;AACQ,IAAA,SAAS,EAAEpB,OAAO,CAACqB,KAD3B,CAEQ;AACA;AAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,GAAG,EAAEvB,KAAK,CAACwB,SAAN,CAAgB,CAAhB,EAAmBC,SAD1B;AAEE,IAAA,SAAS,EAAEvB,OAAO,CAACwB,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CADF,CADF,CALF,EAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAErB,YAAY,GAAG,CAAH,GAAO,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAEH,OAAO,CAACyB,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI9B,wBAAwB,CAAC;AAAC+B,IAAAA,MAAM,EAAE5B,KAAK,CAAC6B,IAAf;AAAqB5B,IAAAA,UAAU,EAAEA;AAAjC,GAAD,CAAxB,CAAuE6B,GAAvE,CAA2EC,IAAI,IAAIA,IAAnF,CAAJ,CALF,iBAK8G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI/B,KAAK,CAACqB,MAAN,CAAaQ,IAAjB,CAL9G,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAE3B,OAAO,CAAC8B,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEnC,wBAAwB,CAAC;AAAC+B,IAAAA,MAAM,EAAE5B,KAAK,CAACiC,OAAf;AAAwBhC,IAAAA,UAAU,EAAEA;AAApC,GAAD,CAAxB,CAA0E6B,GAA1E,CAA8EC,IAAI,IAAIA,IAAtF,CALF,cAKsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIvB,eAAJ,CALtG,CADA,EAQA,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAEN,OAAO,CAACgC,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKErC,wBAAwB,CAAC;AAAC+B,IAAAA,MAAM,EAAE5B,KAAK,CAACmC,WAAf;AAA4BlC,IAAAA,UAAU,EAAEA;AAAxC,GAAD,CAAxB,CAA8E6B,GAA9E,CAAkFC,IAAI,IAAIA,IAA1F,CALF,CARA,CADA,EAiBA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAE7B,OAAO,CAACkC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpC,KAAK,CAACc,YAAN,IAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,CAjBA,CARF,CAzBF,CANF,CADF;AAiED;AAED,MAAMX,SAAS,GAAGzB,UAAU,CAAC2D,KAAK,KAAK;AACrCtB,EAAAA,QAAQ,EAAE;AACRuB,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,YAAY,EAAE;AAFN,GAD2B;AAKrCpB,EAAAA,aAAa,EAAE;AACbqB,IAAAA,SAAS,EAAE,EADE;AAEbC,IAAAA,YAAY,EAAE;AAFD,GALsB;AASrCC,EAAAA,cAAc,EAAE,EATqB;AAUrCC,EAAAA,UAAU,EAAE,EAVyB;AAWrChB,EAAAA,UAAU,EAAE;AACViB,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,EAFF;AAGVC,IAAAA,WAAW,EAAE,EAHH,CAIV;;AAJU,GAXyB;AAiBrCd,EAAAA,SAAS,EAAE;AACTQ,IAAAA,SAAS,EAAE,EADF;AAETO,IAAAA,UAAU,EAAE,GAFH;AAGTC,IAAAA,KAAK,EAAE,MAHE;AAITH,IAAAA,UAAU,EAAE;AAJH,GAjB0B;AAuBrCX,EAAAA,eAAe,EAAE;AACfM,IAAAA,SAAS,EAAE,EADI;AAEfK,IAAAA,UAAU,EAAE;AAFG,GAvBoB;AA2BrCT,EAAAA,WAAW,EAAE;AACXI,IAAAA,SAAS,EAAE;AADA,GA3BwB;AA8BrCjB,EAAAA,KAAK,EAAE;AACL0B,IAAAA,OAAO,EAAE;AADJ,GA9B8B;AAiCrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,EADA;AAERb,IAAAA,KAAK,EAAE;AAFC,GAjC2B;AAqCrCc,EAAAA,UAAU,EAAE;AACVlC,IAAAA,eAAe,EAAE5B,GAAG,CAAC,GAAD,CADV;AAEV6D,IAAAA,MAAM,EAAE,EAFE;AAGVb,IAAAA,KAAK,EAAE;AAHG,GArCyB;AA0CrCe,EAAAA,YAAY,EAAE;AACZZ,IAAAA,YAAY,EAAE,CADF;AAEZD,IAAAA,SAAS,EAAE;AAFC,GA1CuB;AA8CrCc,EAAAA,SAAS,EAAE,EA9C0B;AA+CrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE;AADK,GA/CsB;AAkDrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,WAAW,EAAE;AADF,GAlDwB;AAqDrCC,EAAAA,GAAG,EAAE,CACH;AACA;AAFG,GArDgC;AAyDrCvC,EAAAA,UAAU,EAAE,EAzDyB;AA4DrCM,EAAAA,UAAU,EAAE;AACVyB,IAAAA,MAAM,EAAE,EADE;AAEVb,IAAAA,KAAK,EAAE;AAFG,GA5DyB;AAgErCsB,EAAAA,SAAS,EAAE;AACTT,IAAAA,MAAM,EAAE,EADC;AAETb,IAAAA,KAAK,EAAE;AAFE,GAhE0B;AAoErCuB,EAAAA,QAAQ,EAAE;AACRV,IAAAA,MAAM,EAAE,KADA;AAERb,IAAAA,KAAK,EAAE,MAFC;AAGRE,IAAAA,SAAS,EAAE,KAHH;AAIRtB,IAAAA,eAAe,EAAE;AAJT;AApE2B,CAAL,CAAN,CAA5B","sourcesContent":["import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport Badge from '@material-ui/core/Badge';\n\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\n\nimport { withRouter, useHistory, NavLink } from \"react-router-dom\";\n\nimport { useXsSize } from \"src/Hooks/useXsSize\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\nimport { UserContext } from \"src/userContext\";\nimport { useHighlitedSearchString } from \"src/Hooks/useHighlitedSearchString\";\n\nimport PartyOn from \"src/Atoms/PartyOn\";\n\nexport default function EventCardProfile({ event, searchText }) {\n  const classes = useStyles();\n  let history = useHistory();\n  const { xs_size_memo, md_size_memo } = useXsSize();\n  const { counteddownDate } = useCountdown(event.dateStart, 1)\n  const [expanded, setExpanded] = useState(false);\n  const { context, setContext } = useContext(UserContext);\n\n\n  let bgColor = \"transparent\"\n  if(event.happeningNow){\n    bgColor = \"transparent\"\n  }else if(expanded){\n    if(md_size_memo){\n      bgColor = \"rgba(0,0,0,0.1)\"\n    } else {\n      bgColor = \"transparent\" //\"rgba(0,0,0,0.05)\"\n    }\n  }\n\n\n\n  return (\n    <Grid\n      item\n      className={classes.mainItem}\n      onClick={() => history.push(`/event/${event._id}`)}\n      style={{ backgroundColor: bgColor }}\n    >\n      <Grid\n        container\n        alignItems=\"center\"\n        className={classes.mainSolidLine}\n      >\n        <Grid item xs={xs_size_memo ? 4 : 3}>\n          <Grid container justify=\"center\">\n            <Grid item className={classes.itemAvatar}>\n              <IconButton aria-label=\"settings\">\n                <Badge badgeContent={<Avatar src={event.author.picture} />} \n                        className={classes.badge} \n                        //color={event ? \"primary\" : \"secondary\"}\n                        // style={{ backgroundColor: event.decided ? \"grey\" : \"red\"}}\n                        >\n                  <img\n                    src={event.imagesArr[0].thumbnail}\n                    className={classes.mainAvatar}\n                  />\n                </Badge>\n              </IconButton>\n            </Grid>\n\n          </Grid>\n        </Grid>\n\n        <Grid item xs={xs_size_memo ? 8 : 7}>\n          <Typography\n            variant=\"body2\"\n            align=\"left\"\n            className={classes.mainHeader}\n          >\n            <b>{useHighlitedSearchString({string: event.name, searchText: searchText}).map(item => item)}</b> hosted by <b>{event.author.name}</b>\n          </Typography>\n          <Grid container>\n          <Grid item xs={12}>\n          <Typography\n            variant=\"body2\"\n            align=\"left\"\n            className={classes.countdown}\n          >\n           {useHighlitedSearchString({string: event.address, searchText: searchText}).map(item => item)}, Start <b>{counteddownDate}</b>\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            align=\"left\"\n            className={classes.descriptionText}\n          >\n           {useHighlitedSearchString({string: event.description, searchText: searchText}).map(item => item)}\n          </Typography>\n          </Grid>\n          <Grid item xs={6} className={classes.partyOnGrid}>\n            {event.happeningNow && <PartyOn />}\n          </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainItem: {\n    width: '100%',\n    borderBottom: \"1px solid lightGrey\"\n  },\n  mainSolidLine: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  leftMiddleItem: {},\n  middleBody: {},\n  mainHeader: {\n    fontSize: 16,\n    marginLeft: 20,\n    marginRight: 20,\n    // textDecoration: \"underline\"\n  },\n  countdown: {\n    marginTop: 10,\n    fontWeight: 400,\n    color: \"grey\",\n    marginLeft: 20\n  },\n  descriptionText: {\n    marginTop: 10,\n    marginLeft: 20\n  },\n  partyOnGrid: {\n    marginTop: 10\n  },\n  badge: {\n    padding: '0 important'\n  },\n  dotBadge: {\n    height: 15,\n    width: 15\n  },\n  userAvatar: {\n    backgroundColor: red[500],\n    height: 80,\n    width: 80\n  },\n  btnContainer: {\n    marginBottom: 5,\n    marginTop: 10\n  },\n  textField: {},\n  textFieldCont: {\n    margin: 10\n  },\n  btnWrapLeft: {\n    borderRight: \"1px solid #707070\"\n  },\n  btn: {\n    // height: 50,\n    // width: \"50%\"\n  },\n  itemAvatar: {\n\n  },\n  mainAvatar: {\n    height: 90,\n    width: 90\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  },\n  thisLine: {\n    height: \"1px\",\n    width: \"100%\",\n    marginTop: \"2px\",\n    backgroundColor: \"#707070\"\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}