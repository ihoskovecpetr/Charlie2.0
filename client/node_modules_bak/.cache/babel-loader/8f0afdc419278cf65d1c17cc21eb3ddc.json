{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _possibleConstructorReturn = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar EventEmitter = require('events');\n\nvar ZXing = require('./zxing')();\n\nvar Visibility = require('visibilityjs');\n\nvar StateMachine = require('fsm-as-promised');\n\nvar ScanProvider =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function ScanProvider(emitter, analyzer, captureImage, scanPeriod, refractoryPeriod) {\n    _classCallCheck(this, ScanProvider);\n\n    this.scanPeriod = scanPeriod;\n    this.captureImage = captureImage;\n    this.refractoryPeriod = refractoryPeriod;\n    this._emitter = emitter;\n    this._frameCount = 0;\n    this._analyzer = analyzer;\n    this._lastResult = null;\n    this._active = false;\n  }\n\n  _createClass(ScanProvider, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      this._active = true;\n      requestAnimationFrame(function () {\n        return _this._scan();\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._active = false;\n    }\n  }, {\n    key: \"scan\",\n    value: function scan() {\n      return this._analyze(false);\n    }\n  }, {\n    key: \"_analyze\",\n    value: function _analyze(skipDups) {\n      var _this2 = this;\n\n      var analysis = this._analyzer.analyze();\n\n      if (!analysis) {\n        return null;\n      }\n\n      var result = analysis.result,\n          canvas = analysis.canvas;\n\n      if (!result) {\n        return null;\n      }\n\n      if (skipDups && result === this._lastResult) {\n        return null;\n      }\n\n      clearTimeout(this.refractoryTimeout);\n      this.refractoryTimeout = setTimeout(function () {\n        _this2._lastResult = null;\n      }, this.refractoryPeriod);\n      var image = this.captureImage ? canvas.toDataURL('image/webp', 0.8) : null;\n      this._lastResult = result;\n      var payload = {\n        content: result\n      };\n\n      if (image) {\n        payload.image = image;\n      }\n\n      return payload;\n    }\n  }, {\n    key: \"_scan\",\n    value: function _scan() {\n      var _this3 = this;\n\n      if (!this._active) {\n        return;\n      }\n\n      requestAnimationFrame(function () {\n        return _this3._scan();\n      });\n\n      if (++this._frameCount !== this.scanPeriod) {\n        return;\n      } else {\n        this._frameCount = 0;\n      }\n\n      var result = this._analyze(true);\n\n      if (result) {\n        setTimeout(function () {\n          _this3._emitter.emit('scan', result.content, result.image || null);\n        }, 0);\n      }\n    }\n  }]);\n\n  return ScanProvider;\n}();\n\nvar Analyzer =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Analyzer(video) {\n    _classCallCheck(this, Analyzer);\n\n    this.video = video;\n    this.imageBuffer = null;\n    this.sensorLeft = null;\n    this.sensorTop = null;\n    this.sensorWidth = null;\n    this.sensorHeight = null;\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'none';\n    this.canvasContext = null;\n    this.decodeCallback = ZXing.Runtime.addFunction(function (ptr, len, resultIndex, resultCount) {\n      var result = new Uint8Array(ZXing.HEAPU8.buffer, ptr, len);\n      var str = String.fromCharCode.apply(null, result);\n\n      if (resultIndex === 0) {\n        window.zxDecodeResult = '';\n      }\n\n      window.zxDecodeResult += str;\n    });\n  }\n\n  _createClass(Analyzer, [{\n    key: \"analyze\",\n    value: function analyze() {\n      if (!this.video.videoWidth) {\n        return null;\n      }\n\n      if (!this.imageBuffer) {\n        var videoWidth = this.video.videoWidth;\n        var videoHeight = this.video.videoHeight;\n        this.sensorWidth = videoWidth;\n        this.sensorHeight = videoHeight;\n        this.sensorLeft = Math.floor(videoWidth / 2 - this.sensorWidth / 2);\n        this.sensorTop = Math.floor(videoHeight / 2 - this.sensorHeight / 2);\n        this.canvas.width = this.sensorWidth;\n        this.canvas.height = this.sensorHeight;\n        this.canvasContext = this.canvas.getContext('2d');\n        this.imageBuffer = ZXing._resize(this.sensorWidth, this.sensorHeight);\n        return null;\n      }\n\n      this.canvasContext.drawImage(this.video, this.sensorLeft, this.sensorTop, this.sensorWidth, this.sensorHeight);\n      var data = this.canvasContext.getImageData(0, 0, this.sensorWidth, this.sensorHeight).data;\n\n      for (var i = 0, j = 0; i < data.length; i += 4, j++) {\n        var _ref = [data[i], data[i + 1], data[i + 2]],\n            r = _ref[0],\n            g = _ref[1],\n            b = _ref[2];\n        ZXing.HEAPU8[this.imageBuffer + j] = Math.trunc((r + g + b) / 3);\n      }\n\n      var err = ZXing._decode_qr(this.decodeCallback);\n\n      if (err) {\n        return null;\n      }\n\n      var result = window.zxDecodeResult;\n\n      if (result != null) {\n        return {\n          result: result,\n          canvas: this.canvas\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Analyzer;\n}();\n\nvar Scanner =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  \"use strict\";\n\n  _inherits(Scanner, _EventEmitter);\n\n  function Scanner(opts) {\n    var _this4;\n\n    _classCallCheck(this, Scanner);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Scanner).call(this));\n    _this4.video = _this4._configureVideo(opts);\n    _this4.mirror = opts.mirror !== false;\n    _this4.backgroundScan = opts.backgroundScan || false;\n    _this4._continuous = opts.continuous !== false;\n    _this4._analyzer = new Analyzer(_this4.video);\n    _this4._camera = null;\n    var captureImage = opts.captureImage || false;\n    var scanPeriod = opts.scanPeriod || 1;\n    var refractoryPeriod = opts.refractoryPeriod || 5 * 1000;\n    _this4._scanner = new ScanProvider(_assertThisInitialized(_this4), _this4._analyzer, captureImage, scanPeriod, refractoryPeriod);\n    _this4._fsm = _this4._createStateMachine();\n    Visibility.change(function (e, state) {\n      if (state === 'visible') {\n        setTimeout(function () {\n          if (_this4._fsm.can('activate')) {\n            _this4._fsm.activate();\n          }\n        }, 0);\n      } else {\n        if (!_this4.backgroundScan && _this4._fsm.can('deactivate')) {\n          _this4._fsm.deactivate();\n        }\n      }\n    });\n\n    _this4.addListener('active', function () {\n      _this4.video.classList.remove('inactive');\n\n      _this4.video.classList.add('active');\n    });\n\n    _this4.addListener('inactive', function () {\n      _this4.video.classList.remove('active');\n\n      _this4.video.classList.add('inactive');\n    });\n\n    _this4.emit('inactive');\n\n    return _this4;\n  }\n\n  _createClass(Scanner, [{\n    key: \"scan\",\n    value: function scan() {\n      return this._scanner.scan();\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var camera,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                camera = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n\n                if (!this._fsm.can('start')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return this._fsm.start(camera);\n\n              case 4:\n                _context.next = 10;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return this._fsm.stop();\n\n              case 8:\n                _context.next = 10;\n                return this._fsm.start(camera);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._fsm.can('stop')) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this._fsm.stop();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n  }, {\n    key: \"_enableScan\",\n    value: function () {\n      var _enableScan2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(camera) {\n        var streamUrl;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this._camera = camera || this._camera;\n\n                if (this._camera) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw new Error('Camera is not defined.');\n\n              case 3:\n                _context3.next = 5;\n                return this._camera.start();\n\n              case 5:\n                streamUrl = _context3.sent;\n                this.video.src = streamUrl;\n\n                if (this._continuous) {\n                  this._scanner.start();\n                }\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _enableScan(_x) {\n        return _enableScan2.apply(this, arguments);\n      }\n\n      return _enableScan;\n    }()\n  }, {\n    key: \"_disableScan\",\n    value: function _disableScan() {\n      this.video.src = '';\n\n      if (this._scanner) {\n        this._scanner.stop();\n      }\n\n      if (this._camera) {\n        this._camera.stop();\n      }\n    }\n  }, {\n    key: \"_configureVideo\",\n    value: function _configureVideo(opts) {\n      if (opts.video) {\n        if (opts.video.tagName !== 'VIDEO') {\n          throw new Error('Video must be a <video> element.');\n        }\n      }\n\n      var video = opts.video || document.createElement('video');\n      video.setAttribute('autoplay', 'autoplay');\n      return video;\n    }\n  }, {\n    key: \"_createStateMachine\",\n    value: function _createStateMachine() {\n      var _this5 = this;\n\n      return StateMachine.create({\n        initial: 'stopped',\n        events: [{\n          name: 'start',\n          from: 'stopped',\n          to: 'started'\n        }, {\n          name: 'stop',\n          from: ['started', 'active', 'inactive'],\n          to: 'stopped'\n        }, {\n          name: 'activate',\n          from: ['started', 'inactive'],\n          to: ['active', 'inactive'],\n          condition: function condition(options) {\n            if (Visibility.state() === 'visible' || this.backgroundScan) {\n              return 'active';\n            } else {\n              return 'inactive';\n            }\n          }\n        }, {\n          name: 'deactivate',\n          from: ['started', 'active'],\n          to: 'inactive'\n        }],\n        callbacks: {\n          onenteractive: function () {\n            var _onenteractive = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee4(options) {\n              return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _this5._enableScan(options.args[0]);\n\n                    case 2:\n                      _this5.emit('active');\n\n                    case 3:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            }));\n\n            function onenteractive(_x2) {\n              return _onenteractive.apply(this, arguments);\n            }\n\n            return onenteractive;\n          }(),\n          onleaveactive: function onleaveactive() {\n            _this5._disableScan();\n\n            _this5.emit('inactive');\n          },\n          onenteredstarted: function () {\n            var _onenteredstarted = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee5(options) {\n              return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _this5._fsm.activate(options.args[0]);\n\n                    case 2:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5);\n            }));\n\n            function onenteredstarted(_x3) {\n              return _onenteredstarted.apply(this, arguments);\n            }\n\n            return onenteredstarted;\n          }()\n        }\n      });\n    }\n  }, {\n    key: \"captureImage\",\n    set: function set(capture) {\n      this._scanner.captureImage = capture;\n    },\n    get: function get() {\n      return this._scanner.captureImage;\n    }\n  }, {\n    key: \"scanPeriod\",\n    set: function set(period) {\n      this._scanner.scanPeriod = period;\n    },\n    get: function get() {\n      return this._scanner.scanPeriod;\n    }\n  }, {\n    key: \"refractoryPeriod\",\n    set: function set(period) {\n      this._scanner.refractoryPeriod = period;\n    },\n    get: function get() {\n      return this._scanner.refractoryPeriod;\n    }\n  }, {\n    key: \"continuous\",\n    set: function set(continuous) {\n      this._continuous = continuous;\n\n      if (continuous && this._fsm.current === 'active') {\n        this._scanner.start();\n      } else {\n        this._scanner.stop();\n      }\n    },\n    get: function get() {\n      return this._continuous;\n    }\n  }, {\n    key: \"mirror\",\n    set: function set(mirror) {\n      this._mirror = mirror;\n\n      if (mirror) {\n        this.video.style.MozTransform = 'scaleX(-1)';\n        this.video.style.webkitTransform = 'scaleX(-1)';\n        this.video.style.OTransform = 'scaleX(-1)';\n        this.video.style.msFilter = 'FlipH';\n        this.video.style.filter = 'FlipH';\n        this.video.style.transform = 'scaleX(-1)';\n      } else {\n        this.video.style.MozTransform = null;\n        this.video.style.webkitTransform = null;\n        this.video.style.OTransform = null;\n        this.video.style.msFilter = null;\n        this.video.style.filter = null;\n        this.video.style.transform = null;\n      }\n    },\n    get: function get() {\n      return this._mirror;\n    }\n  }]);\n\n  return Scanner;\n}(EventEmitter);\n\nmodule.exports = Scanner;","map":null,"metadata":{},"sourceType":"script"}