{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Profile/PlayListWrap.js\";\nimport React, { useState, useRef, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { UserContext } from \"../../userContext\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { GET_ONE_EVENT } from \"src/Services/GQL/GET_ONE_EVENT\";\nimport PlayPageList from \"../../Molecules/play/PlayPageList\";\nexport default function PlayListWrap({\n  event\n}) {\n  const classes = useStyles();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context;\n\n  const _useQuery = useQuery(GET_ONE_EVENT, {\n    variables: {\n      event_id: event._id\n    } //skip: !id,\n    //pollInterval: 500\n\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data,\n        refetch = _useQuery.refetch;\n\n  console.log(\"PlayListWrap: loading, error, data \", loading, error, data);\n  console.log(\"PlayListWrap eventt:  \", event);\n  console.log(\"PlayListWrap bookingss:  \", data && data.getOneEvent && data.getOneEvent.bookings);\n  let eventsRefilled = event;\n\n  if (data) {\n    eventsRefilled.bookings = data.getOneEvent.bookings;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(PlayPageList, {\n    event: event,\n    bookings: data && data.getOneEvent && data.getOneEvent.bookings,\n    GQL_refetch: PROFILE_DATA,\n    refetchVariables: {\n      host_id: context._id\n    },\n    paddingSides: \"0px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\nconst useStyles = makeStyles(theme => ({\n  mainItem: {// borderRadius: 15,\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Profile/PlayListWrap.js"],"names":["React","useState","useRef","useContext","makeStyles","useMutation","useQuery","gql","UserContext","PROFILE_DATA","GET_ONE_EVENT","PlayPageList","PlayListWrap","event","classes","useStyles","context","variables","event_id","_id","loading","error","data","refetch","console","log","getOneEvent","bookings","eventsRefilled","host_id","theme","mainItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,OAApD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,OAAOC,YAAP,MAAyB,mCAAzB;AAGA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAiC;AAC9C,QAAMC,OAAO,GAAGC,SAAS,EAAzB;;AAD8C,sBAE1BZ,UAAU,CAACK,WAAD,CAFgB;AAAA,QAEtCQ,OAFsC,eAEtCA,OAFsC;;AAAA,oBAGJV,QAAQ,CAACI,aAAD,EAAgB;AAChEO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAEL,KAAK,CAACM;AAAlB,KADqD,CAEhE;AACA;;AAHgE,GAAhB,CAHJ;AAAA,QAGtCC,OAHsC,aAGtCA,OAHsC;AAAA,QAG7BC,KAH6B,aAG7BA,KAH6B;AAAA,QAGtBC,IAHsB,aAGtBA,IAHsB;AAAA,QAGhBC,OAHgB,aAGhBA,OAHgB;;AAS9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDL,OAAnD,EAA4DC,KAA5D,EAAmEC,IAAnE;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCZ,KAAtC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,IAAI,IAAIA,IAAI,CAACI,WAAb,IAA4BJ,IAAI,CAACI,WAAL,CAAiBC,QAAtF;AAEF,MAAIC,cAAc,GAAGf,KAArB;;AAEA,MAAGS,IAAH,EAAQ;AACJM,IAAAA,cAAc,CAACD,QAAf,GAA0BL,IAAI,CAACI,WAAL,CAAiBC,QAA3C;AACH;;AAEC,SACE,0CACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEd,KADX;AAEI,IAAA,QAAQ,EAAES,IAAI,IAAIA,IAAI,CAACI,WAAb,IAA4BJ,IAAI,CAACI,WAAL,CAAiBC,QAF3D;AAII,IAAA,WAAW,EAAElB,YAJjB;AAKI,IAAA,gBAAgB,EAAE;AAACoB,MAAAA,OAAO,EAAEb,OAAO,CAACG;AAAlB,KALtB;AAMI,IAAA,YAAY,EAAE,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAYD;AAED,MAAMJ,SAAS,GAAGX,UAAU,CAAC0B,KAAK,KAAK;AACrCC,EAAAA,QAAQ,EAAE,CACR;AADQ;AAD2B,CAAL,CAAN,CAA5B","sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { UserContext } from \"../../userContext\";\nimport { PROFILE_DATA } from \"src/Services/GQL/PROFILE_DATA\";\nimport { GET_ONE_EVENT } from \"src/Services/GQL/GET_ONE_EVENT\";\n\nimport PlayPageList from \"../../Molecules/play/PlayPageList\";\n\n\nexport default function PlayListWrap({ event }) {\n  const classes = useStyles();\n  const { context } = useContext(UserContext);\n  const { loading, error, data, refetch } = useQuery(GET_ONE_EVENT, {\n    variables: { event_id: event._id }\n    //skip: !id,\n    //pollInterval: 500\n  });\n  \n  console.log(\"PlayListWrap: loading, error, data \", loading, error, data);\n  console.log(\"PlayListWrap eventt:  \", event);\n  console.log(\"PlayListWrap bookingss:  \", data && data.getOneEvent && data.getOneEvent.bookings);\n\nlet eventsRefilled = event\n\nif(data){\n    eventsRefilled.bookings = data.getOneEvent.bookings\n}\n\n  return (\n    <>\n        <PlayPageList\n            event={event}\n            bookings={data && data.getOneEvent && data.getOneEvent.bookings}\n  \n            GQL_refetch={PROFILE_DATA}\n            refetchVariables={{host_id: context._id}}\n            paddingSides={\"0px\"}\n            />\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainItem: {\n    // borderRadius: 15,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}