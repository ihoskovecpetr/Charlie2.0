{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from\"react\";import{useDropzone}from\"react-dropzone\";import CropFreeIcon from'@material-ui/icons/CropFree';import{makeStyles}from\"@material-ui/core/styles\";import Grid from\"@material-ui/core/Grid\";import QrCode from'qrcode-reader';import Spinner from\"src/Atoms/Spinner\";var Instascan=require('instascan');function MyDropzone(_ref){var setQrCodeData=_ref.setQrCodeData;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUploading=_useState2[0],setIsUploading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),loadedImage=_useState4[0],setLoadedImage=_useState4[1];var onDrop=useCallback(function(acceptedFiles){setIsUploading(true);acceptedFiles.map(function(file){console.log(\"DROP FILE: \",file);var reader=new FileReader();reader.onload=function(input){setLoadedImage(input.target.result);console.log(\"INPUT: \",input);var qr=new QrCode();qr.callback=function(err,value){if(err){console.error(err);setQrCodeData(\"We could not read this\");setIsUploading(false);}if(value){console.log(\"XX+: \",value);setIsUploading(false);setQrCodeData(value.result);var image=new Image();image.onload=function(){var width=image.naturalWidth;var height=image.naturalHeight;console.log(\"NATTY: \",width,height);var ratio=height/200;var sqSize=value.points[0].estimatedModuleSize/ratio;console.log(\"NATTY ratio: \",ratio);console.log(\"Point x, y+: \",value.points[2].x/ratio,value.points[2].y/ratio);var canvas=document.getElementById(\"qr_canvas\");canvas.height=image.naturalHeight/ratio;canvas.width=image.naturalWidth/ratio;var ctx=canvas.getContext(\"2d\");ctx.beginPath();ctx.lineWidth=\"3\";ctx.strokeStyle=\"#E8045D\";ctx.rect(value.points[1].x/ratio-sqSize/2,value.points[1].y/ratio-sqSize/2,sqSize,sqSize);ctx.stroke();ctx.beginPath();ctx.lineWidth=\"3\";ctx.strokeStyle=\"#E8045D\";ctx.rect(value.points[0].x/ratio-sqSize/2,value.points[0].y/ratio-sqSize/2,sqSize,sqSize);ctx.stroke();ctx.beginPath();ctx.lineWidth=\"3\";ctx.strokeStyle=\"#E8045D\";ctx.rect(value.points[2].x/ratio-sqSize/2,value.points[2].y/ratio-sqSize/2,sqSize,sqSize);ctx.stroke();};image.src=input.target.result;}};qr.decode(input.target.result);};reader.readAsDataURL(file);// var barcodeDetector = new BarcodeDetector();\n// let id = devices.filter((device) => device.kind === \"videoinput\").slice(-1).pop().deviceId;\n// let constrains = {video: {optional: [{sourceId: id }]}};\n// navigator.mediaDevices.getUserMedia({}).then((stream) => {\n//   console.log(\"stream: \", stream)\n//   document.getElementById('preview').src = stream;\n// })\n});},[]);// var scanner = new Instascan.Scanner({ video: document.getElementById('preview') });\n// scanner.addListener('scan', function (content, image) {\n//   console.log(content);\n// });\n// Instascan.Camera.getCameras().then(function (cameras) {\n//   if (cameras.length > 0) {\n//     scanner.start(cameras[0]);\n//   }\n// });\nvar _useDropzone=useDropzone({onDrop:onDrop}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps,isDragActive=_useDropzone.isDragActive;return React.createElement(React.Fragment,null,React.createElement(\"div\",Object.assign({},getRootProps(),{style:{outline:\"none\",cursor:\"pointer\",border:\"1px dashed grey\"}}),React.createElement(\"input\",getInputProps()),React.createElement(Grid,{container:true,justify:\"center\"},React.createElement(Grid,{item:true},isUploading?React.createElement(Spinner,{height:100,width:100}):loadedImage?React.createElement(\"img\",{src:loadedImage,alt:\"No Image\",className:classes.qrImage}):React.createElement(CropFreeIcon,{fontSize:\"large\",className:classes.uploadIcon}),loadedImage&&React.createElement(\"div\",{className:classes.canvasWrap},React.createElement(\"canvas\",{id:\"qr_canvas\",className:classes.canvas},\"canvas\"))))));}var useStyles=makeStyles(function(theme){return{uploadIcon:{margin:20,\"&:hover\":{cursor:\"pointer\"}},qrImage:{height:200},canvasWrap:{height:0,top:-207,position:\"relative\"},canvas:{zIndex:100,// height: 200,\n// width: 276,\nposition:\"relative\"// border: \"1px solid green\"\n}};});export default MyDropzone;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Play/Dropzone_QR.js"],"names":["React","useState","useCallback","useDropzone","CropFreeIcon","makeStyles","Grid","QrCode","Spinner","Instascan","require","MyDropzone","setQrCodeData","classes","useStyles","isUploading","setIsUploading","loadedImage","setLoadedImage","onDrop","acceptedFiles","map","file","console","log","reader","FileReader","onload","input","target","result","qr","callback","err","value","error","image","Image","width","naturalWidth","height","naturalHeight","ratio","sqSize","points","estimatedModuleSize","x","y","canvas","document","getElementById","ctx","getContext","beginPath","lineWidth","strokeStyle","rect","stroke","src","decode","readAsDataURL","getRootProps","getInputProps","isDragActive","outline","cursor","border","qrImage","uploadIcon","canvasWrap","theme","margin","top","position","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport QrCode from 'qrcode-reader';\n\nimport Spinner from \"src/Atoms/Spinner\";\n\nvar Instascan = require('instascan');\n\nfunction MyDropzone({setQrCodeData}) {\n  const classes = useStyles();\n  const [isUploading, setIsUploading] = useState(false);\n  const [loadedImage, setLoadedImage] = useState(null);\n  const onDrop = useCallback(acceptedFiles => {\n\n    setIsUploading(true);\n\n    acceptedFiles.map(file => {\n      console.log(\"DROP FILE: \", file)\n      var reader = new FileReader();\n      reader.onload = function(input) {\n        setLoadedImage(input.target.result);\n  \n        console.log(\"INPUT: \", input)\n              var qr = new QrCode();\n              qr.callback = function(err, value) {\n                  if (err) {\n                      console.error(err);\n                      setQrCodeData(\"We could not read this\")\n                      setIsUploading(false)\n                  }\n                  if(value){\n                    console.log(\"XX+: \", value);\n\n                    setIsUploading(false)\n                    setQrCodeData(value.result) \n\n                    const image = new Image;\n                    image.onload = () => {\n                        const width = image.naturalWidth;\n                        const height = image.naturalHeight;\n                        console.log(\"NATTY: \", width, height)\n                        const ratio = height/200;\n                        const sqSize = value.points[0].estimatedModuleSize/ratio\n                        console.log(\"NATTY ratio: \", ratio)\n                        console.log(\"Point x, y+: \", (value.points[2].x/ratio), (value.points[2].y/ratio));\n\n                        var canvas = document.getElementById(\"qr_canvas\");\n                        canvas.height = image.naturalHeight/ratio\n                        canvas.width = image.naturalWidth/ratio\n                        var ctx = canvas.getContext(\"2d\");\n                        ctx.beginPath();\n                        ctx.lineWidth = \"3\";\n                        ctx.strokeStyle = \"#E8045D\";\n                        ctx.rect((value.points[1].x/ratio - sqSize/2), (value.points[1].y/ratio - sqSize/2), sqSize, sqSize);\n                        ctx.stroke(); \n\n                        ctx.beginPath();\n                        ctx.lineWidth = \"3\";\n                        ctx.strokeStyle = \"#E8045D\";\n                        ctx.rect((value.points[0].x/ratio - sqSize/2), (value.points[0].y/ratio - sqSize/2), sqSize, sqSize);\n                        ctx.stroke(); \n\n                        ctx.beginPath();\n                        ctx.lineWidth = \"3\";\n                        ctx.strokeStyle = \"#E8045D\";\n                        ctx.rect((value.points[2].x/ratio - sqSize/2), (value.points[2].y/ratio - sqSize/2), sqSize, sqSize);\n                        ctx.stroke(); \n\n                    }\n                    image.src =  input.target.result\n\n                  }\n              };\n              qr.decode(input.target.result);\n      }\n\n      reader.readAsDataURL(file);\n\n      // var barcodeDetector = new BarcodeDetector();\n\n      // let id = devices.filter((device) => device.kind === \"videoinput\").slice(-1).pop().deviceId;\n      // let constrains = {video: {optional: [{sourceId: id }]}};\n\n      // navigator.mediaDevices.getUserMedia({}).then((stream) => {\n      //   console.log(\"stream: \", stream)\n      //   document.getElementById('preview').src = stream;\n      // })\n    });\n  }, []);\n\n  // var scanner = new Instascan.Scanner({ video: document.getElementById('preview') });\n  // scanner.addListener('scan', function (content, image) {\n  //   console.log(content);\n  // });\n\n  // Instascan.Camera.getCameras().then(function (cameras) {\n  //   if (cameras.length > 0) {\n  //     scanner.start(cameras[0]);\n  //   }\n  // });\n\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <>\n      <div\n        {...getRootProps()}\n        style={{\n          outline: \"none\",\n          cursor: \"pointer\",\n          border: \"1px dashed grey\"\n        }}\n      >\n        <input {...getInputProps()} />\n        <Grid container justify=\"center\">\n          <Grid item>\n          {/* {isDragActive ? (\n            <>\n              <WallpaperIcon fontSize=\"large\" className={classes.uploadIcon} />\n            </>\n          ) : (\n            <>\n              <WallpaperIcon fontSize=\"large\" className={classes.uploadIcon} />\n            </>\n          )} */}\n           {isUploading ? <Spinner height={100} width={100} /> \n                : loadedImage ? <img src={loadedImage} alt=\"No Image\" className={classes.qrImage} /> : <CropFreeIcon fontSize=\"large\" className={classes.uploadIcon} />}\n           {loadedImage && <div className={classes.canvasWrap}>\n                              <canvas id=\"qr_canvas\" className={classes.canvas}> \n                                canvas \n                              </canvas>\n                            </div>}\n          </ Grid>\n        </ Grid>\n      </div>\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  uploadIcon: {\n    margin: 20,\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  qrImage:{\n    height: 200,\n  },\n  canvasWrap: {\n    height: 0,\n    top:  -207,\n    position: \"relative\"\n  },\n  canvas: {\n    zIndex: 100,\n    // height: 200,\n    // width: 276,\n    position: \"relative\",\n    // border: \"1px solid green\"\n  }\n}));\n\nexport default MyDropzone;\n"]},"metadata":{},"sourceType":"module"}