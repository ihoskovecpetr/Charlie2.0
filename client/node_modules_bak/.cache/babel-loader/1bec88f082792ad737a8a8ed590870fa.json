{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/MapCreate.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useMemo, useCallback } from \"react\"; //import GeolocationMarker from 'geolocation-marker'\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\"; // import { GeolocationMarker } from 'geolocation-marker'\n\nimport GeolocationMarker from 'geolocation-marker';\nimport { UserContext } from \"../userContext\";\nimport Map from \"../Atoms/MapAtom\";\nlet LngLatCenter = {\n  lat: 50.068645,\n  lng: 14.457364\n};\n\nfunction MapCreate(props) {\n  //const { latitude, longitude, error } = usePosition();\n  const _useContext = useContext(UserContext),\n        context = _useContext.context;\n\n  const _useState = useState(\"Write address\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        addressTxt = _useState2[0],\n        setAddressTxt = _useState2[1];\n\n  let marker; //let markerGeoLoc = { lat: latitude, lng: longitude };\n\n  let geocoder; //console.log(\"RENDER CREATE MAP: position: \", markerGeoLoc);\n\n  if (context.geolocationObj) {\n    LngLatCenter = context.geolocationObj;\n  }\n\n  const MapOptions = useMemo(() => {\n    return {\n      center: LngLatCenter,\n      zoom: 10,\n      disableDefaultUI: true,\n      zoomControl: true,\n      //mapTypeId: window.google.maps.MapTypeId.ROADMAP,\n      clickableIcons: false,\n      gestureHandling: \"cooperative\"\n    };\n  }, [LngLatCenter]);\n  const onMapMount = useCallback(map => {\n    marker = new window.google.maps.Marker({\n      map: map,\n      anchorPoint: new window.google.maps.Point(0, -29)\n    });\n    var GeoMarker = new window.GeolocationMarker(map);\n    var input = document.getElementById(\"input-location\");\n    var autocomplete = new window.google.maps.places.Autocomplete(input);\n    geocoder = new window.google.maps.Geocoder();\n    autocomplete.bindTo(\"bounds\", map);\n\n    if (props.customMapParam) {\n      marker.setPosition({\n        lng: props.customMapParam.lng,\n        lat: props.customMapParam.lat\n      });\n      map.panTo({\n        lng: props.customMapParam.lng,\n        lat: props.customMapParam.lat\n      });\n      map.setZoom(props.customMapParam.zoom);\n      document.getElementById(\"input-location\").value = props.customMapParam.address;\n    } else if (LngLatCenter) {\n      marker.setPosition(LngLatCenter);\n      map.panTo(LngLatCenter);\n      geocodeLatLng(geocoder, map, LngLatCenter.lat, LngLatCenter.lng);\n    }\n\n    map.addListener(\"zoom_changed\", function () {\n      props.setCustomMapParam(prev => {\n        return _objectSpread({}, prev, {\n          zoom: map.zoom\n        });\n      });\n    });\n    map.addListener(\"click\", e => {\n      document.getElementById(\"input-location\").value = \"\";\n      marker.setVisible(false);\n      marker.setPosition(e.latLng);\n      marker.setVisible(true);\n      console.log(\"Click\");\n      geocodeLatLng(geocoder, map, e.latLng.lat(), e.latLng.lng());\n    });\n    autocomplete.addListener(\"place_changed\", function () {\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n\n      if (!place.geometry) {\n        // User entered the name of a Place that was not suggested and\n        // pressed the Enter key, or the Place Details request failed.\n        //window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      } // If the place has a geometry, then present it on a map.\n\n\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n        marker.setPosition(place.geometry.location);\n        marker.setVisible(true);\n      } else {\n        //console.log(\"Setting here center: \", place.geometry.location);\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n\n      LngLatCenter = {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      };\n      let address = \"\";\n\n      if (place.address_components) {\n        address = [place.address_components[0] && place.address_components[0].short_name || \"\", place.address_components[1] && place.address_components[1].short_name || \"\", place.address_components[2] && place.address_components[2].short_name || \"\"].join(\" \");\n      }\n\n      console.log(\"Tohle place ma addresu: \", place.address_components);\n      props.setCustomMapParam(prev => {\n        return _objectSpread({}, prev, {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n          address: address,\n          zoom: map.zoom,\n          uncontrolledAdr: false\n        });\n      });\n    });\n  }, []);\n\n  const geocodeLatLng = (geocoder, map, lat, lng) => {\n    geocoder.geocode({\n      location: {\n        lat: lat,\n        lng: lng\n      }\n    }, function (results, status, error_message) {\n      //console.log(\"results: \", results, status, error_message);\n      var shortAddress;\n\n      if (results) {\n        console.log(\"Agres: \", results);\n        var spl = results[0].formatted_address.split(\" \"); // shortAddress = [spl[0], spl[1], spl[2], spl[3]].join(\" \");\n\n        shortAddress = results[0].formatted_address;\n      } else {\n        shortAddress = \"Google did not find address for this location.\";\n      }\n\n      status && props.setCustomMapParam(prev => {\n        return _objectSpread({}, prev, {\n          address: shortAddress,\n          lat: lat,\n          lng: lng,\n          zoom: map.zoom,\n          uncontrolledAdr: false\n        });\n      });\n\n      if (error_message) {\n        window.alert(\"Geocoder failed due to: \" + status); //this.setState({addressOffer: \"No address in your location\"})\n        // props.setCustomMapParam(prev => {\n        //   return { ...prev, address: \"Failed to localize you\" };\n        // });\n      }\n    });\n  };\n\n  const MapAtom = useMemo(() => React.createElement(Map, {\n    onMount: onMapMount,\n    options: MapOptions,\n    className: \"Create-hell-of-a-party\",\n    styling: {\n      height: \"200px\",\n      width: \"100%\",\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), [onMapMount, MapOptions]);\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"input-location\",\n    name: \"address\",\n    autoComplete: \"address\",\n    style: {\n      marginBottom: 0,\n      display: props.customMapParam && props.customMapParam.uncontrolledAdr ? \"block\" : \"none\"\n    },\n    onKeyPress: e => {\n      if (e.key === \"Enter\") e.preventDefault();\n    },\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"input-location-controlled\",\n    value: props.customMapParam && props.customMapParam.address ? props.customMapParam.address : \"no address yet\" //label=\"Enter a location\"\n    //placeholder=\"Enter a location\"\n    ,\n    name: \"address\",\n    style: {\n      marginBottom: 0,\n      display: props.customMapParam && props.customMapParam.uncontrolledAdr && \"none\"\n    },\n    disabled: true,\n    onKeyPress: e => {\n      if (e.key === \"Enter\") e.preventDefault();\n    },\n    onClick: () => {\n      props.setCustomMapParam(prev => {\n        return _objectSpread({}, prev, {\n          uncontrolledAdr: true\n        });\n      });\n    },\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))), MapAtom);\n}\n\nexport default React.memo(MapCreate);","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/MapCreate.js"],"names":["React","useContext","useState","useMemo","useCallback","TextField","Grid","GeolocationMarker","UserContext","Map","LngLatCenter","lat","lng","MapCreate","props","context","addressTxt","setAddressTxt","marker","geocoder","geolocationObj","MapOptions","center","zoom","disableDefaultUI","zoomControl","clickableIcons","gestureHandling","onMapMount","map","window","google","maps","Marker","anchorPoint","Point","GeoMarker","input","document","getElementById","autocomplete","places","Autocomplete","Geocoder","bindTo","customMapParam","setPosition","panTo","setZoom","value","address","geocodeLatLng","addListener","setCustomMapParam","prev","e","setVisible","latLng","console","log","place","getPlace","geometry","viewport","fitBounds","location","setCenter","address_components","short_name","join","uncontrolledAdr","geocode","results","status","error_message","shortAddress","spl","formatted_address","split","alert","MapAtom","height","width","marginBottom","display","key","preventDefault","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useMemo, useCallback } from \"react\";\n//import GeolocationMarker from 'geolocation-marker'\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\n// import { GeolocationMarker } from 'geolocation-marker'\nimport GeolocationMarker from 'geolocation-marker'\n\nimport { UserContext } from \"../userContext\";\n\nimport Map from \"../Atoms/MapAtom\";\n\nlet LngLatCenter = { lat: 50.068645, lng: 14.457364 };\n\nfunction MapCreate(props) {\n  //const { latitude, longitude, error } = usePosition();\n  const { context } = useContext(UserContext);\n  const [addressTxt, setAddressTxt] = useState(\"Write address\");\n  let marker;\n  //let markerGeoLoc = { lat: latitude, lng: longitude };\n  let geocoder;\n\n  //console.log(\"RENDER CREATE MAP: position: \", markerGeoLoc);\n\n  if (context.geolocationObj) {\n    LngLatCenter = context.geolocationObj;\n  }\n\n  const MapOptions = useMemo(() => {\n    return {\n      center: LngLatCenter,\n      zoom: 10,\n      disableDefaultUI: true,\n      zoomControl: true,\n      //mapTypeId: window.google.maps.MapTypeId.ROADMAP,\n      clickableIcons: false,\n      gestureHandling: \"cooperative\"\n    };\n  }, [LngLatCenter]);\n\n  const onMapMount = useCallback(map => {\n\n    marker = new window.google.maps.Marker({\n      map: map,\n      anchorPoint: new window.google.maps.Point(0, -29)\n    });\n\n    var GeoMarker = new window.GeolocationMarker(map);\n\n    var input = document.getElementById(\"input-location\");\n    var autocomplete = new window.google.maps.places.Autocomplete(input);\n    geocoder = new window.google.maps.Geocoder();\n    autocomplete.bindTo(\"bounds\", map);\n\n    if (props.customMapParam) {\n      marker.setPosition({\n        lng: props.customMapParam.lng,\n        lat: props.customMapParam.lat\n      });\n      map.panTo({\n        lng: props.customMapParam.lng,\n        lat: props.customMapParam.lat\n      });\n      map.setZoom(props.customMapParam.zoom);\n      document.getElementById(\"input-location\").value =\n        props.customMapParam.address;\n    } else if (LngLatCenter) {\n      marker.setPosition(LngLatCenter);\n      map.panTo(LngLatCenter);\n      geocodeLatLng(geocoder, map, LngLatCenter.lat, LngLatCenter.lng);\n    }\n    map.addListener(\"zoom_changed\", function() {\n      props.setCustomMapParam(prev => {\n        return {\n          ...prev,\n          zoom: map.zoom\n        };\n      });\n    });\n\n    map.addListener(\"click\", e => {\n      document.getElementById(\"input-location\").value = \"\";\n      marker.setVisible(false);\n      marker.setPosition(e.latLng);\n      marker.setVisible(true);\n      console.log(\"Click\")\n\n      geocodeLatLng(geocoder, map, e.latLng.lat(), e.latLng.lng());\n    });\n\n    autocomplete.addListener(\"place_changed\", function() {\n      marker.setVisible(false);\n      var place = autocomplete.getPlace();\n      if (!place.geometry) {\n        // User entered the name of a Place that was not suggested and\n        // pressed the Enter key, or the Place Details request failed.\n        //window.alert(\"No details available for input: '\" + place.name + \"'\");\n        return;\n      }\n\n      // If the place has a geometry, then present it on a map.\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n        marker.setPosition(place.geometry.location);\n        marker.setVisible(true);\n      } else {\n        //console.log(\"Setting here center: \", place.geometry.location);\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n\n      LngLatCenter = {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      };\n\n      let address = \"\";\n\n      if (place.address_components) {\n        address = [\n          (place.address_components[0] &&\n            place.address_components[0].short_name) ||\n            \"\",\n          (place.address_components[1] &&\n            place.address_components[1].short_name) ||\n            \"\",\n          (place.address_components[2] &&\n            place.address_components[2].short_name) ||\n            \"\"\n        ].join(\" \");\n      }\n\n      console.log(\n        \"Tohle place ma addresu: \",\n        place.address_components\n      );\n\n      props.setCustomMapParam(prev => {\n        return {\n          ...prev,\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n          address: address,\n          zoom: map.zoom,\n          uncontrolledAdr: false\n        };\n      });\n    });\n  }, []);\n\n  const geocodeLatLng = (geocoder, map, lat, lng) => {\n    geocoder.geocode({ location: { lat: lat, lng: lng } }, function(\n      results,\n      status,\n      error_message\n    ) {\n      //console.log(\"results: \", results, status, error_message);\n      var shortAddress;\n      if (results) {\n        console.log(\"Agres: \", results)\n        var spl = results[0].formatted_address.split(\" \");\n        // shortAddress = [spl[0], spl[1], spl[2], spl[3]].join(\" \");\n        shortAddress = results[0].formatted_address\n      } else {\n        shortAddress = \"Google did not find address for this location.\";\n      }\n\n      status &&\n        props.setCustomMapParam(prev => {\n          return {\n            ...prev,\n            address: shortAddress,\n            lat: lat,\n            lng: lng,\n            zoom: map.zoom,\n            uncontrolledAdr: false\n          };\n        });\n      if (error_message) {\n        window.alert(\"Geocoder failed due to: \" + status);\n        //this.setState({addressOffer: \"No address in your location\"})\n        // props.setCustomMapParam(prev => {\n        //   return { ...prev, address: \"Failed to localize you\" };\n        // });\n      }\n    });\n  };\n\n  const MapAtom = useMemo(\n    () => (\n      <Map\n        onMount={onMapMount}\n        options={MapOptions}\n        className=\"Create-hell-of-a-party\"\n        styling={{\n          height: \"200px\",\n          width: \"100%\",\n          marginBottom: 20\n        }}\n      />\n    ),\n    [onMapMount, MapOptions]\n  );\n\n  return (\n    <>\n      <Grid container>\n        <Grid item style={{ width: \"100%\" }}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"input-location\"\n            name=\"address\"\n            autoComplete=\"address\"\n            style={{\n              marginBottom: 0,\n              display:\n                props.customMapParam && props.customMapParam.uncontrolledAdr\n                  ? \"block\"\n                  : \"none\"\n            }}\n            onKeyPress={e => {\n              if (e.key === \"Enter\") e.preventDefault();\n            }}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"input-location-controlled\"\n            value={\n              props.customMapParam && props.customMapParam.address\n                ? props.customMapParam.address\n                : \"no address yet\"\n            }\n            //label=\"Enter a location\"\n            //placeholder=\"Enter a location\"\n            name=\"address\"\n            style={{\n              marginBottom: 0,\n              display:\n                props.customMapParam &&\n                props.customMapParam.uncontrolledAdr &&\n                \"none\"\n            }}\n            disabled\n            onKeyPress={e => {\n              if (e.key === \"Enter\") e.preventDefault();\n            }}\n            onClick={() => {\n              props.setCustomMapParam(prev => {\n                return {\n                  ...prev,\n                  uncontrolledAdr: true\n                };\n              });\n            }}\n            autoFocus\n          />\n        </Grid>\n      </Grid>\n      {MapAtom}\n    </>\n  );\n}\n\nexport default React.memo(MapCreate);\n"]},"metadata":{},"sourceType":"module"}