{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/SearchPage.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nquery textSearch($text: String!){\\n  textSearch(text: $text) {\\n    events{\\n        _id\\n        createdAt\\n        updatedAt\\n        success\\n        name\\n        price\\n        capacityMax\\n        currency\\n        dateStart\\n        dateEnd\\n        happeningNow\\n        address\\n        description\\n        areYouAuthor\\n        author {\\n          _id\\n          name\\n          picture\\n          description\\n        }\\n        geometry {\\n          coordinates\\n        }\\n        imagesArr {\\n          caption\\n          src\\n          thumbnail\\n          thumbnailHeight\\n          thumbnailWidth\\n          scaletwidth\\n          marginLeft\\n          vwidth\\n        }\\n    }\\n    users{\\n      _id\\n      name\\n      picture\\n      description\\n    }\\n    errorOut{\\n      name\\n      message\\n    }\\n\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useXsSize } from \"../Hooks/useXsSize\";\nimport EventSearchResult from \"src/Atoms/Search/EventSearchResult\";\nimport UserResult from \"src/Atoms/Search/UserResult\";\nconst SEARCH = gql(_templateObject());\nexport default function Search() {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useXsSize = useXsSize(),\n        md_size_memo = _useXsSize.md_size_memo;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        placeHolder = _useState4[0],\n        setPlaceHolder = _useState4[1];\n\n  const _useQuery = useQuery(SEARCH, {\n    variables: {\n      text: text\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data,\n        refetch = _useQuery.refetch;\n\n  useEffect(() => {\n    const query = history.location.search.split(\"?\")[1] ? history.location.search.split(\"?\")[1].split(\"=\")[1] : null;\n    console.log(\"Decoded Query: \", decodeURIComponent(query));\n    setText(decodeURIComponent(query));\n    setPlaceHolder(decodeURIComponent(query));\n  }, []);\n\n  const handleChangeText = value => {\n    console.log(\"Value: \", value, value.target.value);\n    setPlaceHolder(value.target.value);\n  };\n\n  const handleSearch = () => {\n    setText(placeHolder);\n    refetch();\n    history.replace(\"search?text=\".concat(placeHolder));\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      color: false ? \"white\" : \"black\",\n      height: \"100vh\",\n      background: false ? \"linear-gradient(90deg, rgba(29,47,94,1) 0%, rgba(104,81,123,1) 100%)\" : null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.mainGridCont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"input-with-icon-adornment\",\n    className: classes.searchField,\n    placeholder: \"Search\",\n    value: placeHolder,\n    fullWidth: true,\n    name: \"text\",\n    onKeyDown: ev => {\n      if (ev.key === 'Enter') {\n        //ev.preventDefault();\n        console.log(\"onKeyDown: ENTER \", ev);\n        handleSearch();\n      }\n    },\n    onChange: handleChangeText,\n    startAdornment: React.createElement(InputAdornment, {\n      position: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    fullWidth: true,\n    onClick: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Search\"), loading && React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Loading...\"), data && data.textSearch.events.map((event, index) => React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.itemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(EventSearchResult, {\n    event: event,\n    searchText: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })))), data && data.textSearch.users.map((user, index) => React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    className: classes.itemGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.itemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(UserResult, {\n    user: user,\n    searchText: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })))))));\n}\nconst useStyles = makeStyles(theme => ({\n  mainGridCont: {\n    position: \"relative\",\n    paddingTop: 20\n  },\n  searchField: {\n    marginLeft: 0,\n    marginBottom: 5\n  },\n  itemContainer: {\n    width: \"100%\"\n  },\n  itemGrid: {\n    width: \"100%\"\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/SearchPage.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","SearchIcon","Input","InputAdornment","useHistory","makeStyles","useMutation","useQuery","gql","useXsSize","EventSearchResult","UserResult","SEARCH","Search","classes","useStyles","history","md_size_memo","text","setText","placeHolder","setPlaceHolder","variables","loading","error","data","refetch","query","location","search","split","console","log","decodeURIComponent","handleChangeText","value","target","handleSearch","replace","overflow","color","height","background","mainGridCont","searchField","ev","key","textSearch","events","map","event","index","itemGrid","itemContainer","users","user","theme","position","paddingTop","marginLeft","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { useXsSize } from \"../Hooks/useXsSize\";\nimport EventSearchResult from \"src/Atoms/Search/EventSearchResult\";\nimport UserResult from \"src/Atoms/Search/UserResult\";\n\nconst SEARCH = gql`\nquery textSearch($text: String!){\n  textSearch(text: $text) {\n    events{\n        _id\n        createdAt\n        updatedAt\n        success\n        name\n        price\n        capacityMax\n        currency\n        dateStart\n        dateEnd\n        happeningNow\n        address\n        description\n        areYouAuthor\n        author {\n          _id\n          name\n          picture\n          description\n        }\n        geometry {\n          coordinates\n        }\n        imagesArr {\n          caption\n          src\n          thumbnail\n          thumbnailHeight\n          thumbnailWidth\n          scaletwidth\n          marginLeft\n          vwidth\n        }\n    }\n    users{\n      _id\n      name\n      picture\n      description\n    }\n    errorOut{\n      name\n      message\n    }\n\n  }\n}\n`;\n\nexport default function Search(){\n  const classes = useStyles();\n  let history = useHistory();\n  const { md_size_memo } = useXsSize();\n  const [text, setText] = useState();\n  const [placeHolder, setPlaceHolder] = useState();\n  const { loading, error, data, refetch } = useQuery(SEARCH, {\n    variables: { text: text }\n  });\n\n  useEffect(() => {\n    const query = history.location.search.split(\"?\")[1] ? history.location.search.split(\"?\")[1].split(\"=\")[1] : null\n    console.log(\"Decoded Query: \", decodeURIComponent(query))\n    setText(decodeURIComponent(query))\n    setPlaceHolder(decodeURIComponent(query))\n  }, [])\n\n  const handleChangeText = (value) => {\n    console.log(\"Value: \", value, value.target.value)\n    setPlaceHolder(value.target.value)\n  }\n\n  const handleSearch = () => {\n    setText(placeHolder)\n    refetch()\n    history.replace(`search?text=${placeHolder}`)\n  }\n\n    return (\n      <div style={{\n                overflow: \"hidden\",\n                color: false ? \"white\" : \"black\",\n                height: \"100vh\",\n                background: false\n                  ? \"linear-gradient(90deg, rgba(29,47,94,1) 0%, rgba(104,81,123,1) 100%)\"\n                  : null\n              }}>\n            <Container maxWidth=\"sm\">\n              <Grid container className={classes.mainGridCont}>\n                <Grid item xs={12}>\n                <Input\n                    id=\"input-with-icon-adornment\"\n                    className={classes.searchField}\n                    placeholder=\"Search\"\n                    value={placeHolder}\n                    fullWidth={true}\n                    name=\"text\"\n                    onKeyDown={(ev) => {\n                      if (ev.key === 'Enter') {\n                      //ev.preventDefault();\n                      console.log(\"onKeyDown: ENTER \", ev)\n                      handleSearch()\n                    }\n                    }}\n                    onChange={handleChangeText}\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    }\n                  />\n                  </Grid>\n\n                  <Button \n                      variant=\"contained\" \n                      color=\"secondary\" \n                      fullWidth={true} \n                      onClick={handleSearch}> \n                              Search \n                  </Button>\n\n                  {loading && <Typography\n                                variant=\"body2\"\n                                align=\"center\">\n                                Loading...\n                              </Typography>}\n\n                    {data && data.textSearch.events.map((event, index) => (\n                        <Grid item xs={12} key={index} className={classes.itemGrid}>\n                            <Grid container justify=\"center\" className={classes.itemContainer}>\n                                <EventSearchResult event={event} searchText={text} />\n                            </Grid>\n                        </Grid>\n                      ))}\n                    {data && data.textSearch.users.map((user, index) => (\n                        <Grid item xs={12} key={index} className={classes.itemGrid}>\n                            <Grid container justify=\"center\" className={classes.itemContainer}>\n                                <UserResult user={user} searchText={text} />\n                            </Grid>\n                        </Grid>\n                      ))}\n                </Grid>\n            </Container>\n          </div>\n  )\n}\n\n\n  const useStyles = makeStyles(theme => ({\n    mainGridCont: {\n      position: \"relative\",\n      paddingTop: 20\n    },\n    searchField:{\n      marginLeft: 0,\n      marginBottom: 5\n    },\n    itemContainer: {\n      width: \"100%\",\n    },\n    itemGrid: {\n      width: \"100%\",\n    },\n  }));\n"]},"metadata":{},"sourceType":"module"}