{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\nquery textSearch($text: String!){\\n  textSearch(text: $text) {\\n    events{\\n        _id\\n        createdAt\\n        updatedAt\\n        success\\n        name\\n        price\\n        capacityMax\\n        currency\\n        dateStart\\n        dateEnd\\n        happeningNow\\n        address\\n        description\\n        areYouAuthor\\n        author {\\n          _id\\n          name\\n          picture\\n          description\\n        }\\n        geometry {\\n          coordinates\\n        }\\n        imagesArr {\\n          caption\\n          src\\n          thumbnail\\n          thumbnailHeight\\n          thumbnailWidth\\n          scaletwidth\\n          marginLeft\\n          vwidth\\n        }\\n    }\\n    users{\\n      _id\\n      name\\n      picture\\n      description\\n    }\\n    errorOut{\\n      name\\n      message\\n    }\\n\\n  }\\n}\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import Container from\"@material-ui/core/Container\";import Grid from\"@material-ui/core/Grid\";import Button from\"@material-ui/core/Button\";import Typography from\"@material-ui/core/Typography\";import SearchIcon from'@material-ui/icons/Search';import Input from\"@material-ui/core/Input\";import InputAdornment from\"@material-ui/core/InputAdornment\";import{useHistory}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import{useMutation,useQuery}from\"@apollo/react-hooks\";import gql from\"graphql-tag\";import{useXsSize}from\"../Hooks/useXsSize\";import EventSearchResult from\"src/Atoms/Search/EventSearchResult\";import UserResult from\"src/Atoms/Search/UserResult\";var SEARCH=gql(_templateObject());export default function Search(){var classes=useStyles();var history=useHistory();var _useXsSize=useXsSize(),md_size_memo=_useXsSize.md_size_memo;var _useState=useState(),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),placeHolder=_useState4[0],setPlaceHolder=_useState4[1];var _useQuery=useQuery(SEARCH,{variables:{text:text}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;useEffect(function(){var query=history.location.search.split(\"?\")[1]?history.location.search.split(\"?\")[1].split(\"=\")[1]:null;console.log(\"Decoded Query: \",decodeURIComponent(query));setText(decodeURIComponent(query));setPlaceHolder(decodeURIComponent(query));},[]);var handleChangeText=function handleChangeText(value){console.log(\"Value: \",value,value.target.value);setPlaceHolder(value.target.value);};var handleSearch=function handleSearch(){setText(placeHolder);refetch();history.replace(\"search?text=\".concat(placeHolder));};return React.createElement(\"div\",{style:{overflow:\"hidden\",color:false?\"white\":\"black\",height:\"100vh\",background:false?\"linear-gradient(90deg, rgba(29,47,94,1) 0%, rgba(104,81,123,1) 100%)\":null}},React.createElement(Container,{maxWidth:\"sm\"},React.createElement(Grid,{container:true,className:classes.mainGridCont},React.createElement(Grid,{item:true,xs:12},React.createElement(Input,{id:\"input-with-icon-adornment\",className:classes.searchField,placeholder:\"Search\",value:placeHolder,fullWidth:true,name:\"text\",onKeyDown:function onKeyDown(ev){if(ev.key==='Enter'){//ev.preventDefault();\nconsole.log(\"onKeyDown: ENTER \",ev);handleSearch();}},onChange:handleChangeText,startAdornment:React.createElement(InputAdornment,{position:\"start\"},React.createElement(SearchIcon,null))})),React.createElement(Button,{variant:\"contained\",color:\"secondary\",fullWidth:true,onClick:handleSearch},\"Search\"),loading&&React.createElement(Typography,{variant:\"body2\",align:\"center\"},\"Loading...\"),data&&data.textSearch.events.map(function(event,index){return React.createElement(Grid,{item:true,xs:12,key:index,className:classes.itemGrid},React.createElement(Grid,{container:true,justify:\"center\",className:classes.itemContainer},React.createElement(EventSearchResult,{event:event,searchText:text})));}),data&&data.textSearch.users.map(function(user,index){return React.createElement(Grid,{item:true,xs:12,key:index,className:classes.itemGrid},React.createElement(Grid,{container:true,justify:\"center\",className:classes.itemContainer},React.createElement(UserResult,{user:user,searchText:text})));}))));}var useStyles=makeStyles(function(theme){return{mainGridCont:{position:\"relative\",paddingTop:20},searchField:{marginLeft:0,marginBottom:5},itemContainer:{width:\"100%\"},itemGrid:{width:\"100%\"}};});","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/SearchPage.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","SearchIcon","Input","InputAdornment","useHistory","makeStyles","useMutation","useQuery","gql","useXsSize","EventSearchResult","UserResult","SEARCH","Search","classes","useStyles","history","md_size_memo","text","setText","placeHolder","setPlaceHolder","variables","loading","error","data","refetch","query","location","search","split","console","log","decodeURIComponent","handleChangeText","value","target","handleSearch","replace","overflow","color","height","background","mainGridCont","searchField","ev","key","textSearch","events","map","event","index","itemGrid","itemContainer","users","user","theme","position","paddingTop","marginLeft","marginBottom","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { useXsSize } from \"../Hooks/useXsSize\";\nimport EventSearchResult from \"src/Atoms/Search/EventSearchResult\";\nimport UserResult from \"src/Atoms/Search/UserResult\";\n\nconst SEARCH = gql`\nquery textSearch($text: String!){\n  textSearch(text: $text) {\n    events{\n        _id\n        createdAt\n        updatedAt\n        success\n        name\n        price\n        capacityMax\n        currency\n        dateStart\n        dateEnd\n        happeningNow\n        address\n        description\n        areYouAuthor\n        author {\n          _id\n          name\n          picture\n          description\n        }\n        geometry {\n          coordinates\n        }\n        imagesArr {\n          caption\n          src\n          thumbnail\n          thumbnailHeight\n          thumbnailWidth\n          scaletwidth\n          marginLeft\n          vwidth\n        }\n    }\n    users{\n      _id\n      name\n      picture\n      description\n    }\n    errorOut{\n      name\n      message\n    }\n\n  }\n}\n`;\n\nexport default function Search(){\n  const classes = useStyles();\n  let history = useHistory();\n  const { md_size_memo } = useXsSize();\n  const [text, setText] = useState();\n  const [placeHolder, setPlaceHolder] = useState();\n  const { loading, error, data, refetch } = useQuery(SEARCH, {\n    variables: { text: text }\n  });\n\n  useEffect(() => {\n    const query = history.location.search.split(\"?\")[1] ? history.location.search.split(\"?\")[1].split(\"=\")[1] : null\n    console.log(\"Decoded Query: \", decodeURIComponent(query))\n    setText(decodeURIComponent(query))\n    setPlaceHolder(decodeURIComponent(query))\n  }, [])\n\n  const handleChangeText = (value) => {\n    console.log(\"Value: \", value, value.target.value)\n    setPlaceHolder(value.target.value)\n  }\n\n  const handleSearch = () => {\n    setText(placeHolder)\n    refetch()\n    history.replace(`search?text=${placeHolder}`)\n  }\n\n    return (\n      <div style={{\n                overflow: \"hidden\",\n                color: false ? \"white\" : \"black\",\n                height: \"100vh\",\n                background: false\n                  ? \"linear-gradient(90deg, rgba(29,47,94,1) 0%, rgba(104,81,123,1) 100%)\"\n                  : null\n              }}>\n            <Container maxWidth=\"sm\">\n              <Grid container className={classes.mainGridCont}>\n                <Grid item xs={12}>\n                <Input\n                    id=\"input-with-icon-adornment\"\n                    className={classes.searchField}\n                    placeholder=\"Search\"\n                    value={placeHolder}\n                    fullWidth={true}\n                    name=\"text\"\n                    onKeyDown={(ev) => {\n                      if (ev.key === 'Enter') {\n                      //ev.preventDefault();\n                      console.log(\"onKeyDown: ENTER \", ev)\n                      handleSearch()\n                    }\n                    }}\n                    onChange={handleChangeText}\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    }\n                  />\n                  </Grid>\n\n                  <Button \n                      variant=\"contained\" \n                      color=\"secondary\" \n                      fullWidth={true} \n                      onClick={handleSearch}> \n                              Search \n                  </Button>\n\n                  {loading && <Typography\n                                variant=\"body2\"\n                                align=\"center\">\n                                Loading...\n                              </Typography>}\n\n                    {data && data.textSearch.events.map((event, index) => (\n                        <Grid item xs={12} key={index} className={classes.itemGrid}>\n                            <Grid container justify=\"center\" className={classes.itemContainer}>\n                                <EventSearchResult event={event} searchText={text} />\n                            </Grid>\n                        </Grid>\n                      ))}\n                    {data && data.textSearch.users.map((user, index) => (\n                        <Grid item xs={12} key={index} className={classes.itemGrid}>\n                            <Grid container justify=\"center\" className={classes.itemContainer}>\n                                <UserResult user={user} searchText={text} />\n                            </Grid>\n                        </Grid>\n                      ))}\n                </Grid>\n            </Container>\n          </div>\n  )\n}\n\n\n  const useStyles = makeStyles(theme => ({\n    mainGridCont: {\n      position: \"relative\",\n      paddingTop: 20\n    },\n    searchField:{\n      marginLeft: 0,\n      marginBottom: 5\n    },\n    itemContainer: {\n      width: \"100%\",\n    },\n    itemGrid: {\n      width: \"100%\",\n    },\n  }));\n"]},"metadata":{},"sourceType":"module"}