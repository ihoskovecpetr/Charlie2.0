{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/play/UserCardPlay.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query showRatings($host_id: ID!) {\\n    showRatings(host_id: $host_id) {\\n      guest {\\n        picture\\n        name\\n      }\\n      message\\n      ratingValue\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { NavLink } from \"react-router-dom\";\nimport Spinner from \"src/Atoms/Spinner\";\nconst HOST_RATINGS = gql(_templateObject());\nexport default function UserCardPlay(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _React$useState = React.useState(2),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _useQuery = useQuery(HOST_RATINGS, {\n    variables: {\n      host_id: props.author._id\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const SubHeader = () => {\n    if (loading) {\n      return React.createElement(Spinner, {\n        height: 100,\n        width: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n\n    if (data) {\n      let celkem;\n      let arrValues = data.showRatings.map(x => x.ratingValue);\n      const arrAvg = arrValues.reduce((a, b) => a + b, 0) / arrValues.length;\n      return React.createElement(React.Fragment, null, React.createElement(Rating, {\n        name: \"simple-controlled\",\n        readOnly: true,\n        value: arrAvg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.clickableProfile,\n    onClick: () => {\n      history.push(\"/user/\".concat(props.author._id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    \"aria-label\": \"recipe\",\n    className: classes.avatar,\n    src: props.author.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.author.name)))))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(SubHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, props.author.description))))));\n}\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: red[500],\n    // color: \"lightgrey\",\n    width: 70,\n    height: 70,\n    boxShadow: '2px 2px 5px rgba(149, 165, 166, 0.5)'\n  },\n  text: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  clickableProfile: {\n    cursor: 'pointer'\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/play/UserCardPlay.js"],"names":["React","makeStyles","Grid","Avatar","Typography","red","Rating","useHistory","useMutation","useQuery","gql","NavLink","Spinner","HOST_RATINGS","UserCardPlay","props","classes","useStyles","history","useState","value","setValue","variables","host_id","author","_id","loading","error","data","SubHeader","celkem","arrValues","showRatings","map","x","ratingValue","arrAvg","reduce","a","b","length","clickableProfile","push","avatar","picture","text","name","description","theme","backgroundColor","width","height","boxShadow","marginTop","marginBottom","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Spinner from \"src/Atoms/Spinner\";\n\nconst HOST_RATINGS = gql`\n  query showRatings($host_id: ID!) {\n    showRatings(host_id: $host_id) {\n      guest {\n        picture\n        name\n      }\n      message\n      ratingValue\n      createdAt\n    }\n  }\n`;\n\nexport default function UserCardPlay(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(2);\n  const { loading, error, data } = useQuery(HOST_RATINGS, {\n    variables: { host_id: props.author._id }\n  });\n\n\n  const SubHeader = () => {\n    if (loading) {\n      return <Spinner height={100} width={100} />;\n    }\n    if (data) {\n      let celkem;\n      let arrValues = data.showRatings.map(x => x.ratingValue);\n      const arrAvg = arrValues.reduce((a, b) => a + b, 0) / arrValues.length;\n      return (\n        <>\n          <Rating name=\"simple-controlled\" readOnly value={arrAvg} />\n        </>\n      );\n    }\n  };\n\n  return (<>\n    <Grid container>\n      <Grid item xs={4} className={classes.clickableProfile} onClick={() => {history.push(`/user/${props.author._id}`)}}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Avatar\n                  aria-label=\"recipe\"\n                  className={classes.avatar}\n                  src={props.author.picture}\n                />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Typography variant=\"subtitle2\" className={classes.text}>\n                    {props.author.name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n          \n      </Grid>\n      <Grid item  xs={8}>\n      <Grid container>\n        <Grid item >\n          <SubHeader />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle2\" className={classes.text}>\n              {props.author.description}\n          </Typography>\n        </Grid>\n      </Grid>\n      </Grid>\n    </Grid>\n    {/* <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar\n            aria-label=\"recipe\"\n            className={classes.avatar}\n            src={props.author.picture}\n          >\n            <LockOutlinedIcon />\n          </Avatar>\n        }\n        action={\n          <NavLink to={`/user/${props.author._id}`}>\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon className={classes.dots} />\n            </IconButton>\n          </NavLink>\n        }\n        title={\n          <Typography variant=\"subtitle2\" className={classes.whiteText}>\n            {props.author.name}\n          </Typography>\n        }\n        subheader={\n          <>\n            <SubHeader />\n          </>\n        }\n      />\n    </Card> */}\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n\n  avatar: {\n    backgroundColor: red[500],\n    // color: \"lightgrey\",\n    width: 70,\n    height: 70,\n    boxShadow: '2px 2px 5px rgba(149, 165, 166, 0.5)'\n  },\n  text: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  clickableProfile: {\n    cursor: 'pointer'\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}