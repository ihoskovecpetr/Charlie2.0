{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Play/QRCodeEntering.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { UserContext } from \"src/userContext\"; //import QRCodePNG from \"src/Images/QR.png\"\n\nimport Dropzone_QR from \"./Dropzone_QR\";\nimport jsQR from \"jsqr\";\nimport QrCode from 'qrcode-reader'; // import qrCode from \"jsqrcode\"\n\nconst QRCodeEntering = ({\n  bookings\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        qrCodeData = _useState2[0],\n        setQrCodeData = _useState2[1];\n\n  const _useState3 = useState({\n    user_id: null,\n    event_id: null\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        GRDecoded = _useState4[0],\n        setQRDecoded = _useState4[1];\n\n  const classes = useStyles();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  useEffect(() => {\n    if (qrCodeData) {}\n  }, [qrCodeData]);\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"div\",\n    className: classes.standardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Dropzone_QR, {\n    setQrCodeData: setQrCodeData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, qrCodeData))))));\n};\n\nconst useStyles = makeStyles(theme => ({\n  thisLine: {\n    height: '1px',\n    width: '80%',\n    margin: 0,\n    marginTop: '2px',\n    marginBottom: '2px',\n    marginLeft: '10%',\n    marginRight: '10%',\n    backgroundColor: \"#707070\"\n  },\n  nameAndPrice: {\n    marginBottom: 25\n  },\n  mainHeader: {\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: 600,\n    padding: 10\n  },\n  headerPrice: {\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  headerPerPerson: {\n    fontSize: 16,\n    fontWeight: 300,\n    textAlign: \"center\"\n  },\n  addressGreyWrap: {\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    textAlign: \"center\"\n  },\n  timeDistanceWrap: {\n    padding: 10,\n    paddingRight: 20\n  },\n  timeDistance: {\n    fontSize: 16,\n    textAlign: \"left\"\n  },\n  descWrap: {\n    padding: 20\n  }\n}));\nexport default QRCodeEntering;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Play/QRCodeEntering.js"],"names":["React","useContext","useState","useEffect","Grid","Typography","InputAdornment","CropFreeIcon","TextField","makeStyles","UserContext","Dropzone_QR","jsQR","QrCode","QRCodeEntering","bookings","qrCodeData","setQrCodeData","user_id","event_id","GRDecoded","setQRDecoded","classes","useStyles","context","setContext","standardContent","theme","thisLine","height","width","margin","marginTop","marginBottom","marginLeft","marginRight","backgroundColor","nameAndPrice","mainHeader","textAlign","fontSize","fontWeight","padding","headerPrice","headerPerPerson","addressGreyWrap","paddingLeft","paddingRight","timeDistanceWrap","timeDistance","descWrap"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from \"react\"\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { UserContext } from \"src/userContext\";\n//import QRCodePNG from \"src/Images/QR.png\"\nimport Dropzone_QR from \"./Dropzone_QR\"\n\nimport jsQR from \"jsqr\";\n\nimport QrCode from 'qrcode-reader';\n\n// import qrCode from \"jsqrcode\"\n\nconst QRCodeEntering = ({bookings}) => {\n    const [qrCodeData, setQrCodeData] = useState();\n    const [GRDecoded, setQRDecoded] = useState({user_id: null, event_id: null});\n    const classes = useStyles();\n    const { context, setContext } = useContext(UserContext);\n\n    useEffect(( ) => {\n            if(qrCodeData){\n            \n            }\n    },[qrCodeData])\n\n\n    return(\n            <Grid item xs={12}>\n                    <Typography component=\"div\" className={classes.standardContent}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                              <Dropzone_QR setQrCodeData={setQrCodeData} />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Grid container justify=\"center\">\n                                <Grid item>\n                                  {qrCodeData}\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                        </Grid>\n                    </Typography>\n              </Grid>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n   \n\n      thisLine:{\n        height: '1px',\n        width: '80%',\n        margin: 0,\n        marginTop: '2px',\n        marginBottom: '2px',\n        marginLeft: '10%',\n        marginRight: '10%',\n        backgroundColor: \"#707070\"\n      },\n      nameAndPrice:{\n        marginBottom: 25\n      },\n      mainHeader:{\n        textAlign: \"center\",\n        fontSize: 30,\n        fontWeight: 600,\n        padding: 10,\n      },\n      headerPrice:{\n        fontSize: 20,\n        textAlign: \"center\",\n      },\n      headerPerPerson:{\n        fontSize: 16,\n        fontWeight: 300,\n        textAlign: \"center\",\n      },\n      addressGreyWrap:{\n        padding: 10,\n        paddingLeft: 20,\n        paddingRight: 20,\n        textAlign: \"center\",\n      },\n      timeDistanceWrap:{\n        padding: 10,\n        paddingRight: 20\n      },\n      timeDistance:{\n        fontSize: 16,\n        textAlign: \"left\",\n      },\n      descWrap:{\n        padding: 20\n      },\n  }));\n\nexport default QRCodeEntering"]},"metadata":{},"sourceType":"module"}