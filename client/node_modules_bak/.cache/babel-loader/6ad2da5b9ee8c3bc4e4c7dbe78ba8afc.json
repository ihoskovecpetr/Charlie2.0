{"ast":null,"code":"import _defineProperty from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  mutation createEvent(\\n    $name: String!\\n    $lng: Float\\n    $lat: Float\\n    $address: String\\n    $author: String!\\n    $dateStart: String\\n    $duration: Float\\n    $price: Float\\n    $currency: String\\n    $capacityMax: Int\\n    $BYO: Boolean\\n    $description: String\\n    $imagesArr: [ImageInput]\\n  ) {\\n    createEvent(\\n      eventInput: {\\n        name: $name\\n        lng: $lng\\n        lat: $lat\\n        address: $address\\n        author: $author\\n        dateStart: $dateStart\\n        duration: $duration\\n        price: $price\\n        currency: $currency\\n        capacityMax: $capacityMax\\n        BYO: $BYO\\n        description: $description\\n        imagesArr: $imagesArr\\n      }\\n    ) {\\n      dataOut {\\n        _id\\n        name\\n        success\\n      }\\n      errorOut {\\n        name\\n        message\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext,useState,useRef,useEffect,useMemo}from\"react\";import Container from\"@material-ui/core/Container\";import Grid from\"@material-ui/core/Grid\";import Box from\"@material-ui/core/Box\";import Paper from\"@material-ui/core/Paper\";import CssBaseline from\"@material-ui/core/CssBaseline\";import Alert from\"@material-ui/lab/Alert\";import Snackbar from'@material-ui/core/Snackbar';import CloseIcon from'@material-ui/icons/Close';import Button from\"@material-ui/core/Button\";import IconButton from\"@material-ui/core/IconButton\";import TextField from\"@material-ui/core/TextField\";import FormControlLabel from\"@material-ui/core/FormControlLabel\";import Switch from\"@material-ui/core/Switch\";import Typography from\"@material-ui/core/Typography\";import{makeStyles}from\"@material-ui/core/styles\";import\"date-fns\";import DateFnsUtils from\"@date-io/date-fns\";import{MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker}from\"@material-ui/pickers\";import ArrowBackIosIcon from\"@material-ui/icons/ArrowBackIos\";import ArrowForwardIosIcon from\"@material-ui/icons/ArrowForwardIos\";import CloudDoneIcon from\"@material-ui/icons/CloudDone\";import InputAdornment from\"@material-ui/core/InputAdornment\";import Input from\"@material-ui/core/Input\";import InputLabel from\"@material-ui/core/InputLabel\";import AccountCircle from\"@material-ui/icons/AccountCircle\";import MenuItem from\"@material-ui/core/MenuItem\";import clsx from\"clsx\";import{useMutation}from\"@apollo/react-hooks\";import gql from\"graphql-tag\";import{useHistory}from\"react-router-dom\";import{findEmpty}from\"../Services/functions\";import{UserContext}from\"../userContext\";import Copyright from\"../Atoms/copyright\";import Dropzone from\"../Molecules/Dropzone\";import Spinner from\"../Atoms/Spinner\";import MapCreate from\"../Molecules/MapCreate\";import LoginFirstButton from\"../Atoms/LoginFirstButton\";import CreateView from\"./CreateView\";import{useLogicPlusMinusValue}from\"./Logic/Create/useLogicPlusMinusValue\";var NEW_EVENT=gql(_templateObject());var currencies=[{value:\"USD\",label:\"$\"},{value:\"EUR\",label:\"€\"},{value:\"CZK\",label:\"Kč\"}];function Create(props){var classes=useStyles();var history=useHistory();var _useContext=useContext(UserContext),context=_useContext.context;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),customMapParam=_useState2[0],setCustomMapParam=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),countOfFiles=_useState4[0],setCountOfFiles=_useState4[1];var Price=useLogicPlusMinusValue(\"plus_btn\",\"minus_btn\",50);var Capacity=useLogicPlusMinusValue(\"plus_btn_capacity\",\"minus_btn_capacity\",15);var Duration=useLogicPlusMinusValue(\"plus_btn_duration\",\"minus_btn_duration\",3);var _useState5=useState({startDate:new Date(),currency:\"CZK\",BYO:true,ImagesArr:[]}),_useState6=_slicedToArray(_useState5,2),formValue=_useState6[0],setFormValue=_useState6[1];var price=Price.value;var plusClickPrice=Price.plusClickValue;var minusClickPrice=Price.minusClickValue;var setNewValuePrice=Price.setNewValue;var capacity=Capacity.value;var plusClickCapacity=Capacity.plusClickValue;var minusClickCapacity=Capacity.minusClickValue;var setNewValueCapacity=Capacity.setNewValue;var duration=Duration.value;var plusClickDuration=Duration.plusClickValue;var minusClickDuration=Duration.minusClickValue;var setNewValueDuration=Duration.setNewValue;var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),FeErrors=_useState8[0],setFeErrors=_useState8[1];var _useMutation=useMutation(NEW_EVENT,{onCompleted:function onCompleted(){setFeErrors([]);}}),_useMutation2=_slicedToArray(_useMutation,2),createEvent=_useMutation2[0],_useMutation2$=_useMutation2[1],loading=_useMutation2$.loading,error=_useMutation2$.error,data=_useMutation2$.data;var _ref=data?data.createEvent:{dataOut:undefined},dataOut=_ref.dataOut;var _ref2=data?data.createEvent:{errorOut:undefined},errorOut=_ref2.errorOut;var den=new Date(formValue.startDate);//Day +- one day\nvar plusDay=function plusDay(){den.setDate(den.getDate()+1);setFormValue(function(prev){return _objectSpread({},prev,{startDate:den});});};var minusDay=function minusDay(){den.setDate(den.getDate()-1);setFormValue(function(prev){return _objectSpread({},prev,{startDate:den});});};//Hours +- one hour\nvar plusHour=function plusHour(){den.setHours(den.getHours()+1);var isoDen=den.toISOString().split(\":\")[0];setFormValue(function(prev){return _objectSpread({},prev,{startDate:\"\".concat(isoDen,\":00:00.000Z\")});});};var minusHour=function minusHour(){den.setHours(den.getHours()-1);var isoDen=den.toISOString().split(\":\")[0];setFormValue(function(prev){return _objectSpread({},prev,{startDate:\"\".concat(isoDen,\":00:00.000Z\")});});};useEffect(function(){window.scrollTo(0,0);if(!context._id){history.push('/signin');}},[]);useEffect(function(){if(dataOut){setTimeout(function(){history.push(\"/event/\".concat(dataOut._id));},500);}},[dataOut]);var inputName=useRef(null);var inputTime=useRef(null);var inputBYO=useRef(null);var inputDescription=useRef(null);var inputMarker=useRef(null);var onSubmit=function onSubmit(e){e.preventDefault();var load={name:inputName.current&&inputName.current.value?inputName.current.value:null,lng:customMapParam.lng,lat:customMapParam.lat,address:customMapParam.address,author:context._id,eventType:1,dateStart:formValue.startDate,duration:duration,price:price,currency:formValue.currency,capacityMax:capacity,BYO:inputBYO.current.checked,description:inputDescription.current.value?inputDescription.current.value:null,imagesArr:formValue.ImagesArr};var empty=findEmpty(load);if(empty.length==0){createEvent({variables:load});}else{setFeErrors(empty);}};var handleDateChange=function handleDateChange(date){setFormValue(function(prev){return _objectSpread({},prev,{startDate:date});});};var handleChangeCurrency=function handleChangeCurrency(event){setFormValue(function(prev){return _objectSpread({},prev,{currency:event.target.value});});};var handleChangeBYO=function handleChangeBYO(){setFormValue(function(prev){return _objectSpread({},prev,{BYO:!formValue.BYO});});};return React.createElement(CreateView,{formValue:formValue,setFormValue:setFormValue,handleChangeBYO:handleChangeBYO,handleChangeCurrency:handleChangeCurrency,handleDateChange:handleDateChange,onSubmit:onSubmit,minusHour:minusHour,plusHour:plusHour,minusDay:minusDay,plusDay:plusDay,inputName:inputName,inputTime:inputTime,inputBYO:inputBYO,inputDescription:inputDescription,inputMarker:inputMarker,dataOut:dataOut,errorOut:errorOut,customMapParam:customMapParam,setCustomMapParam:setCustomMapParam,plusClickCapacity:plusClickCapacity,setNewValueCapacity:setNewValueCapacity,minusClickDuration:minusClickDuration,setNewValueDuration:setNewValueDuration,plusClickDuration:plusClickDuration,minusClickPrice:minusClickPrice,setNewValuePrice:setNewValuePrice,plusClickPrice:plusClickPrice,minusClickCapacity:minusClickCapacity,countOfFiles:countOfFiles,loading:loading,FeErrors:FeErrors,capacity:capacity,duration:duration,price:price,setCountOfFiles:setCountOfFiles});// return (\n//   <div\n//     component=\"main\"\n//     id=\"mainCreate\"\n//     className={classes.profileWrap}\n//     style={{ position: context.freezScroll ? \"fixed\" : \"absolute\" }} // fixed is freezed, absolute is scrollable\n//   >\n//     <CssBaseline />\n//     <Container maxWidth=\"sm\" className={classes.paper1}>\n//       <Grid\n//         container\n//         justify=\"center\"\n//         alignItems=\"center\"\n//         direction=\"column\"\n//         className={classes.pinkBack}\n//       >\n//         {/* <Avatar className={classes.avatar}>\n//           <AddCircleOutlineIcon />\n//         </Avatar> */}\n//         <Grid item>\n//           <Typography variant=\"h5\" className={classes.justDoIt}>\n//             JUST DO IT\n//           </Typography>\n//         </Grid>\n//         <Grid item>\n//           <Typography variant=\"h5\" className={classes.now}>\n//             <b>NOW</b>\n//           </Typography>\n//         </Grid>\n//         <Grid container className={clsx(classes.formRow)}>\n//           <Grid item style={{ width: \"100%\" }}>\n//             {context.success ? (\n//               <TextField\n//                 variant=\"outlined\"\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"name\"\n//                 inputRef={inputName}\n//                 label=\"My First Party\"\n//                 name=\"name\"\n//                 autoFocus\n//                 className={classes.inputName}\n//               />\n//             ) : (\n//               <LoginFirstButton />\n//             )}\n//           </Grid>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//     <Container maxWidth=\"sm\" className={classes.paper}>\n//       <form className={classes.form} noValidate>\n//         <InputLabel htmlFor=\"standard-adornment-amount\">ADDRESS</InputLabel>\n//         <MapCreate\n//           customMapParam={customMapParam}\n//           setCustomMapParam={setCustomMapParam}\n//           inputMarker={inputMarker}\n//         />\n//         <InputLabel htmlFor=\"standard-adornment-amount\">DATE</InputLabel>\n//         <Grid\n//           container\n//           alignItems=\"center\"\n//           alignContent=\"flex-start\"\n//           justify=\"flex-start\"\n//           className={clsx(classes.settingsPanel, classes.formRow)}\n//         >\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               onClick={() => {\n//                 minusDay();\n//               }}\n//             >\n//               <ArrowBackIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//           <Grid item>\n//             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n//               <KeyboardDatePicker\n//                 margin=\"normal\"\n//                 id=\"date-picker-dialog\"\n//                 format=\"dd/MM/yyyy\"\n//                 value={formValue.startDate}\n//                 onChange={e => {\n//                   handleDateChange(e);\n//                 }}\n//                 KeyboardButtonProps={{\n//                   \"aria-label\": \"change date\"\n//                 }}\n//               />\n//             </MuiPickersUtilsProvider>\n//           </Grid>\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               onClick={() => {\n//                 plusDay();\n//               }}\n//             >\n//               <ArrowForwardIosIcon\n//                 //fontSize=\"large\"\n//                 color=\"primary\"\n//               />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//         {/*  +- Hours */}\n//         <InputLabel htmlFor=\"standard-adornment-amount\">TIME</InputLabel>\n//         <Grid\n//           container\n//           alignItems=\"center\"\n//           alignContent=\"flex-start\"\n//           justify=\"flex-start\"\n//           className={clsx(classes.settingsPanel, classes.formRow)}\n//         >\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               onClick={() => {\n//                 minusHour();\n//               }}\n//             >\n//               <ArrowBackIosIcon\n//                 //fontSize=\"large\"\n//                 color=\"primary\"\n//               />\n//             </IconButton>\n//           </Grid>\n//           <Grid item>\n//             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n//               <KeyboardTimePicker margin=\"normal\" id=\"time-picker\" inputRef={inputTime}\n//                 //label=\"Time picker\"\n//                 value={formValue.startDate}\n//                 onChange={e => {\n//                   handleDateChange(e);\n//                 }}\n//                 KeyboardButtonProps={{\n//                   \"aria-label\": \"change time\"\n//                 }}\n//               />\n//             </MuiPickersUtilsProvider>\n//           </Grid>\n//           <Grid item>\n//             <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\n//               onClick={() => {\n//                 plusHour();\n//               }}\n//             >\n//               <ArrowForwardIosIcon\n//                 //fontSize=\"large\"\n//                 color=\"primary\"\n//               />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//         <InputLabel htmlFor=\"standard-adornment-amount\">DURATION</InputLabel>\n//         <Grid\n//           container\n//           className={clsx(classes.settingsPanel, classes.formRow)}\n//         >\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               id=\"minus_btn_duration\"\n//               onClick={() => minusClickDuration}\n//             >\n//               <ArrowBackIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//           <Grid item>\n//             <Input\n//               type=\"number\"\n//               value={duration}\n//               //onChange={handleChange(\"amount\")}\n//               onChange={(value) => {setNewValueDuration(value.target.value)}}\n//               endAdornment={\n//                 <InputAdornment position=\"start\">\n//                   hours  \n//                 </InputAdornment>\n//               }\n//             />\n//           </Grid>\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               id=\"plus_btn_duration\"\n//               onClick={() => plusClickDuration}\n//             >\n//               <ArrowForwardIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//         <InputLabel htmlFor=\"standard-adornment-amount\">PRICE</InputLabel>\n//         <Grid\n//           container\n//           className={clsx(classes.settingsPanel, classes.formRow)}\n//         >\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               id=\"minus_btn\"\n//               onClick={() => minusClickPrice}\n//             >\n//               <ArrowBackIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//           <Grid item>\n//             <Input\n//               type=\"number\"\n//               value={price}\n//               //onChange={handleChange(\"amount\")}\n//               onChange={(value) => {\n//                 console.log(\"CHange Price: \", value)\n//                 setNewValuePrice(value.target.value)\n//               }}\n//               startAdornment={\n//                 <InputAdornment position=\"start\">\n//                   {formValue.currency}\n//                 </InputAdornment>\n//               }\n//             />\n//           </Grid>\n//           <Grid item>\n//             <TextField\n//               id=\"outlined-select-currency\"\n//               select\n//               //label=\"Select\"\n//               value={formValue.currency}\n//               onChange={handleChangeCurrency}\n//               //helperText=\"Please select your currency\"\n//               //variant=\"outlined\"\n//             >\n//               {currencies.map(option => (\n//                 <MenuItem key={option.value} value={option.value}>\n//                   {option.label}\n//                 </MenuItem>\n//               ))}\n//             </TextField>\n//           </Grid>\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               id=\"plus_btn\"\n//               onClick={() => plusClickPrice}\n//             >\n//               <ArrowForwardIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//         <InputLabel htmlFor=\"standard-adornment-amount\">CAPACITY</InputLabel>\n//         <Grid container className={classes.formRow}>\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               edge=\"start\"\n//               id=\"minus_btn_capacity\"\n//               onClick={() => minusClickCapacity}\n//             >\n//               <ArrowBackIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//           <Grid>\n//             <TextField\n//               value={capacity}\n//               type=\"number\"\n//               onChange={(value) => {\n//                 setNewValueCapacity(value.target.value)\n//               }}\n//               InputProps={{\n//                 startAdornment: (\n//                   <InputAdornment position=\"start\">\n//                     <AccountCircle />\n//                   </InputAdornment>\n//                 )\n//               }}\n//             />\n//           </Grid>\n//           <Grid item>\n//             <IconButton\n//               color=\"inherit\"\n//               aria-label=\"open drawer\"\n//               edge=\"start\"\n//               id=\"plus_btn_capacity\"\n//               onClick={() => plusClickCapacity}\n//             >\n//               <ArrowForwardIosIcon color=\"primary\" />\n//             </IconButton>\n//           </Grid>\n//         </Grid>\n//         <InputLabel htmlFor=\"standard-adornment-amount\">BYO Event (guest can bring his own dring/snack)</InputLabel>\n//         <FormControlLabel\n//           className={classes.switchBYO}\n//           control={\n//             <Switch\n//               //checked={formValue.checkedA}\n//               onChange={handleChangeBYO}\n//               checked={formValue.BYO}\n//               inputRef={inputBYO}\n//             />\n//           }\n//         />\n//         <InputLabel htmlFor=\"standard-adornment-amount\">\n//           DESCRIPTION\n//         </InputLabel>\n//         <Grid\n//           container\n//           className={clsx(classes.formRow, classes.descriptionContainer)}\n//         >\n//           <Grid item className={classes.descriptionItem}>\n//             <TextField\n//               variant=\"outlined\"\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               id=\"decsription\"\n//               placeholder=\"Example: Upon arrival, you will get welcome drink and some snacks will be ready on the balcony. Grill be ready too.\"\n//               multiline\n//               rows=\"4\"\n//               inputRef={inputDescription}\n//               //label=\"Description\"\n//               name=\"decsription\"\n//               autoComplete=\"false\" //improvisation, should be \"off\", or random \"string\"\n//             />\n//           </Grid>\n//         </Grid>\n//         <InputLabel htmlFor=\"standard-adornment-amount\">IMAGES</InputLabel>\n//         <Grid\n//           container\n//           justify=\"center\"\n//           alignContent=\"center\"\n//           className={classes.formRow}\n//         >\n//           <Grid\n//             item\n//             className={clsx(classes.dropItem, classes.dropContainer)}\n//           >\n//            <p>{countOfFiles - formValue.ImagesArr.length}</p>\n//             <Dropzone setFormValue={setFormValue} setCountOfFiles={setCountOfFiles}/>\n//           </Grid>\n//         </Grid>\n//         {errorOut &&\n//           errorOut.map(item => (\n//             <Alert severity=\"error\" key={item.message}>\n//               {item.message}\n//             </Alert>\n//           ))}\n//         {FeErrors &&\n//           FeErrors.map(item => (\n//             <Alert severity=\"error\" key={item}>\n//               {item} is empty\n//             </Alert>\n//           ))}\n//         <Button\n//           type=\"submit\"\n//           fullWidth\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submit}\n//           onClick={e => onSubmit(e)}\n//           // disabled={\n//           //   formValue.ImagesArr && formValue.ImagesArr.length ? false : true\n//           // }\n//           disabled={loading}\n//         >\n//           {dataOut && <CloudDoneIcon />}\n//           {loading && <Spinner hieght={20} width={20} />}\n//           Create Party\n//         </Button>\n//       </form>\n//     </Container>\n//     <Box mt={8}>\n//       <Copyright />\n//     </Box>\n//   </div>\n// );\n}var useStyles=makeStyles(function(theme){return{profileWrap:{top:0,height:\"100%\",width:\"100%\",position:\"absolute\"// background:\n//   \"linear-gradient(180deg, rgba(0,0,255,0.5) 30%, rgba(255,0,100,0.5) 100%)\"\n},paper1:_defineProperty({marginTop:66,padding:10,paddingTop:50,paddingBottom:0,borderBottomLeftRadius:0,borderBottomRightRadius:0,background:\"#E8045D\"},theme.breakpoints.down(\"xs\"),{marginTop:\"56px !important\"}),paper:{padding:10,display:\"flex\",flexDirection:\"column\",alignItems:\"center\",background:\"rgba(255,255,255,0.7)\",borderTopLeftRadius:0,borderTopRightRadius:0},justDoIt:{fontWeight:200,fontSize:25,letterSpacing:12,position:\"relative\",top:5,marginBottom:0},now:{fontWeight:700,fontSize:38,letterSpacing:3},inputName:{background:\"rgba(255,255,255,0.9)\",borderRadius:5,boxShadow:\"5px 5px 5px 0px rgba(0,0,0,0.75)\"},avatar:{margin:theme.spacing(1),backgroundColor:theme.palette.secondary.main},form:{width:\"100%\",// Fix IE 11 issue.\nmarginTop:theme.spacing(1)},pinkBack:{width:\"100%\"},submit:{margin:theme.spacing(3,0,2)},withoutLabel:{marginTop:theme.spacing(3)},textField:{width:200},formRow:{marginTop:10,marginBottom:40},switchBYO:{marginBottom:\"20px\",marginLeft:\"10px\"},descriptionContainer:{width:\"100%\"},descriptionItem:{width:\"100%\"},dropContainer:{width:\"100%\",background:\"rgba(0,0,0,0.1)\",minHeight:150},dropItem:{//width: \"100%\",\n//background: \"rgba(0,0,0,0.1)\"\n}};});export default Create;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/Create.js"],"names":["React","useContext","useState","useRef","useEffect","useMemo","Container","Grid","Box","Paper","CssBaseline","Alert","Snackbar","CloseIcon","Button","IconButton","TextField","FormControlLabel","Switch","Typography","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","ArrowBackIosIcon","ArrowForwardIosIcon","CloudDoneIcon","InputAdornment","Input","InputLabel","AccountCircle","MenuItem","clsx","useMutation","gql","useHistory","findEmpty","UserContext","Copyright","Dropzone","Spinner","MapCreate","LoginFirstButton","CreateView","useLogicPlusMinusValue","NEW_EVENT","currencies","value","label","Create","props","classes","useStyles","history","context","customMapParam","setCustomMapParam","countOfFiles","setCountOfFiles","Price","Capacity","Duration","startDate","Date","currency","BYO","ImagesArr","formValue","setFormValue","price","plusClickPrice","plusClickValue","minusClickPrice","minusClickValue","setNewValuePrice","setNewValue","capacity","plusClickCapacity","minusClickCapacity","setNewValueCapacity","duration","plusClickDuration","minusClickDuration","setNewValueDuration","FeErrors","setFeErrors","onCompleted","createEvent","loading","error","data","dataOut","undefined","errorOut","den","plusDay","setDate","getDate","prev","minusDay","plusHour","setHours","getHours","isoDen","toISOString","split","minusHour","window","scrollTo","_id","push","setTimeout","inputName","inputTime","inputBYO","inputDescription","inputMarker","onSubmit","e","preventDefault","load","name","current","lng","lat","address","author","eventType","dateStart","capacityMax","checked","description","imagesArr","empty","length","variables","handleDateChange","date","handleChangeCurrency","event","target","handleChangeBYO","theme","profileWrap","top","height","width","position","paper1","marginTop","padding","paddingTop","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","background","breakpoints","down","paper","display","flexDirection","alignItems","borderTopLeftRadius","borderTopRightRadius","justDoIt","fontWeight","fontSize","letterSpacing","marginBottom","now","borderRadius","boxShadow","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","pinkBack","submit","withoutLabel","textField","formRow","switchBYO","marginLeft","descriptionContainer","descriptionItem","dropContainer","minHeight","dropItem"],"mappings":"8oEAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,MAAtC,CAA8CC,SAA9C,CAAyDC,OAAzD,KAAwE,OAAxE,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAO,UAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,mBAAzB,CACA,OACEC,uBADF,CAEEC,kBAFF,CAGEC,kBAHF,KAIO,sBAJP,CAMA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,oCAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,SAAT,KAA0B,uBAA1B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,OAAQC,sBAAR,KAAqC,uCAArC,CAGA,GAAMC,CAAAA,SAAS,CAAGX,GAAH,mBAAf,CA8CA,GAAMY,CAAAA,UAAU,CAAG,CACjB,CACEC,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,GAFT,CADiB,CAKjB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,GAFT,CALiB,CASjB,CACED,KAAK,CAAE,KADT,CAEEC,KAAK,CAAE,IAFT,CATiB,CAAnB,CAeA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACrB,GAAMC,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CACA,GAAIC,CAAAA,OAAO,CAAGlB,UAAU,EAAxB,CAFqB,gBAIDnC,UAAU,CAACqC,WAAD,CAJT,CAIbiB,OAJa,aAIbA,OAJa,eAKuBrD,QAAQ,CAAC,IAAD,CAL/B,wCAKdsD,cALc,eAKEC,iBALF,8BAMmBvD,QAAQ,CAAC,CAAD,CAN3B,yCAMdwD,YANc,eAMAC,eANA,eAOrB,GAAMC,CAAAA,KAAK,CAAGf,sBAAsB,CAAC,UAAD,CAAa,WAAb,CAA0B,EAA1B,CAApC,CACA,GAAMgB,CAAAA,QAAQ,CAAGhB,sBAAsB,CAAC,mBAAD,CAAsB,oBAAtB,CAA4C,EAA5C,CAAvC,CACA,GAAMiB,CAAAA,QAAQ,CAAGjB,sBAAsB,CAAC,mBAAD,CAAsB,oBAAtB,CAA4C,CAA5C,CAAvC,CATqB,eAUa3C,QAAQ,CAAC,CACzC6D,SAAS,CAAE,GAAIC,CAAAA,IAAJ,EAD8B,CAEzCC,QAAQ,CAAE,KAF+B,CAGzCC,GAAG,CAAE,IAHoC,CAIzCC,SAAS,CAAE,EAJ8B,CAAD,CAVrB,yCAUdC,SAVc,eAUHC,YAVG,eAiBrB,GAAMC,CAAAA,KAAK,CAAGV,KAAK,CAACZ,KAApB,CACA,GAAMuB,CAAAA,cAAc,CAAGX,KAAK,CAACY,cAA7B,CACA,GAAMC,CAAAA,eAAe,CAAGb,KAAK,CAACc,eAA9B,CACA,GAAMC,CAAAA,gBAAgB,CAAGf,KAAK,CAACgB,WAA/B,CAEA,GAAMC,CAAAA,QAAQ,CAAGhB,QAAQ,CAACb,KAA1B,CACA,GAAM8B,CAAAA,iBAAiB,CAAGjB,QAAQ,CAACW,cAAnC,CACA,GAAMO,CAAAA,kBAAkB,CAAGlB,QAAQ,CAACa,eAApC,CACA,GAAMM,CAAAA,mBAAmB,CAAGnB,QAAQ,CAACe,WAArC,CAEA,GAAMK,CAAAA,QAAQ,CAAGnB,QAAQ,CAACd,KAA1B,CACA,GAAMkC,CAAAA,iBAAiB,CAAGpB,QAAQ,CAACU,cAAnC,CACA,GAAMW,CAAAA,kBAAkB,CAAGrB,QAAQ,CAACY,eAApC,CACA,GAAMU,CAAAA,mBAAmB,CAAGtB,QAAQ,CAACc,WAArC,CA9BqB,eAiCW1E,QAAQ,CAAC,EAAD,CAjCnB,yCAiCdmF,QAjCc,eAiCJC,WAjCI,gCAkC2BpD,WAAW,CAACY,SAAD,CAAY,CACrEyC,WAAW,CAAE,sBAAM,CACjBD,WAAW,CAAC,EAAD,CAAX,CACD,CAHoE,CAAZ,CAlCtC,8CAkCdE,WAlCc,kDAkCCC,OAlCD,gBAkCCA,OAlCD,CAkCUC,KAlCV,gBAkCUA,KAlCV,CAkCiBC,IAlCjB,gBAkCiBA,IAlCjB,UAwCDA,IAAI,CAAGA,IAAI,CAACH,WAAR,CAAsB,CAAEI,OAAO,CAAEC,SAAX,CAxCzB,CAwCbD,OAxCa,MAwCbA,OAxCa,WAyCAD,IAAI,CAAGA,IAAI,CAACH,WAAR,CAAsB,CAAEM,QAAQ,CAAED,SAAZ,CAzC1B,CAyCbC,QAzCa,OAyCbA,QAzCa,CA2CrB,GAAIC,CAAAA,GAAG,CAAG,GAAI/B,CAAAA,IAAJ,CAASI,SAAS,CAACL,SAAnB,CAAV,CAGA;AACA,GAAMiC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBD,GAAG,CAACE,OAAJ,CAAYF,GAAG,CAACG,OAAJ,GAAgB,CAA5B,EACA7B,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBpC,SAAS,CAAEgC,GAA7B,GACD,CAFW,CAAZ,CAGD,CALD,CAOA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBL,GAAG,CAACE,OAAJ,CAAYF,GAAG,CAACG,OAAJ,GAAgB,CAA5B,EACA7B,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBpC,SAAS,CAAEgC,GAA7B,GACD,CAFW,CAAZ,CAGD,CALD,CAOA;AACA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBN,GAAG,CAACO,QAAJ,CAAaP,GAAG,CAACQ,QAAJ,GAAiB,CAA9B,EACA,GAAIC,CAAAA,MAAM,CAAGT,GAAG,CAACU,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb,CACArC,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBpC,SAAS,WAAKyC,MAAL,eAA3B,GACD,CAFW,CAAZ,CAGD,CAND,CAQA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBZ,GAAG,CAACO,QAAJ,CAAaP,GAAG,CAACQ,QAAJ,GAAiB,CAA9B,EACA,GAAIC,CAAAA,MAAM,CAAGT,GAAG,CAACU,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb,CACArC,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBpC,SAAS,WAAKyC,MAAL,eAA3B,GACD,CAFW,CAAZ,CAGD,CAND,CASApG,SAAS,CAAC,UAAM,CACdwG,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACA,GAAG,CAACtD,OAAO,CAACuD,GAAZ,CAAgB,CACdxD,OAAO,CAACyD,IAAR,CAAa,SAAb,EACD,CACF,CALQ,CAKN,EALM,CAAT,CAOA3G,SAAS,CAAC,UAAM,CACd,GAAIwF,OAAJ,CAAa,CACXoB,UAAU,CAAC,UAAM,CACf1D,OAAO,CAACyD,IAAR,kBAAuBnB,OAAO,CAACkB,GAA/B,GACD,CAFS,CAEP,GAFO,CAAV,CAGD,CACF,CANQ,CAMN,CAAClB,OAAD,CANM,CAAT,CAQA,GAAMqB,CAAAA,SAAS,CAAG9G,MAAM,CAAC,IAAD,CAAxB,CACA,GAAM+G,CAAAA,SAAS,CAAG/G,MAAM,CAAC,IAAD,CAAxB,CACA,GAAMgH,CAAAA,QAAQ,CAAGhH,MAAM,CAAC,IAAD,CAAvB,CACA,GAAMiH,CAAAA,gBAAgB,CAAGjH,MAAM,CAAC,IAAD,CAA/B,CACA,GAAMkH,CAAAA,WAAW,CAAGlH,MAAM,CAAC,IAAD,CAA1B,CAEA,GAAMmH,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CACpBA,CAAC,CAACC,cAAF,GAEA,GAAIC,CAAAA,IAAI,CAAG,CACTC,IAAI,CAAET,SAAS,CAACU,OAAV,EAAqBV,SAAS,CAACU,OAAV,CAAkB3E,KAAvC,CAA+CiE,SAAS,CAACU,OAAV,CAAkB3E,KAAjE,CAAyE,IADtE,CAET4E,GAAG,CAAEpE,cAAc,CAACoE,GAFX,CAGTC,GAAG,CAAErE,cAAc,CAACqE,GAHX,CAITC,OAAO,CAAEtE,cAAc,CAACsE,OAJf,CAKTC,MAAM,CAAExE,OAAO,CAACuD,GALP,CAMTkB,SAAS,CAAE,CANF,CAOTC,SAAS,CAAE7D,SAAS,CAACL,SAPZ,CAQTkB,QAAQ,CAAEA,QARD,CASTX,KAAK,CAAEA,KATE,CAUTL,QAAQ,CAAEG,SAAS,CAACH,QAVX,CAWTiE,WAAW,CAAErD,QAXJ,CAYTX,GAAG,CAAEiD,QAAQ,CAACQ,OAAT,CAAiBQ,OAZb,CAaTC,WAAW,CAAEhB,gBAAgB,CAACO,OAAjB,CAAyB3E,KAAzB,CACToE,gBAAgB,CAACO,OAAjB,CAAyB3E,KADhB,CAET,IAfK,CAgBTqF,SAAS,CAAEjE,SAAS,CAACD,SAhBZ,CAAX,CAmBA,GAAMmE,CAAAA,KAAK,CAAGjG,SAAS,CAACoF,IAAD,CAAvB,CAEA,GAAIa,KAAK,CAACC,MAAN,EAAgB,CAApB,CAAuB,CACrB/C,WAAW,CAAC,CACVgD,SAAS,CAAEf,IADD,CAAD,CAAX,CAGD,CAJD,IAIO,CACLnC,WAAW,CAACgD,KAAD,CAAX,CACD,CACF,CA/BD,CAiCA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,IAAI,CAAI,CAC/BrE,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBpC,SAAS,CAAE2E,IAA7B,GACD,CAFW,CAAZ,CAGD,CAJD,CAMA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAC,KAAK,CAAI,CACpCvE,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBlC,QAAQ,CAAE2E,KAAK,CAACC,MAAN,CAAa7F,KAAzC,GACD,CAFW,CAAZ,CAGD,CAJD,CAMA,GAAM8F,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BzE,YAAY,CAAC,SAAA8B,IAAI,CAAI,CACnB,wBAAYA,IAAZ,EAAkBjC,GAAG,CAAE,CAACE,SAAS,CAACF,GAAlC,GACD,CAFW,CAAZ,CAGD,CAJD,CAMA,MACI,qBAAC,UAAD,EACA,SAAS,CAAEE,SADX,CAEA,YAAY,CAAEC,YAFd,CAIA,eAAe,CAAEyE,eAJjB,CAKA,oBAAoB,CAAEH,oBALtB,CAMA,gBAAgB,CAAEF,gBANlB,CAOA,QAAQ,CAAEnB,QAPV,CAQA,SAAS,CAAEX,SARX,CASA,QAAQ,CAAEN,QATV,CAUA,QAAQ,CAAED,QAVV,CAWA,OAAO,CAAEJ,OAXT,CAaA,SAAS,CAAEiB,SAbX,CAcA,SAAS,CAAEC,SAdX,CAeA,QAAQ,CAAEC,QAfV,CAgBA,gBAAgB,CAAEC,gBAhBlB,CAiBA,WAAW,CAAEC,WAjBb,CAmBA,OAAO,CAAEzB,OAnBT,CAoBA,QAAQ,CAAEE,QApBV,CAqBA,cAAc,CAAEtC,cArBhB,CAsBA,iBAAiB,CAAEC,iBAtBnB,CAuBA,iBAAiB,CAAEqB,iBAvBnB,CAwBA,mBAAmB,CAAEE,mBAxBrB,CAyBA,kBAAkB,CAAEG,kBAzBpB,CA0BA,mBAAmB,CAAEC,mBA1BrB,CA2BA,iBAAiB,CAAEF,iBA3BnB,CA4BA,eAAe,CAAET,eA5BjB,CA6BA,gBAAgB,CAAEE,gBA7BlB,CA8BA,cAAc,CAAEJ,cA9BhB,CA+BA,kBAAkB,CAAEQ,kBA/BpB,CAiCA,YAAY,CAAErB,YAjCd,CAkCA,OAAO,CAAE+B,OAlCT,CAmCA,QAAQ,CAAEJ,QAnCV,CAoCA,QAAQ,CAAER,QApCV,CAqCA,QAAQ,CAAEI,QArCV,CAsCA,KAAK,CAAEX,KAtCP,CAuCA,eAAe,CAAEX,eAvCjjC,UAAU,CAAC,SAAA2H,KAAK,QAAK,CACrCC,WAAW,CAAE,CACXC,GAAG,CAAE,CADM,CAEXC,MAAM,CAAE,MAFG,CAGXC,KAAK,CAAE,MAHI,CAIXC,QAAQ,CAAE,UACV;AACA;AANW,CADwB,CASrCC,MAAM,kBACJC,SAAS,CAAE,EADP,CAEJC,OAAO,CAAE,EAFL,CAGJC,UAAU,CAAE,EAHR,CAIJC,aAAa,CAAE,CAJX,CAMJC,sBAAsB,CAAE,CANpB,CAOJC,uBAAuB,CAAE,CAPrB,CAQJC,UAAU,CAAE,SARR,EASHb,KAAK,CAACc,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CATG,CAS4B,CAC9BR,SAAS,CAAE,iBADmB,CAT5B,CAT+B,CAsBrCS,KAAK,CAAE,CACLR,OAAO,CAAE,EADJ,CAELS,OAAO,CAAE,MAFJ,CAGLC,aAAa,CAAE,QAHV,CAILC,UAAU,CAAE,QAJP,CAKLN,UAAU,CAAE,uBALP,CAMLO,mBAAmB,CAAE,CANhB,CAOLC,oBAAoB,CAAE,CAPjB,CAtB8B,CAgCrCC,QAAQ,CAAE,CACRC,UAAU,CAAE,GADJ,CAERC,QAAQ,CAAE,EAFF,CAGRC,aAAa,CAAE,EAHP,CAIRpB,QAAQ,CAAE,UAJF,CAKRH,GAAG,CAAE,CALG,CAMRwB,YAAY,CAAE,CANN,CAhC2B,CAwCrCC,GAAG,CAAE,CACHJ,UAAU,CAAE,GADT,CAEHC,QAAQ,CAAE,EAFP,CAGHC,aAAa,CAAE,CAHZ,CAxCgC,CA6CrCvD,SAAS,CAAC,CACR2C,UAAU,CAAE,uBADJ,CAERe,YAAY,CAAE,CAFN,CAGRC,SAAS,CAAE,kCAHH,CA7C2B,CAkDrCC,MAAM,CAAE,CACNC,MAAM,CAAE/B,KAAK,CAACgC,OAAN,CAAc,CAAd,CADF,CAENC,eAAe,CAAEjC,KAAK,CAACkC,OAAN,CAAcC,SAAd,CAAwBC,IAFnC,CAlD6B,CAsDrCC,IAAI,CAAE,CACJjC,KAAK,CAAE,MADH,CACW;AACfG,SAAS,CAAEP,KAAK,CAACgC,OAAN,CAAc,CAAd,CAFP,CAtD+B,CA0DrCM,QAAQ,CAAE,CACRlC,KAAK,CAAE,MADC,CA1D2B,CA6DrCmC,MAAM,CAAE,CACNR,MAAM,CAAE/B,KAAK,CAACgC,OAAN,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CADF,CA7D6B,CAiErCQ,YAAY,CAAE,CACZjC,SAAS,CAAEP,KAAK,CAACgC,OAAN,CAAc,CAAd,CADC,CAjEuB,CAoErCS,SAAS,CAAE,CACTrC,KAAK,CAAE,GADE,CApE0B,CAuErCsC,OAAO,CAAE,CACPnC,SAAS,CAAE,EADJ,CAEPmB,YAAY,CAAE,EAFP,CAvE4B,CA2ErCiB,SAAS,CAAE,CACTjB,YAAY,CAAE,MADL,CAETkB,UAAU,CAAE,MAFH,CA3E0B,CA+ErCC,oBAAoB,CAAE,CACpBzC,KAAK,CAAE,MADa,CA/Ee,CAkFrC0C,eAAe,CAAE,CACf1C,KAAK,CAAE,MADQ,CAlFoB,CAqFrC2C,aAAa,CAAE,CACb3C,KAAK,CAAE,MADM,CAEbS,UAAU,CAAE,iBAFC,CAGbmC,SAAS,CAAE,GAHE,CArFsB,CA0FrCC,QAAQ,CAAE,CACR;AACA;AAFQ,CA1F2B,CAAL,EAAN,CAA5B,CAgGA,cAAe9I,CAAAA,MAAf","sourcesContent":["import React, { useContext, useState, useRef, useEffect, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport CloudDoneIcon from \"@material-ui/icons/CloudDone\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport clsx from \"clsx\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { findEmpty } from \"../Services/functions\";\nimport { UserContext } from \"../userContext\";\n\nimport Copyright from \"../Atoms/copyright\";\nimport Dropzone from \"../Molecules/Dropzone\";\nimport Spinner from \"../Atoms/Spinner\";\nimport MapCreate from \"../Molecules/MapCreate\";\nimport LoginFirstButton from \"../Atoms/LoginFirstButton\";\nimport CreateView from \"./CreateView\"\n\nimport {useLogicPlusMinusValue} from \"./Logic/Create/useLogicPlusMinusValue\";\n\n\nconst NEW_EVENT = gql`\n  mutation createEvent(\n    $name: String!\n    $lng: Float\n    $lat: Float\n    $address: String\n    $author: String!\n    $dateStart: String\n    $duration: Float\n    $price: Float\n    $currency: String\n    $capacityMax: Int\n    $BYO: Boolean\n    $description: String\n    $imagesArr: [ImageInput]\n  ) {\n    createEvent(\n      eventInput: {\n        name: $name\n        lng: $lng\n        lat: $lat\n        address: $address\n        author: $author\n        dateStart: $dateStart\n        duration: $duration\n        price: $price\n        currency: $currency\n        capacityMax: $capacityMax\n        BYO: $BYO\n        description: $description\n        imagesArr: $imagesArr\n      }\n    ) {\n      dataOut {\n        _id\n        name\n        success\n      }\n      errorOut {\n        name\n        message\n      }\n    }\n  }\n`;\n\nconst currencies = [\n  {\n    value: \"USD\",\n    label: \"$\"\n  },\n  {\n    value: \"EUR\",\n    label: \"€\"\n  },\n  {\n    value: \"CZK\",\n    label: \"Kč\"\n  }\n];\n\nfunction Create(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const { context } = useContext(UserContext);\n  const [customMapParam, setCustomMapParam] = useState(null);\n  const [countOfFiles, setCountOfFiles] = useState(0);\n  const Price = useLogicPlusMinusValue(\"plus_btn\", \"minus_btn\", 50)\n  const Capacity = useLogicPlusMinusValue(\"plus_btn_capacity\", \"minus_btn_capacity\", 15)\n  const Duration = useLogicPlusMinusValue(\"plus_btn_duration\", \"minus_btn_duration\", 3)\n  const [formValue, setFormValue] = useState({\n    startDate: new Date(),\n    currency: \"CZK\",\n    BYO: true,\n    ImagesArr: []\n  });\n\n  const price = Price.value\n  const plusClickPrice = Price.plusClickValue\n  const minusClickPrice = Price.minusClickValue\n  const setNewValuePrice = Price.setNewValue\n\n  const capacity = Capacity.value\n  const plusClickCapacity = Capacity.plusClickValue\n  const minusClickCapacity = Capacity.minusClickValue\n  const setNewValueCapacity = Capacity.setNewValue\n\n  const duration = Duration.value\n  const plusClickDuration = Duration.plusClickValue\n  const minusClickDuration = Duration.minusClickValue\n  const setNewValueDuration = Duration.setNewValue\n\n\n  const [FeErrors, setFeErrors] = useState([]);\n  const [createEvent, { loading, error, data }] = useMutation(NEW_EVENT, {\n    onCompleted: () => {\n      setFeErrors([]);\n    }\n  });\n  \n  const { dataOut } = data ? data.createEvent : { dataOut: undefined };\n  const { errorOut } = data ? data.createEvent : { errorOut: undefined };\n\n  let den = new Date(formValue.startDate);\n\n\n  //Day +- one day\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    setFormValue(prev => {\n      return { ...prev, startDate: den };\n    });\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    setFormValue(prev => {\n      return { ...prev, startDate: den };\n    });\n  };\n\n  //Hours +- one hour\n  const plusHour = () => {\n    den.setHours(den.getHours() + 1);\n    let isoDen = den.toISOString().split(\":\")[0];\n    setFormValue(prev => {\n      return { ...prev, startDate: `${isoDen}:00:00.000Z` };\n    });\n  };\n\n  const minusHour = () => {\n    den.setHours(den.getHours() - 1);\n    let isoDen = den.toISOString().split(\":\")[0];\n    setFormValue(prev => {\n      return { ...prev, startDate: `${isoDen}:00:00.000Z` };\n    });\n  };\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if(!context._id){\n      history.push('/signin')\n    }\n  }, []);\n\n  useEffect(() => {\n    if (dataOut) {\n      setTimeout(() => {\n        history.push(`/event/${dataOut._id}`);\n      }, 500);\n    }\n  }, [dataOut]);\n\n  const inputName = useRef(null);\n  const inputTime = useRef(null);\n  const inputBYO = useRef(null);\n  const inputDescription = useRef(null);\n  const inputMarker = useRef(null);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    let load = {\n      name: inputName.current && inputName.current.value ? inputName.current.value : null,\n      lng: customMapParam.lng,\n      lat: customMapParam.lat,\n      address: customMapParam.address,\n      author: context._id,\n      eventType: 1,\n      dateStart: formValue.startDate,\n      duration: duration,\n      price: price,\n      currency: formValue.currency,\n      capacityMax: capacity,\n      BYO: inputBYO.current.checked,\n      description: inputDescription.current.value\n        ? inputDescription.current.value\n        : null,\n      imagesArr: formValue.ImagesArr\n    };\n\n    const empty = findEmpty(load);\n    \n    if (empty.length == 0) {\n      createEvent({\n        variables: load\n      });\n    } else {\n      setFeErrors(empty);\n    }\n  };\n\n  const handleDateChange = date => {\n    setFormValue(prev => {\n      return { ...prev, startDate: date };\n    });\n  };\n\n  const handleChangeCurrency = event => {\n    setFormValue(prev => {\n      return { ...prev, currency: event.target.value };\n    });\n  };\n\n  const handleChangeBYO = () => {\n    setFormValue(prev => {\n      return { ...prev, BYO: !formValue.BYO };\n    });\n  }\n\n  return(\n      <CreateView \n      formValue={formValue}\n      setFormValue={setFormValue}\n\n      handleChangeBYO={handleChangeBYO}\n      handleChangeCurrency={handleChangeCurrency}\n      handleDateChange={handleDateChange}\n      onSubmit={onSubmit}\n      minusHour={minusHour}\n      plusHour={plusHour}\n      minusDay={minusDay}\n      plusDay={plusDay}\n\n      inputName={inputName}\n      inputTime={inputTime}\n      inputBYO={inputBYO}\n      inputDescription={inputDescription}\n      inputMarker={inputMarker}\n\n      dataOut={dataOut}\n      errorOut={errorOut}\n      customMapParam={customMapParam}\n      setCustomMapParam={setCustomMapParam}\n      plusClickCapacity={plusClickCapacity}\n      setNewValueCapacity={setNewValueCapacity}\n      minusClickDuration={minusClickDuration}\n      setNewValueDuration={setNewValueDuration}\n      plusClickDuration={plusClickDuration}\n      minusClickPrice={minusClickPrice}\n      setNewValuePrice={setNewValuePrice}\n      plusClickPrice={plusClickPrice}\n      minusClickCapacity={minusClickCapacity}\n\n      countOfFiles={countOfFiles}  \n      loading={loading}\n      FeErrors={FeErrors}\n      capacity={capacity}\n      duration={duration}\n      price={price}\n      setCountOfFiles={setCountOfFiles}\n      />\n    )\n\n  // return (\n  //   <div\n  //     component=\"main\"\n  //     id=\"mainCreate\"\n  //     className={classes.profileWrap}\n  //     style={{ position: context.freezScroll ? \"fixed\" : \"absolute\" }} // fixed is freezed, absolute is scrollable\n  //   >\n  //     <CssBaseline />\n  //     <Container maxWidth=\"sm\" className={classes.paper1}>\n  //       <Grid\n  //         container\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //         direction=\"column\"\n  //         className={classes.pinkBack}\n  //       >\n          \n  //         {/* <Avatar className={classes.avatar}>\n  //           <AddCircleOutlineIcon />\n  //         </Avatar> */}\n  //         <Grid item>\n  //           <Typography variant=\"h5\" className={classes.justDoIt}>\n  //             JUST DO IT\n  //           </Typography>\n  //         </Grid>\n  //         <Grid item>\n  //           <Typography variant=\"h5\" className={classes.now}>\n  //             <b>NOW</b>\n  //           </Typography>\n  //         </Grid>\n\n  //         <Grid container className={clsx(classes.formRow)}>\n  //           <Grid item style={{ width: \"100%\" }}>\n  //             {context.success ? (\n  //               <TextField\n  //                 variant=\"outlined\"\n  //                 margin=\"normal\"\n  //                 required\n  //                 fullWidth\n  //                 id=\"name\"\n  //                 inputRef={inputName}\n  //                 label=\"My First Party\"\n  //                 name=\"name\"\n  //                 autoFocus\n  //                 className={classes.inputName}\n  //               />\n  //             ) : (\n  //               <LoginFirstButton />\n  //             )}\n  //           </Grid>\n  //         </Grid>\n  //       </Grid>\n  //     </Container>\n  //     <Container maxWidth=\"sm\" className={classes.paper}>\n  //       <form className={classes.form} noValidate>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">ADDRESS</InputLabel>\n  //         <MapCreate\n  //           customMapParam={customMapParam}\n  //           setCustomMapParam={setCustomMapParam}\n  //           inputMarker={inputMarker}\n  //         />\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">DATE</InputLabel>\n  //         <Grid\n  //           container\n  //           alignItems=\"center\"\n  //           alignContent=\"flex-start\"\n  //           justify=\"flex-start\"\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 minusDay();\n  //               }}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n  //               <KeyboardDatePicker\n  //                 margin=\"normal\"\n  //                 id=\"date-picker-dialog\"\n  //                 format=\"dd/MM/yyyy\"\n  //                 value={formValue.startDate}\n  //                 onChange={e => {\n  //                   handleDateChange(e);\n  //                 }}\n  //                 KeyboardButtonProps={{\n  //                   \"aria-label\": \"change date\"\n  //                 }}\n  //               />\n  //             </MuiPickersUtilsProvider>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 plusDay();\n  //               }}\n  //             >\n  //               <ArrowForwardIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n  //         {/*  +- Hours */}\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">TIME</InputLabel>\n  //         <Grid\n  //           container\n  //           alignItems=\"center\"\n  //           alignContent=\"flex-start\"\n  //           justify=\"flex-start\"\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 minusHour();\n  //               }}\n  //             >\n  //               <ArrowBackIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n  //               <KeyboardTimePicker margin=\"normal\" id=\"time-picker\" inputRef={inputTime}\n  //                 //label=\"Time picker\"\n  //                 value={formValue.startDate}\n  //                 onChange={e => {\n  //                   handleDateChange(e);\n  //                 }}\n  //                 KeyboardButtonProps={{\n  //                   \"aria-label\": \"change time\"\n  //                 }}\n  //               />\n  //             </MuiPickersUtilsProvider>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\n  //               onClick={() => {\n  //                 plusHour();\n  //               }}\n  //             >\n  //               <ArrowForwardIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">DURATION</InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"minus_btn_duration\"\n  //               onClick={() => minusClickDuration}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <Input\n  //               type=\"number\"\n  //               value={duration}\n  //               //onChange={handleChange(\"amount\")}\n  //               onChange={(value) => {setNewValueDuration(value.target.value)}}\n  //               endAdornment={\n  //                 <InputAdornment position=\"start\">\n  //                   hours  \n  //                 </InputAdornment>\n  //               }\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn_duration\"\n  //               onClick={() => plusClickDuration}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">PRICE</InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"minus_btn\"\n  //               onClick={() => minusClickPrice}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <Input\n  //               type=\"number\"\n  //               value={price}\n  //               //onChange={handleChange(\"amount\")}\n  //               onChange={(value) => {\n  //                 console.log(\"CHange Price: \", value)\n  //                 setNewValuePrice(value.target.value)\n  //               }}\n  //               startAdornment={\n  //                 <InputAdornment position=\"start\">\n  //                   {formValue.currency}\n  //                 </InputAdornment>\n  //               }\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <TextField\n  //               id=\"outlined-select-currency\"\n  //               select\n  //               //label=\"Select\"\n  //               value={formValue.currency}\n  //               onChange={handleChangeCurrency}\n  //               //helperText=\"Please select your currency\"\n  //               //variant=\"outlined\"\n  //             >\n  //               {currencies.map(option => (\n  //                 <MenuItem key={option.value} value={option.value}>\n  //                   {option.label}\n  //                 </MenuItem>\n  //               ))}\n  //             </TextField>\n  //           </Grid>\n\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn\"\n  //               onClick={() => plusClickPrice}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">CAPACITY</InputLabel>\n  //         <Grid container className={classes.formRow}>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               edge=\"start\"\n  //               id=\"minus_btn_capacity\"\n  //               onClick={() => minusClickCapacity}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid>\n  //             <TextField\n  //               value={capacity}\n  //               type=\"number\"\n  //               onChange={(value) => {\n  //                 setNewValueCapacity(value.target.value)\n  //               }}\n  //               InputProps={{\n  //                 startAdornment: (\n  //                   <InputAdornment position=\"start\">\n  //                     <AccountCircle />\n  //                   </InputAdornment>\n  //                 )\n  //               }}\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn_capacity\"\n  //               onClick={() => plusClickCapacity}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n          \n  //         <InputLabel htmlFor=\"standard-adornment-amount\">BYO Event (guest can bring his own dring/snack)</InputLabel>\n  //         <FormControlLabel\n  //           className={classes.switchBYO}\n  //           control={\n  //             <Switch\n  //               //checked={formValue.checkedA}\n  //               onChange={handleChangeBYO}\n  //               checked={formValue.BYO}\n  //               inputRef={inputBYO}\n  //             />\n  //           }\n  //         />\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">\n  //           DESCRIPTION\n  //         </InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.formRow, classes.descriptionContainer)}\n  //         >\n  //           <Grid item className={classes.descriptionItem}>\n  //             <TextField\n  //               variant=\"outlined\"\n  //               margin=\"normal\"\n  //               required\n  //               fullWidth\n  //               id=\"decsription\"\n  //               placeholder=\"Example: Upon arrival, you will get welcome drink and some snacks will be ready on the balcony. Grill be ready too.\"\n  //               multiline\n  //               rows=\"4\"\n  //               inputRef={inputDescription}\n  //               //label=\"Description\"\n  //               name=\"decsription\"\n  //               autoComplete=\"false\" //improvisation, should be \"off\", or random \"string\"\n  //             />\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">IMAGES</InputLabel>\n  //         <Grid\n  //           container\n  //           justify=\"center\"\n  //           alignContent=\"center\"\n  //           className={classes.formRow}\n  //         >\n  //           <Grid\n  //             item\n  //             className={clsx(classes.dropItem, classes.dropContainer)}\n  //           >\n  //            <p>{countOfFiles - formValue.ImagesArr.length}</p>\n  //             <Dropzone setFormValue={setFormValue} setCountOfFiles={setCountOfFiles}/>\n  //           </Grid>\n  //         </Grid>\n\n  //         {errorOut &&\n  //           errorOut.map(item => (\n  //             <Alert severity=\"error\" key={item.message}>\n  //               {item.message}\n  //             </Alert>\n  //           ))}\n\n  //         {FeErrors &&\n  //           FeErrors.map(item => (\n  //             <Alert severity=\"error\" key={item}>\n  //               {item} is empty\n  //             </Alert>\n  //           ))}\n\n  //         <Button\n  //           type=\"submit\"\n  //           fullWidth\n  //           variant=\"contained\"\n  //           color=\"primary\"\n  //           className={classes.submit}\n  //           onClick={e => onSubmit(e)}\n  //           // disabled={\n  //           //   formValue.ImagesArr && formValue.ImagesArr.length ? false : true\n  //           // }\n  //           disabled={loading}\n  //         >\n  //           {dataOut && <CloudDoneIcon />}\n  //           {loading && <Spinner hieght={20} width={20} />}\n  //           Create Party\n  //         </Button>\n  //       </form>\n  //     </Container>\n  //     <Box mt={8}>\n  //       <Copyright />\n  //     </Box>\n  //   </div>\n  // );\n}\n\nconst useStyles = makeStyles(theme => ({\n  profileWrap: {\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    // background:\n    //   \"linear-gradient(180deg, rgba(0,0,255,0.5) 30%, rgba(255,0,100,0.5) 100%)\"\n  },\n  paper1: {\n    marginTop: 66,\n    padding: 10,\n    paddingTop: 50,\n    paddingBottom: 0,\n    \n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    background: \"#E8045D\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"56px !important\"\n    }\n  },\n  paper: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    background: \"rgba(255,255,255,0.7)\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0\n  },\n\n  justDoIt: {\n    fontWeight: 200,\n    fontSize: 25,\n    letterSpacing: 12,\n    position: \"relative\",\n    top: 5,\n    marginBottom: 0\n  },\n  now: {\n    fontWeight: 700,\n    fontSize: 38,\n    letterSpacing: 3\n  },\n  inputName:{\n    background: \"rgba(255,255,255,0.9)\",\n    borderRadius: 5,\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,0.75)\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  pinkBack: {\n    width: \"100%\"\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: 200\n  },\n  formRow: {\n    marginTop: 10,\n    marginBottom: 40\n  },\n  switchBYO: {\n    marginBottom: \"20px\",\n    marginLeft: \"10px\"\n  },\n  descriptionContainer: {\n    width: \"100%\"\n  },\n  descriptionItem: {\n    width: \"100%\"\n  },\n  dropContainer: {\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.1)\",\n    minHeight: 150\n  },\n  dropItem: {\n    //width: \"100%\",\n    //background: \"rgba(0,0,0,0.1)\"\n  }\n}));\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}