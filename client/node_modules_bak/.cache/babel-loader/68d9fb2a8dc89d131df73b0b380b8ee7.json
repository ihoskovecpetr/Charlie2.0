{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nexport function useLogicPlusMinusValue(idPlus, idMinus, startValue) {\n  const _useState = useState(startValue ? startValue : 10),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  let timerPlus;\n  let timerMinus;\n\n  const setNewValue = value => {\n    if (parseInt(value, 10) <= -1) {\n      setValue(0);\n    } else {\n      setValue(parseInt(value, 10));\n    }\n  };\n\n  const plusClickValue = () => {\n    setValue(prev => {\n      if (prev || prev == 0) {\n        return parseInt(prev, 10) + 1;\n      } else {\n        return 0;\n      }\n    });\n  };\n\n  const holdingPlus = () => {\n    timerPlus = setInterval(function () {\n      setValue(prev => {\n        return parseInt(prev + 1, 10);\n      });\n    }, 200);\n  };\n\n  const resetTimerPlus = () => {\n    clearTimeout(timerPlus);\n  };\n\n  const minusClickValue = () => {\n    setValue(prev => {\n      if (parseInt(prev - 1, 10) <= -1) {\n        return 0;\n      } else {\n        return parseInt(prev - 1, 10);\n      }\n    });\n  };\n\n  const holdingMinus = () => {\n    timerMinus = setInterval(function () {\n      setValue(prev => {\n        if (parseInt(prev - 1, 10) <= -1) {\n          return 0;\n        } else {\n          return parseInt(prev - 1, 10);\n        }\n      });\n    }, 200);\n  };\n\n  const resetTimerMinus = () => {\n    clearTimeout(timerMinus);\n  };\n\n  useEffect(() => {\n    document.getElementById(idPlus).addEventListener('click', plusClickValue);\n    document.getElementById(idPlus).addEventListener('mousedown', holdingPlus);\n    document.getElementById(idPlus).addEventListener('touchstart', holdingPlus);\n    document.getElementById(idMinus).addEventListener('click', minusClickValue);\n    document.getElementById(idMinus).addEventListener('mousedown', holdingMinus);\n    document.getElementById(idMinus).addEventListener('touchstart', holdingMinus);\n    document.getElementById(idPlus).addEventListener('mouseup', resetTimerPlus);\n    document.getElementById(idPlus).addEventListener('touchend', resetTimerPlus);\n    document.getElementById(idMinus).addEventListener('mouseup', resetTimerMinus);\n    document.getElementById(idMinus).addEventListener('touchend', resetTimerMinus);\n    return () => {};\n  }, []); // const xs_size_memo = useMemo(() => {\n  //   return xs_size;\n  // }, [xs_size]);\n\n  let Package = {\n    value,\n    plusClickValue,\n    minusClickValue,\n    setNewValue\n  };\n  return Package;\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/Logic/Create/useLogicPlusMinusValue.js"],"names":["React","useState","useEffect","useMemo","useLogicPlusMinusValue","idPlus","idMinus","startValue","value","setValue","timerPlus","timerMinus","setNewValue","parseInt","plusClickValue","prev","holdingPlus","setInterval","resetTimerPlus","clearTimeout","minusClickValue","holdingMinus","resetTimerMinus","document","getElementById","addEventListener","Package"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\nexport function useLogicPlusMinusValue(idPlus, idMinus, startValue ) {\n  const [value, setValue] = useState(startValue ? startValue : 10);\n\n\n  let timerPlus\n  let timerMinus\n\n  const setNewValue = (value) => {\n    if(parseInt(value, 10) <= -1){\n      setValue(0)\n    }else{\n      setValue(parseInt(value, 10)) \n    }\n    \n  };\n\n  const plusClickValue = () => {\n\n    setValue(prev => {\n        if(prev || prev == 0){\n          return(parseInt(prev, 10) + 1)\n        }else{\n          return(0)\n        }\n      }\n    )\n\n  };\n\n  const holdingPlus = () => {\n    timerPlus = setInterval(function() {\n      setValue(prev => {\n        return(parseInt(prev + 1, 10)) \n      });\n    }, 200);\n  }\n\n  const resetTimerPlus = () => {\n    clearTimeout(timerPlus)\n  }\n\n  const minusClickValue = () => {\n    setValue(prev => {\n      if(parseInt(prev - 1, 10) <= -1){\n        return(0)\n      }else{\n        return(parseInt(prev - 1, 10)) \n      }\n    });\n  };\n\n  const holdingMinus = () => {\n    timerMinus = setInterval(function() {\n      setValue(prev => {\n        if(parseInt(prev - 1, 10) <= -1){\n          return(0)\n        }else{\n          return(parseInt(prev - 1, 10)) \n        }\n      });\n    }, 200);\n  }\n\n  const resetTimerMinus = () => {\n    clearTimeout(timerMinus)\n  }\n\n  useEffect(() => {\n    document.getElementById(idPlus).addEventListener('click', plusClickValue);\n    document.getElementById(idPlus).addEventListener('mousedown', holdingPlus);\n    document.getElementById(idPlus).addEventListener('touchstart', holdingPlus);\n\n    document.getElementById(idMinus).addEventListener('click', minusClickValue);\n    document.getElementById(idMinus).addEventListener('mousedown', holdingMinus);\n    document.getElementById(idMinus).addEventListener('touchstart', holdingMinus);\n\n    document.getElementById(idPlus).addEventListener('mouseup', resetTimerPlus);\n    document.getElementById(idPlus).addEventListener('touchend', resetTimerPlus);\n\n    document.getElementById(idMinus).addEventListener('mouseup', resetTimerMinus);\n    document.getElementById(idMinus).addEventListener('touchend', resetTimerMinus);\n\n    return () =>{\n    } \n  }, []);\n\n  // const xs_size_memo = useMemo(() => {\n  //   return xs_size;\n  // }, [xs_size]);\n\n  let Package = { value, plusClickValue, minusClickValue, setNewValue }\n\n  return Package;\n}\n"]},"metadata":{},"sourceType":"module"}