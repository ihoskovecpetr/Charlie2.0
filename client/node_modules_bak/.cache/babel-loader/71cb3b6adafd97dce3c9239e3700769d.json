{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/Create.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createEvent(\\n    $name: String!\\n    $lng: Float\\n    $lat: Float\\n    $address: String\\n    $author: String!\\n    $dateStart: String\\n    $duration: Float\\n    $price: Float\\n    $currency: String\\n    $capacityMax: Int\\n    $BYO: Boolean\\n    $description: String\\n    $imagesArr: [ImageInput]\\n  ) {\\n    createEvent(\\n      eventInput: {\\n        name: $name\\n        lng: $lng\\n        lat: $lat\\n        address: $address\\n        author: $author\\n        dateStart: $dateStart\\n        duration: $duration\\n        price: $price\\n        currency: $currency\\n        capacityMax: $capacityMax\\n        BYO: $BYO\\n        description: $description\\n        imagesArr: $imagesArr\\n      }\\n    ) {\\n      dataOut {\\n        _id\\n        name\\n        success\\n      }\\n      errorOut {\\n        name\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState, useRef, useEffect, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport CloudDoneIcon from \"@material-ui/icons/CloudDone\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport clsx from \"clsx\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useHistory } from \"react-router-dom\";\nimport { findEmpty } from \"../Services/functions\";\nimport { UserContext } from \"../userContext\";\nimport Copyright from \"../Atoms/copyright\";\nimport Dropzone from \"../Molecules/Dropzone\";\nimport Spinner from \"../Atoms/Spinner\";\nimport MapCreate from \"../Molecules/MapCreate\";\nimport LoginFirstButton from \"../Atoms/LoginFirstButton\";\nimport CreateView from \"./CreateView\";\nimport { useLogicPlusMinusValue } from \"./Logic/Create/useLogicPlusMinusValue\";\nconst NEW_EVENT = gql(_templateObject());\nconst currencies = [{\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"CZK\",\n  label: \"Kč\"\n}];\n\nfunction Create(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        customMapParam = _useState2[0],\n        setCustomMapParam = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        countOfFiles = _useState4[0],\n        setCountOfFiles = _useState4[1];\n\n  const Price = useLogicPlusMinusValue(\"plus_btn\", \"minus_btn\", 50);\n  const Capacity = useLogicPlusMinusValue(\"plus_btn_capacity\", \"minus_btn_capacity\", 15);\n  const Duration = useLogicPlusMinusValue(\"plus_btn_duration\", \"minus_btn_duration\", 3);\n\n  const _useState5 = useState({\n    startDate: new Date(),\n    currency: \"CZK\",\n    BYO: true,\n    ImagesArr: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        formValue = _useState6[0],\n        setFormValue = _useState6[1];\n\n  const price = Price.value;\n  const plusClickPrice = Price.plusClickValue;\n  const minusClickPrice = Price.minusClickValue;\n  const setNewValuePrice = Price.setNewValue;\n  const capacity = Capacity.value;\n  const plusClickCapacity = Capacity.plusClickValue;\n  const minusClickCapacity = Capacity.minusClickValue;\n  const setNewValueCapacity = Capacity.setNewValue;\n  const duration = Duration.value;\n  const plusClickDuration = Duration.plusClickValue;\n  const minusClickDuration = Duration.minusClickValue;\n  const setNewValueDuration = Duration.setNewValue;\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        FeErrors = _useState8[0],\n        setFeErrors = _useState8[1];\n\n  const _useMutation = useMutation(NEW_EVENT, {\n    onCompleted: () => {\n      setFeErrors([]);\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        createEvent = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error,\n        data = _useMutation2$.data;\n\n  const _ref = data ? data.createEvent : {\n    dataOut: undefined\n  },\n        dataOut = _ref.dataOut;\n\n  const _ref2 = data ? data.createEvent : {\n    errorOut: undefined\n  },\n        errorOut = _ref2.errorOut;\n\n  let den = new Date(formValue.startDate); //Day +- one day\n\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        startDate: den\n      });\n    });\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        startDate: den\n      });\n    });\n  }; //Hours +- one hour\n\n\n  const plusHour = () => {\n    den.setHours(den.getHours() + 1);\n    let isoDen = den.toISOString().split(\":\")[0];\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        startDate: \"\".concat(isoDen, \":00:00.000Z\")\n      });\n    });\n  };\n\n  const minusHour = () => {\n    den.setHours(den.getHours() - 1);\n    let isoDen = den.toISOString().split(\":\")[0];\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        startDate: \"\".concat(isoDen, \":00:00.000Z\")\n      });\n    });\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  useEffect(() => {\n    if (dataOut) {\n      setTimeout(() => {\n        history.push(\"/event/\".concat(dataOut._id));\n      }, 500);\n    }\n  }, [dataOut]);\n  const inputName = useRef(null);\n  const inputTime = useRef(null);\n  const inputBYO = useRef(null);\n  const inputDescription = useRef(null);\n  const inputMarker = useRef(null);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let load = {\n      name: inputName.current.value ? inputName.current.value : null,\n      lng: customMapParam.lng,\n      lat: customMapParam.lat,\n      address: customMapParam.address,\n      author: context._id,\n      eventType: 1,\n      dateStart: formValue.startDate,\n      duration: duration,\n      price: price,\n      currency: formValue.currency,\n      capacityMax: capacity,\n      BYO: inputBYO.current.checked,\n      description: inputDescription.current.value ? inputDescription.current.value : null,\n      imagesArr: formValue.ImagesArr\n    };\n    const empty = findEmpty(load);\n\n    if (empty.length == 0) {\n      createEvent({\n        variables: load\n      });\n    } else {\n      setFeErrors(empty);\n    }\n  };\n\n  const handleDateChange = date => {\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        startDate: date\n      });\n    });\n  };\n\n  const handleChangeCurrency = event => {\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        currency: event.target.value\n      });\n    });\n  };\n\n  const handleChangeBYO = () => {\n    setFormValue(prev => {\n      return _objectSpread({}, prev, {\n        BYO: !formValue.BYO\n      });\n    });\n  };\n\n  return React.createElement(CreateView, {\n    formValue: formValue,\n    handleChangeBYO: handleChangeBYO,\n    handleChangeCurrency: handleChangeCurrency,\n    handleDateChange: handleDateChange,\n    onSubmit: onSubmit,\n    minusHour: minusHour,\n    plusHour: plusHour,\n    minusDay: minusDay,\n    plusDay: plusDay,\n    inputName: inputName,\n    inputTime: inputTime,\n    inputBYO: inputBYO,\n    inputDescription: inputDescription,\n    inputMarker: inputMarker,\n    dataOut: dataOut,\n    errorOut: errorOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }); // return (\n  //   <div\n  //     component=\"main\"\n  //     id=\"mainCreate\"\n  //     className={classes.profileWrap}\n  //     style={{ position: context.freezScroll ? \"fixed\" : \"absolute\" }} // fixed is freezed, absolute is scrollable\n  //   >\n  //     <CssBaseline />\n  //     <Container maxWidth=\"sm\" className={classes.paper1}>\n  //       <Grid\n  //         container\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //         direction=\"column\"\n  //         className={classes.pinkBack}\n  //       >\n  //         {/* <Avatar className={classes.avatar}>\n  //           <AddCircleOutlineIcon />\n  //         </Avatar> */}\n  //         <Grid item>\n  //           <Typography variant=\"h5\" className={classes.justDoIt}>\n  //             JUST DO IT\n  //           </Typography>\n  //         </Grid>\n  //         <Grid item>\n  //           <Typography variant=\"h5\" className={classes.now}>\n  //             <b>NOW</b>\n  //           </Typography>\n  //         </Grid>\n  //         <Grid container className={clsx(classes.formRow)}>\n  //           <Grid item style={{ width: \"100%\" }}>\n  //             {context.success ? (\n  //               <TextField\n  //                 variant=\"outlined\"\n  //                 margin=\"normal\"\n  //                 required\n  //                 fullWidth\n  //                 id=\"name\"\n  //                 inputRef={inputName}\n  //                 label=\"My First Party\"\n  //                 name=\"name\"\n  //                 autoFocus\n  //                 className={classes.inputName}\n  //               />\n  //             ) : (\n  //               <LoginFirstButton />\n  //             )}\n  //           </Grid>\n  //         </Grid>\n  //       </Grid>\n  //     </Container>\n  //     <Container maxWidth=\"sm\" className={classes.paper}>\n  //       <form className={classes.form} noValidate>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">ADDRESS</InputLabel>\n  //         <MapCreate\n  //           customMapParam={customMapParam}\n  //           setCustomMapParam={setCustomMapParam}\n  //           inputMarker={inputMarker}\n  //         />\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">DATE</InputLabel>\n  //         <Grid\n  //           container\n  //           alignItems=\"center\"\n  //           alignContent=\"flex-start\"\n  //           justify=\"flex-start\"\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 minusDay();\n  //               }}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n  //               <KeyboardDatePicker\n  //                 margin=\"normal\"\n  //                 id=\"date-picker-dialog\"\n  //                 format=\"dd/MM/yyyy\"\n  //                 value={formValue.startDate}\n  //                 onChange={e => {\n  //                   handleDateChange(e);\n  //                 }}\n  //                 KeyboardButtonProps={{\n  //                   \"aria-label\": \"change date\"\n  //                 }}\n  //               />\n  //             </MuiPickersUtilsProvider>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 plusDay();\n  //               }}\n  //             >\n  //               <ArrowForwardIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n  //         {/*  +- Hours */}\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">TIME</InputLabel>\n  //         <Grid\n  //           container\n  //           alignItems=\"center\"\n  //           alignContent=\"flex-start\"\n  //           justify=\"flex-start\"\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 minusHour();\n  //               }}\n  //             >\n  //               <ArrowBackIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n  //               <KeyboardTimePicker margin=\"normal\" id=\"time-picker\" inputRef={inputTime}\n  //                 //label=\"Time picker\"\n  //                 value={formValue.startDate}\n  //                 onChange={e => {\n  //                   handleDateChange(e);\n  //                 }}\n  //                 KeyboardButtonProps={{\n  //                   \"aria-label\": \"change time\"\n  //                 }}\n  //               />\n  //             </MuiPickersUtilsProvider>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\n  //               onClick={() => {\n  //                 plusHour();\n  //               }}\n  //             >\n  //               <ArrowForwardIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">DURATION</InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"minus_btn_duration\"\n  //               onClick={() => minusClickDuration}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <Input\n  //               type=\"number\"\n  //               value={duration}\n  //               //onChange={handleChange(\"amount\")}\n  //               onChange={(value) => {setNewValueDuration(value.target.value)}}\n  //               endAdornment={\n  //                 <InputAdornment position=\"start\">\n  //                   hours  \n  //                 </InputAdornment>\n  //               }\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn_duration\"\n  //               onClick={() => plusClickDuration}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">PRICE</InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"minus_btn\"\n  //               onClick={() => minusClickPrice}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <Input\n  //               type=\"number\"\n  //               value={price}\n  //               //onChange={handleChange(\"amount\")}\n  //               onChange={(value) => {\n  //                 console.log(\"CHange Price: \", value)\n  //                 setNewValuePrice(value.target.value)\n  //               }}\n  //               startAdornment={\n  //                 <InputAdornment position=\"start\">\n  //                   {formValue.currency}\n  //                 </InputAdornment>\n  //               }\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <TextField\n  //               id=\"outlined-select-currency\"\n  //               select\n  //               //label=\"Select\"\n  //               value={formValue.currency}\n  //               onChange={handleChangeCurrency}\n  //               //helperText=\"Please select your currency\"\n  //               //variant=\"outlined\"\n  //             >\n  //               {currencies.map(option => (\n  //                 <MenuItem key={option.value} value={option.value}>\n  //                   {option.label}\n  //                 </MenuItem>\n  //               ))}\n  //             </TextField>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn\"\n  //               onClick={() => plusClickPrice}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">CAPACITY</InputLabel>\n  //         <Grid container className={classes.formRow}>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               edge=\"start\"\n  //               id=\"minus_btn_capacity\"\n  //               onClick={() => minusClickCapacity}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid>\n  //             <TextField\n  //               value={capacity}\n  //               type=\"number\"\n  //               onChange={(value) => {\n  //                 setNewValueCapacity(value.target.value)\n  //               }}\n  //               InputProps={{\n  //                 startAdornment: (\n  //                   <InputAdornment position=\"start\">\n  //                     <AccountCircle />\n  //                   </InputAdornment>\n  //                 )\n  //               }}\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn_capacity\"\n  //               onClick={() => plusClickCapacity}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">BYO Event (guest can bring his own dring/snack)</InputLabel>\n  //         <FormControlLabel\n  //           className={classes.switchBYO}\n  //           control={\n  //             <Switch\n  //               //checked={formValue.checkedA}\n  //               onChange={handleChangeBYO}\n  //               checked={formValue.BYO}\n  //               inputRef={inputBYO}\n  //             />\n  //           }\n  //         />\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">\n  //           DESCRIPTION\n  //         </InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.formRow, classes.descriptionContainer)}\n  //         >\n  //           <Grid item className={classes.descriptionItem}>\n  //             <TextField\n  //               variant=\"outlined\"\n  //               margin=\"normal\"\n  //               required\n  //               fullWidth\n  //               id=\"decsription\"\n  //               placeholder=\"Example: Upon arrival, you will get welcome drink and some snacks will be ready on the balcony. Grill be ready too.\"\n  //               multiline\n  //               rows=\"4\"\n  //               inputRef={inputDescription}\n  //               //label=\"Description\"\n  //               name=\"decsription\"\n  //               autoComplete=\"false\" //improvisation, should be \"off\", or random \"string\"\n  //             />\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">IMAGES</InputLabel>\n  //         <Grid\n  //           container\n  //           justify=\"center\"\n  //           alignContent=\"center\"\n  //           className={classes.formRow}\n  //         >\n  //           <Grid\n  //             item\n  //             className={clsx(classes.dropItem, classes.dropContainer)}\n  //           >\n  //            <p>{countOfFiles - formValue.ImagesArr.length}</p>\n  //             <Dropzone setFormValue={setFormValue} setCountOfFiles={setCountOfFiles}/>\n  //           </Grid>\n  //         </Grid>\n  //         {errorOut &&\n  //           errorOut.map(item => (\n  //             <Alert severity=\"error\" key={item.message}>\n  //               {item.message}\n  //             </Alert>\n  //           ))}\n  //         {FeErrors &&\n  //           FeErrors.map(item => (\n  //             <Alert severity=\"error\" key={item}>\n  //               {item} is empty\n  //             </Alert>\n  //           ))}\n  //         <Button\n  //           type=\"submit\"\n  //           fullWidth\n  //           variant=\"contained\"\n  //           color=\"primary\"\n  //           className={classes.submit}\n  //           onClick={e => onSubmit(e)}\n  //           // disabled={\n  //           //   formValue.ImagesArr && formValue.ImagesArr.length ? false : true\n  //           // }\n  //           disabled={loading}\n  //         >\n  //           {dataOut && <CloudDoneIcon />}\n  //           {loading && <Spinner hieght={20} width={20} />}\n  //           Create Party\n  //         </Button>\n  //       </form>\n  //     </Container>\n  //     <Box mt={8}>\n  //       <Copyright />\n  //     </Box>\n  //   </div>\n  // );\n}\n\nconst useStyles = makeStyles(theme => ({\n  profileWrap: {\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\" // background:\n    //   \"linear-gradient(180deg, rgba(0,0,255,0.5) 30%, rgba(255,0,100,0.5) 100%)\"\n\n  },\n  paper1: {\n    marginTop: 66,\n    padding: 10,\n    paddingTop: 50,\n    paddingBottom: 0,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    background: \"#E8045D\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"56px !important\"\n    }\n  },\n  paper: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    background: \"rgba(255,255,255,0.7)\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0\n  },\n  justDoIt: {\n    fontWeight: 200,\n    fontSize: 25,\n    letterSpacing: 12,\n    position: \"relative\",\n    top: 5,\n    marginBottom: 0\n  },\n  now: {\n    fontWeight: 700,\n    fontSize: 38,\n    letterSpacing: 3\n  },\n  inputName: {\n    background: \"rgba(255,255,255,0.9)\",\n    borderRadius: 5,\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,0.75)\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  pinkBack: {\n    width: \"100%\"\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: 200\n  },\n  formRow: {\n    marginTop: 10,\n    marginBottom: 40\n  },\n  switchBYO: {\n    marginBottom: \"20px\",\n    marginLeft: \"10px\"\n  },\n  descriptionContainer: {\n    width: \"100%\"\n  },\n  descriptionItem: {\n    width: \"100%\"\n  },\n  dropContainer: {\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.1)\",\n    minHeight: 150\n  },\n  dropItem: {//width: \"100%\",\n    //background: \"rgba(0,0,0,0.1)\"\n  }\n}));\nexport default Create;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/Create.js"],"names":["React","useContext","useState","useRef","useEffect","useMemo","Container","Grid","Box","Paper","CssBaseline","Alert","Snackbar","CloseIcon","Button","IconButton","TextField","FormControlLabel","Switch","Typography","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","ArrowBackIosIcon","ArrowForwardIosIcon","CloudDoneIcon","InputAdornment","Input","InputLabel","AccountCircle","MenuItem","clsx","useMutation","gql","useHistory","findEmpty","UserContext","Copyright","Dropzone","Spinner","MapCreate","LoginFirstButton","CreateView","useLogicPlusMinusValue","NEW_EVENT","currencies","value","label","Create","props","classes","useStyles","history","context","customMapParam","setCustomMapParam","countOfFiles","setCountOfFiles","Price","Capacity","Duration","startDate","Date","currency","BYO","ImagesArr","formValue","setFormValue","price","plusClickPrice","plusClickValue","minusClickPrice","minusClickValue","setNewValuePrice","setNewValue","capacity","plusClickCapacity","minusClickCapacity","setNewValueCapacity","duration","plusClickDuration","minusClickDuration","setNewValueDuration","FeErrors","setFeErrors","onCompleted","createEvent","loading","error","data","dataOut","undefined","errorOut","den","plusDay","setDate","getDate","prev","minusDay","plusHour","setHours","getHours","isoDen","toISOString","split","minusHour","window","scrollTo","setTimeout","push","_id","inputName","inputTime","inputBYO","inputDescription","inputMarker","onSubmit","e","preventDefault","load","name","current","lng","lat","address","author","eventType","dateStart","capacityMax","checked","description","imagesArr","empty","length","variables","handleDateChange","date","handleChangeCurrency","event","target","handleChangeBYO","theme","profileWrap","top","height","width","position","paper1","marginTop","padding","paddingTop","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","background","breakpoints","down","paper","display","flexDirection","alignItems","borderTopLeftRadius","borderTopRightRadius","justDoIt","fontWeight","fontSize","letterSpacing","marginBottom","now","borderRadius","boxShadow","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","pinkBack","submit","withoutLabel","textField","formRow","switchBYO","marginLeft","descriptionContainer","descriptionItem","dropContainer","minHeight","dropItem"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, useEffect, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport CloudDoneIcon from \"@material-ui/icons/CloudDone\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport clsx from \"clsx\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { findEmpty } from \"../Services/functions\";\nimport { UserContext } from \"../userContext\";\n\nimport Copyright from \"../Atoms/copyright\";\nimport Dropzone from \"../Molecules/Dropzone\";\nimport Spinner from \"../Atoms/Spinner\";\nimport MapCreate from \"../Molecules/MapCreate\";\nimport LoginFirstButton from \"../Atoms/LoginFirstButton\";\nimport CreateView from \"./CreateView\"\n\nimport {useLogicPlusMinusValue} from \"./Logic/Create/useLogicPlusMinusValue\";\n\n\nconst NEW_EVENT = gql`\n  mutation createEvent(\n    $name: String!\n    $lng: Float\n    $lat: Float\n    $address: String\n    $author: String!\n    $dateStart: String\n    $duration: Float\n    $price: Float\n    $currency: String\n    $capacityMax: Int\n    $BYO: Boolean\n    $description: String\n    $imagesArr: [ImageInput]\n  ) {\n    createEvent(\n      eventInput: {\n        name: $name\n        lng: $lng\n        lat: $lat\n        address: $address\n        author: $author\n        dateStart: $dateStart\n        duration: $duration\n        price: $price\n        currency: $currency\n        capacityMax: $capacityMax\n        BYO: $BYO\n        description: $description\n        imagesArr: $imagesArr\n      }\n    ) {\n      dataOut {\n        _id\n        name\n        success\n      }\n      errorOut {\n        name\n        message\n      }\n    }\n  }\n`;\n\nconst currencies = [\n  {\n    value: \"USD\",\n    label: \"$\"\n  },\n  {\n    value: \"EUR\",\n    label: \"€\"\n  },\n  {\n    value: \"CZK\",\n    label: \"Kč\"\n  }\n];\n\nfunction Create(props) {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const { context } = useContext(UserContext);\n  const [customMapParam, setCustomMapParam] = useState(null);\n  const [countOfFiles, setCountOfFiles] = useState(0);\n  const Price = useLogicPlusMinusValue(\"plus_btn\", \"minus_btn\", 50)\n  const Capacity = useLogicPlusMinusValue(\"plus_btn_capacity\", \"minus_btn_capacity\", 15)\n  const Duration = useLogicPlusMinusValue(\"plus_btn_duration\", \"minus_btn_duration\", 3)\n  const [formValue, setFormValue] = useState({\n    startDate: new Date(),\n    currency: \"CZK\",\n    BYO: true,\n    ImagesArr: []\n  });\n\n  const price = Price.value\n  const plusClickPrice = Price.plusClickValue\n  const minusClickPrice = Price.minusClickValue\n  const setNewValuePrice = Price.setNewValue\n\n\n  const capacity = Capacity.value\n  const plusClickCapacity = Capacity.plusClickValue\n  const minusClickCapacity = Capacity.minusClickValue\n  const setNewValueCapacity = Capacity.setNewValue\n\n  const duration = Duration.value\n  const plusClickDuration = Duration.plusClickValue\n  const minusClickDuration = Duration.minusClickValue\n  const setNewValueDuration = Duration.setNewValue\n\n\n  const [FeErrors, setFeErrors] = useState([]);\n  const [createEvent, { loading, error, data }] = useMutation(NEW_EVENT, {\n    onCompleted: () => {\n      setFeErrors([]);\n    }\n  });\n  \n  const { dataOut } = data ? data.createEvent : { dataOut: undefined };\n  const { errorOut } = data ? data.createEvent : { errorOut: undefined };\n\n  let den = new Date(formValue.startDate);\n\n\n\n\n  //Day +- one day\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    setFormValue(prev => {\n      return { ...prev, startDate: den };\n    });\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    setFormValue(prev => {\n      return { ...prev, startDate: den };\n    });\n  };\n\n  //Hours +- one hour\n  const plusHour = () => {\n    den.setHours(den.getHours() + 1);\n    let isoDen = den.toISOString().split(\":\")[0];\n    setFormValue(prev => {\n      return { ...prev, startDate: `${isoDen}:00:00.000Z` };\n    });\n  };\n\n  const minusHour = () => {\n    den.setHours(den.getHours() - 1);\n    let isoDen = den.toISOString().split(\":\")[0];\n    setFormValue(prev => {\n      return { ...prev, startDate: `${isoDen}:00:00.000Z` };\n    });\n  };\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (dataOut) {\n      setTimeout(() => {\n        history.push(`/event/${dataOut._id}`);\n      }, 500);\n    }\n  }, [dataOut]);\n\n  const inputName = useRef(null);\n  const inputTime = useRef(null);\n  const inputBYO = useRef(null);\n  const inputDescription = useRef(null);\n  const inputMarker = useRef(null);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    let load = {\n      name: inputName.current.value ? inputName.current.value : null,\n      lng: customMapParam.lng,\n      lat: customMapParam.lat,\n      address: customMapParam.address,\n      author: context._id,\n      eventType: 1,\n      dateStart: formValue.startDate,\n      duration: duration,\n      price: price,\n      currency: formValue.currency,\n      capacityMax: capacity,\n      BYO: inputBYO.current.checked,\n      description: inputDescription.current.value\n        ? inputDescription.current.value\n        : null,\n      imagesArr: formValue.ImagesArr\n    };\n\n    const empty = findEmpty(load);\n    \n    if (empty.length == 0) {\n      createEvent({\n        variables: load\n      });\n    } else {\n      setFeErrors(empty);\n    }\n  };\n\n  const handleDateChange = date => {\n    setFormValue(prev => {\n      return { ...prev, startDate: date };\n    });\n  };\n\n  const handleChangeCurrency = event => {\n    setFormValue(prev => {\n      return { ...prev, currency: event.target.value };\n    });\n  };\n\n  const handleChangeBYO = () => {\n    setFormValue(prev => {\n      return { ...prev, BYO: !formValue.BYO };\n    });\n  }\n\n  return(\n      <CreateView \n      formValue={formValue}\n\n      handleChangeBYO={handleChangeBYO}\n      handleChangeCurrency={handleChangeCurrency}\n      handleDateChange={handleDateChange}\n      onSubmit={onSubmit}\n      minusHour={minusHour}\n      plusHour={plusHour}\n      minusDay={minusDay}\n      plusDay={plusDay}\n\n      inputName={inputName}\n      inputTime={inputTime}\n      inputBYO={inputBYO}\n      inputDescription={inputDescription}\n      inputMarker={inputMarker}\n\n      dataOut={dataOut}\n      errorOut={errorOut}\n\n      />\n    )\n\n  // return (\n  //   <div\n  //     component=\"main\"\n  //     id=\"mainCreate\"\n  //     className={classes.profileWrap}\n  //     style={{ position: context.freezScroll ? \"fixed\" : \"absolute\" }} // fixed is freezed, absolute is scrollable\n  //   >\n  //     <CssBaseline />\n  //     <Container maxWidth=\"sm\" className={classes.paper1}>\n  //       <Grid\n  //         container\n  //         justify=\"center\"\n  //         alignItems=\"center\"\n  //         direction=\"column\"\n  //         className={classes.pinkBack}\n  //       >\n          \n  //         {/* <Avatar className={classes.avatar}>\n  //           <AddCircleOutlineIcon />\n  //         </Avatar> */}\n  //         <Grid item>\n  //           <Typography variant=\"h5\" className={classes.justDoIt}>\n  //             JUST DO IT\n  //           </Typography>\n  //         </Grid>\n  //         <Grid item>\n  //           <Typography variant=\"h5\" className={classes.now}>\n  //             <b>NOW</b>\n  //           </Typography>\n  //         </Grid>\n\n  //         <Grid container className={clsx(classes.formRow)}>\n  //           <Grid item style={{ width: \"100%\" }}>\n  //             {context.success ? (\n  //               <TextField\n  //                 variant=\"outlined\"\n  //                 margin=\"normal\"\n  //                 required\n  //                 fullWidth\n  //                 id=\"name\"\n  //                 inputRef={inputName}\n  //                 label=\"My First Party\"\n  //                 name=\"name\"\n  //                 autoFocus\n  //                 className={classes.inputName}\n  //               />\n  //             ) : (\n  //               <LoginFirstButton />\n  //             )}\n  //           </Grid>\n  //         </Grid>\n  //       </Grid>\n  //     </Container>\n  //     <Container maxWidth=\"sm\" className={classes.paper}>\n  //       <form className={classes.form} noValidate>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">ADDRESS</InputLabel>\n  //         <MapCreate\n  //           customMapParam={customMapParam}\n  //           setCustomMapParam={setCustomMapParam}\n  //           inputMarker={inputMarker}\n  //         />\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">DATE</InputLabel>\n  //         <Grid\n  //           container\n  //           alignItems=\"center\"\n  //           alignContent=\"flex-start\"\n  //           justify=\"flex-start\"\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 minusDay();\n  //               }}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n  //               <KeyboardDatePicker\n  //                 margin=\"normal\"\n  //                 id=\"date-picker-dialog\"\n  //                 format=\"dd/MM/yyyy\"\n  //                 value={formValue.startDate}\n  //                 onChange={e => {\n  //                   handleDateChange(e);\n  //                 }}\n  //                 KeyboardButtonProps={{\n  //                   \"aria-label\": \"change date\"\n  //                 }}\n  //               />\n  //             </MuiPickersUtilsProvider>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 plusDay();\n  //               }}\n  //             >\n  //               <ArrowForwardIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n  //         {/*  +- Hours */}\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">TIME</InputLabel>\n  //         <Grid\n  //           container\n  //           alignItems=\"center\"\n  //           alignContent=\"flex-start\"\n  //           justify=\"flex-start\"\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               onClick={() => {\n  //                 minusHour();\n  //               }}\n  //             >\n  //               <ArrowBackIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <MuiPickersUtilsProvider utils={DateFnsUtils}>\n  //               <KeyboardTimePicker margin=\"normal\" id=\"time-picker\" inputRef={inputTime}\n  //                 //label=\"Time picker\"\n  //                 value={formValue.startDate}\n  //                 onChange={e => {\n  //                   handleDateChange(e);\n  //                 }}\n  //                 KeyboardButtonProps={{\n  //                   \"aria-label\": \"change time\"\n  //                 }}\n  //               />\n  //             </MuiPickersUtilsProvider>\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\n  //               onClick={() => {\n  //                 plusHour();\n  //               }}\n  //             >\n  //               <ArrowForwardIosIcon\n  //                 //fontSize=\"large\"\n  //                 color=\"primary\"\n  //               />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">DURATION</InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"minus_btn_duration\"\n  //               onClick={() => minusClickDuration}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <Input\n  //               type=\"number\"\n  //               value={duration}\n  //               //onChange={handleChange(\"amount\")}\n  //               onChange={(value) => {setNewValueDuration(value.target.value)}}\n  //               endAdornment={\n  //                 <InputAdornment position=\"start\">\n  //                   hours  \n  //                 </InputAdornment>\n  //               }\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn_duration\"\n  //               onClick={() => plusClickDuration}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">PRICE</InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.settingsPanel, classes.formRow)}\n  //         >\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"minus_btn\"\n  //               onClick={() => minusClickPrice}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid item>\n  //             <Input\n  //               type=\"number\"\n  //               value={price}\n  //               //onChange={handleChange(\"amount\")}\n  //               onChange={(value) => {\n  //                 console.log(\"CHange Price: \", value)\n  //                 setNewValuePrice(value.target.value)\n  //               }}\n  //               startAdornment={\n  //                 <InputAdornment position=\"start\">\n  //                   {formValue.currency}\n  //                 </InputAdornment>\n  //               }\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <TextField\n  //               id=\"outlined-select-currency\"\n  //               select\n  //               //label=\"Select\"\n  //               value={formValue.currency}\n  //               onChange={handleChangeCurrency}\n  //               //helperText=\"Please select your currency\"\n  //               //variant=\"outlined\"\n  //             >\n  //               {currencies.map(option => (\n  //                 <MenuItem key={option.value} value={option.value}>\n  //                   {option.label}\n  //                 </MenuItem>\n  //               ))}\n  //             </TextField>\n  //           </Grid>\n\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn\"\n  //               onClick={() => plusClickPrice}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">CAPACITY</InputLabel>\n  //         <Grid container className={classes.formRow}>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               edge=\"start\"\n  //               id=\"minus_btn_capacity\"\n  //               onClick={() => minusClickCapacity}\n  //             >\n  //               <ArrowBackIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //           <Grid>\n  //             <TextField\n  //               value={capacity}\n  //               type=\"number\"\n  //               onChange={(value) => {\n  //                 setNewValueCapacity(value.target.value)\n  //               }}\n  //               InputProps={{\n  //                 startAdornment: (\n  //                   <InputAdornment position=\"start\">\n  //                     <AccountCircle />\n  //                   </InputAdornment>\n  //                 )\n  //               }}\n  //             />\n  //           </Grid>\n  //           <Grid item>\n  //             <IconButton\n  //               color=\"inherit\"\n  //               aria-label=\"open drawer\"\n  //               edge=\"start\"\n  //               id=\"plus_btn_capacity\"\n  //               onClick={() => plusClickCapacity}\n  //             >\n  //               <ArrowForwardIosIcon color=\"primary\" />\n  //             </IconButton>\n  //           </Grid>\n  //         </Grid>\n          \n  //         <InputLabel htmlFor=\"standard-adornment-amount\">BYO Event (guest can bring his own dring/snack)</InputLabel>\n  //         <FormControlLabel\n  //           className={classes.switchBYO}\n  //           control={\n  //             <Switch\n  //               //checked={formValue.checkedA}\n  //               onChange={handleChangeBYO}\n  //               checked={formValue.BYO}\n  //               inputRef={inputBYO}\n  //             />\n  //           }\n  //         />\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">\n  //           DESCRIPTION\n  //         </InputLabel>\n  //         <Grid\n  //           container\n  //           className={clsx(classes.formRow, classes.descriptionContainer)}\n  //         >\n  //           <Grid item className={classes.descriptionItem}>\n  //             <TextField\n  //               variant=\"outlined\"\n  //               margin=\"normal\"\n  //               required\n  //               fullWidth\n  //               id=\"decsription\"\n  //               placeholder=\"Example: Upon arrival, you will get welcome drink and some snacks will be ready on the balcony. Grill be ready too.\"\n  //               multiline\n  //               rows=\"4\"\n  //               inputRef={inputDescription}\n  //               //label=\"Description\"\n  //               name=\"decsription\"\n  //               autoComplete=\"false\" //improvisation, should be \"off\", or random \"string\"\n  //             />\n  //           </Grid>\n  //         </Grid>\n  //         <InputLabel htmlFor=\"standard-adornment-amount\">IMAGES</InputLabel>\n  //         <Grid\n  //           container\n  //           justify=\"center\"\n  //           alignContent=\"center\"\n  //           className={classes.formRow}\n  //         >\n  //           <Grid\n  //             item\n  //             className={clsx(classes.dropItem, classes.dropContainer)}\n  //           >\n  //            <p>{countOfFiles - formValue.ImagesArr.length}</p>\n  //             <Dropzone setFormValue={setFormValue} setCountOfFiles={setCountOfFiles}/>\n  //           </Grid>\n  //         </Grid>\n\n  //         {errorOut &&\n  //           errorOut.map(item => (\n  //             <Alert severity=\"error\" key={item.message}>\n  //               {item.message}\n  //             </Alert>\n  //           ))}\n\n  //         {FeErrors &&\n  //           FeErrors.map(item => (\n  //             <Alert severity=\"error\" key={item}>\n  //               {item} is empty\n  //             </Alert>\n  //           ))}\n\n  //         <Button\n  //           type=\"submit\"\n  //           fullWidth\n  //           variant=\"contained\"\n  //           color=\"primary\"\n  //           className={classes.submit}\n  //           onClick={e => onSubmit(e)}\n  //           // disabled={\n  //           //   formValue.ImagesArr && formValue.ImagesArr.length ? false : true\n  //           // }\n  //           disabled={loading}\n  //         >\n  //           {dataOut && <CloudDoneIcon />}\n  //           {loading && <Spinner hieght={20} width={20} />}\n  //           Create Party\n  //         </Button>\n  //       </form>\n  //     </Container>\n  //     <Box mt={8}>\n  //       <Copyright />\n  //     </Box>\n  //   </div>\n  // );\n}\n\nconst useStyles = makeStyles(theme => ({\n  profileWrap: {\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    // background:\n    //   \"linear-gradient(180deg, rgba(0,0,255,0.5) 30%, rgba(255,0,100,0.5) 100%)\"\n  },\n  paper1: {\n    marginTop: 66,\n    padding: 10,\n    paddingTop: 50,\n    paddingBottom: 0,\n    \n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    background: \"#E8045D\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"56px !important\"\n    }\n  },\n  paper: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    background: \"rgba(255,255,255,0.7)\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0\n  },\n\n  justDoIt: {\n    fontWeight: 200,\n    fontSize: 25,\n    letterSpacing: 12,\n    position: \"relative\",\n    top: 5,\n    marginBottom: 0\n  },\n  now: {\n    fontWeight: 700,\n    fontSize: 38,\n    letterSpacing: 3\n  },\n  inputName:{\n    background: \"rgba(255,255,255,0.9)\",\n    borderRadius: 5,\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,0.75)\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  pinkBack: {\n    width: \"100%\"\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: 200\n  },\n  formRow: {\n    marginTop: 10,\n    marginBottom: 40\n  },\n  switchBYO: {\n    marginBottom: \"20px\",\n    marginLeft: \"10px\"\n  },\n  descriptionContainer: {\n    width: \"100%\"\n  },\n  descriptionItem: {\n    width: \"100%\"\n  },\n  dropContainer: {\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.1)\",\n    minHeight: 150\n  },\n  dropItem: {\n    //width: \"100%\",\n    //background: \"rgba(0,0,0,0.1)\"\n  }\n}));\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}