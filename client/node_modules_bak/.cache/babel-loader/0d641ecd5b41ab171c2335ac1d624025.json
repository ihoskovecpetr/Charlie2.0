{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/MapAtom.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { GeolocationMarker } from 'geolocation-marker';\nlet scriptAdded = false;\n\nfunction Map({\n  options,\n  onMount,\n  className,\n  styling\n}) {\n  const ref = useRef();\n  console.log(\"Map Atom rerender\");\n  useEffect(() => {\n    const onLoad = () => {\n      if (typeof onMount === \"function\" && window.google) {\n        //const map = new window.google.maps.Map(ref.current, options);\n        const map = new window.google.maps.Map( //document.getElementById(\"map-create\"),\n        ref.current, options);\n        console.log(\"Looking or geolocmarker\");\n        var GeoMarker = new GeolocationMarker(map);\n        onMount(map);\n      }\n    };\n\n    if (!window.google && !scriptAdded) {\n      scriptAdded = true;\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = \"https://maps.googleapis.com/maps/api/js?key=\".concat(process.env.REACT_APP_GOOGLE_MAPS_API_KEY, \"&libraries=geometry,places\");\n      const headScript = document.getElementsByTagName(\"script\")[0];\n      headScript.parentNode.insertBefore(script, headScript);\n      script.addEventListener(\"load\", onLoad);\n      return () => {\n        return script.removeEventListener(\"load\", onLoad);\n      };\n    } else onLoad();\n  }, [onMount, options]);\n  return React.createElement(\"div\", Object.assign({\n    style: styling\n  }, {\n    ref,\n    className\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n} // Map.defaultProps = {\n//   options: {\n//     center: { lat: 50, lng: 15 },\n//     zoom: 5\n//   }\n// };\n\n\nexport default React.memo(Map);","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/MapAtom.js"],"names":["React","useEffect","useRef","GeolocationMarker","scriptAdded","Map","options","onMount","className","styling","ref","console","log","onLoad","window","google","map","maps","current","GeoMarker","script","document","createElement","type","src","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","headScript","getElementsByTagName","parentNode","insertBefore","addEventListener","removeEventListener","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA,IAAIC,WAAW,GAAG,KAAlB;;AACA,SAASC,GAAT,CAAa;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,CAAb,EAAuD;AACrD,QAAMC,GAAG,GAAGR,MAAM,EAAlB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,MAAM,GAAG,MAAM;AACnB,UAAI,OAAON,OAAP,mBAAiCO,MAAM,CAACC,MAA5C,EAAoD;AAClD;AACA,cAAMC,GAAG,GAAG,IAAIF,MAAM,CAACC,MAAP,CAAcE,IAAd,CAAmBZ,GAAvB,EACV;AACAK,QAAAA,GAAG,CAACQ,OAFM,EAGVZ,OAHU,CAAZ;AAKAK,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,YAAIO,SAAS,GAAG,IAAIhB,iBAAJ,CAAsBa,GAAtB,CAAhB;AAEAT,QAAAA,OAAO,CAACS,GAAD,CAAP;AACD;AACF,KAbD;;AAeA,QAAI,CAACF,MAAM,CAACC,MAAR,IAAkB,CAACX,WAAvB,EAAoC;AAClCA,MAAAA,WAAW,GAAG,IAAd;AACA,YAAMgB,MAAM,GAAGC,QAAQ,CAACC,aAAT,UAAf;AACAF,MAAAA,MAAM,CAACG,IAAP;AACAH,MAAAA,MAAM,CAACI,GAAP,yDAA4DC,OAAO,CAACC,GAAR,CAAYC,6BAAxE;AAEA,YAAMC,UAAU,GAAGP,QAAQ,CAACQ,oBAAT,WAAwC,CAAxC,CAAnB;AACAD,MAAAA,UAAU,CAACE,UAAX,CAAsBC,YAAtB,CAAmCX,MAAnC,EAA2CQ,UAA3C;AACAR,MAAAA,MAAM,CAACY,gBAAP,SAAgCnB,MAAhC;AACA,aAAO,MAAM;AACX,eAAOO,MAAM,CAACa,mBAAP,SAAmCpB,MAAnC,CAAP;AACD,OAFD;AAGD,KAZD,MAYOA,MAAM;AACd,GA7BQ,EA6BN,CAACN,OAAD,EAAUD,OAAV,CA7BM,CAAT;AA+BA,SACE;AACC,IAAA,KAAK,EAAEG;AADR,KAEM;AAAEC,IAAAA,GAAF;AAAOF,IAAAA;AAAP,GAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeR,KAAK,CAACkC,IAAN,CAAW7B,GAAX,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { GeolocationMarker } from 'geolocation-marker'\n\nlet scriptAdded = false;\nfunction Map({ options, onMount, className, styling }) {\n  const ref = useRef();\n  console.log(\"Map Atom rerender\")\n\n  useEffect(() => {\n    const onLoad = () => {\n      if (typeof onMount === `function` && window.google) {\n        //const map = new window.google.maps.Map(ref.current, options);\n        const map = new window.google.maps.Map(\n          //document.getElementById(\"map-create\"),\n          ref.current,\n          options\n        );\n        console.log(\"Looking or geolocmarker\")\n        var GeoMarker = new GeolocationMarker(map);\n\n        onMount(map);\n      }\n    };\n\n    if (!window.google && !scriptAdded) {\n      scriptAdded = true;\n      const script = document.createElement(`script`);\n      script.type = `text/javascript`;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=geometry,places`;\n\n      const headScript = document.getElementsByTagName(`script`)[0];\n      headScript.parentNode.insertBefore(script, headScript);\n      script.addEventListener(`load`, onLoad);\n      return () => {\n        return script.removeEventListener(`load`, onLoad);\n      }\n    } else onLoad();\n  }, [onMount, options]);\n\n  return (\n    <div\n     style={styling}\n      {...{ ref, className }}\n    ></div>\n  );\n}\n\n// Map.defaultProps = {\n//   options: {\n//     center: { lat: 50, lng: 15 },\n//     zoom: 5\n//   }\n// };\n\nexport default React.memo(Map);\n"]},"metadata":{},"sourceType":"module"}