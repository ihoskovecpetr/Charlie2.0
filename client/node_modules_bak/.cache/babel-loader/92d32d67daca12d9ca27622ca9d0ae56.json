{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nexport function useScrollY({\n  y\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayPlay = _useState2[0],\n        setDisplayPlay = _useState2[1];\n\n  const limit = y ? y : 450;\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.scrollY >= limit && !displayPlay) {\n        setDisplayPlay(true);\n      } else if (window.scrollY <= limit && displayPlay) {\n        setDisplayPlay(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleResize);\n    return () => {\n      window.removeEventListener(\"scroll\", handleResize);\n    };\n  });\n  const displayPlay_memo = useMemo(() => {\n    return displayPlay;\n  }, [displayPlay]);\n  return {\n    displayPlay_memo\n  };\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Hooks/useScrollY.js"],"names":["React","useState","useEffect","useMemo","useScrollY","y","displayPlay","setDisplayPlay","limit","handleResize","window","scrollY","addEventListener","removeEventListener","displayPlay_memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AAEC,OAAO,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAyB;AAAA,oBACOJ,QAAQ,CAAC,KAAD,CADf;AAAA;AAAA,QACxBK,WADwB;AAAA,QACXC,cADW;;AAG/B,QAAMC,KAAK,GAAGH,CAAC,GAAGA,CAAH,GAAO,GAAtB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,YAAY,GAAG,MAAM;AACzB,UAAGC,MAAM,CAACC,OAAP,IAAkBH,KAAlB,IAA2B,CAACF,WAA/B,EAA2C;AACzCC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAFD,MAEM,IAAGG,MAAM,CAACC,OAAP,IAAkBH,KAAlB,IAA2BF,WAA9B,EAA0C;AAC9CC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KAND;;AAQAG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACD,KAFD;AAGD,GAbQ,CAAT;AAeA,QAAMK,gBAAgB,GAAGX,OAAO,CAAC,MAAM;AACrC,WAAOG,WAAP;AACD,GAF+B,EAE7B,CAACA,WAAD,CAF6B,CAAhC;AAIA,SAAO;AAAEQ,IAAAA;AAAF,GAAP;AACD","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\n export function useScrollY({y}) {\n  const [displayPlay, setDisplayPlay] = useState(false);\n\n  const limit = y ? y : 450\n\n  useEffect(() => {\n    const handleResize = () => {\n      if(window.scrollY >= limit && !displayPlay){\n        setDisplayPlay(true)\n      }else if(window.scrollY <= limit && displayPlay){\n        setDisplayPlay(false)\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleResize);\n    return () => {\n      window.removeEventListener(\"scroll\", handleResize);\n    };\n  });\n\n  const displayPlay_memo = useMemo(() => {\n    return displayPlay;\n  }, [displayPlay]);\n\n  return { displayPlay_memo };\n}\n"]},"metadata":{},"sourceType":"module"}