{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nexport const usePosition = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        position = _useState2[0],\n        setPosition = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const onChange = ({\n    coords\n  }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = window.navigator.geolocation;\n\n    if (!geo) {\n      setError(\"Geolocation is not supported\");\n      return;\n    } //let watcher = geo.watchPosition(onChange, onError);\n\n\n    let watcher = geo.getCurrentPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return _objectSpread({}, position, {\n    error\n  });\n};\n\nfunction isBigger(prev, next) {\n  return prev.number === next.number || prev.number >= next.number; //   if (prev.number > next.number) {\n  //     return true; // Not rendering\n  //   }\n  //   return false;\n}\n\nexport const Memoized = React.memo(usePosition, isBigger); //export default Memoized;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Hooks/useGeolocation.js"],"names":["React","useState","useEffect","usePosition","position","setPosition","error","setError","onChange","coords","latitude","longitude","onError","message","geo","window","navigator","geolocation","watcher","getCurrentPosition","clearWatch","isBigger","prev","next","number","Memoized","memo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACCF,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QACxBG,QADwB;AAAA,QACdC,WADc;;AAAA,qBAELJ,QAAQ,CAAC,IAAD,CAFH;AAAA;AAAA,QAExBK,KAFwB;AAAA,QAEjBC,QAFiB;;AAI/B,QAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC/BJ,IAAAA,WAAW,CAAC;AACVK,MAAAA,QAAQ,EAAED,MAAM,CAACC,QADP;AAEVC,MAAAA,SAAS,EAAEF,MAAM,CAACE;AAFR,KAAD,CAAX;AAID,GALD;;AAMA,QAAMC,OAAO,GAAGN,KAAK,IAAI;AACvBC,IAAAA,QAAQ,CAACD,KAAK,CAACO,OAAP,CAAR;AACD,GAFD;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,GAAG,GAAGC,MAAM,CAACC,SAAP,CAAiBC,WAA7B;;AACA,QAAI,CAACH,GAAL,EAAU;AACRP,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD,KALa,CAMd;;;AACA,QAAIW,OAAO,GAAGJ,GAAG,CAACK,kBAAJ,CAAuBX,QAAvB,EAAiCI,OAAjC,CAAd;AACA,WAAO,MAAME,GAAG,CAACM,UAAJ,CAAeF,OAAf,CAAb;AACD,GATQ,EASN,EATM,CAAT;AAUA,2BAAYd,QAAZ;AAAsBE,IAAAA;AAAtB;AACD,CAxBM;;AA0BP,SAASe,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC5B,SAAOD,IAAI,CAACE,MAAL,KAAgBD,IAAI,CAACC,MAArB,IAA+BF,IAAI,CAACE,MAAL,IAAeD,IAAI,CAACC,MAA1D,CAD4B,CAE5B;AACA;AACA;AACA;AACD;;AACD,OAAO,MAAMC,QAAQ,GAAGzB,KAAK,CAAC0B,IAAN,CAAWvB,WAAX,EAAwBkB,QAAxB,CAAjB,C,CACP","sourcesContent":["import React, { useState, useEffect } from \"react\";\nexport const usePosition = () => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({ coords }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude\n    });\n  };\n  const onError = error => {\n    setError(error.message);\n  };\n  useEffect(() => {\n    const geo = window.navigator.geolocation;\n    if (!geo) {\n      setError(\"Geolocation is not supported\");\n      return;\n    }\n    //let watcher = geo.watchPosition(onChange, onError);\n    let watcher = geo.getCurrentPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return { ...position, error };\n};\n\nfunction isBigger(prev, next) {\n  return prev.number === next.number || prev.number >= next.number;\n  //   if (prev.number > next.number) {\n  //     return true; // Not rendering\n  //   }\n  //   return false;\n}\nexport const Memoized = React.memo(usePosition, isBigger);\n//export default Memoized;\n"]},"metadata":{},"sourceType":"module"}