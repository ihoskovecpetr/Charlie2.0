{"ast":null,"code":"import _defineProperty from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useCallback}from\"react\";import Grid from\"@material-ui/core/Grid\";import Avatar from\"@material-ui/core/Avatar\";import PersonAddIcon from\"@material-ui/icons/PersonAdd\";import CropFreeIcon from'@material-ui/icons/CropFree';import{useDropzone}from\"react-dropzone\";import Gallery from\"react-grid-gallery\";import request from\"superagent\";import WallpaperIcon from\"@material-ui/icons/Wallpaper\";import Spinner from\"../Atoms/Spinner\";var CLOUDINARY_UPLOAD_PRESET=\"simple-preset-1\";var CLOUDINARY_UPLOAD_URL=\"https://api.cloudinary.com/v1_1/party-images-app/upload\";var smallfile;var urlTumb;function MyDropzone(_ref){var formValue=_ref.formValue,setFormValue=_ref.setFormValue;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUploading=_useState2[0],setIsUploading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),uploadedFiles=_useState4[0],setUploadedFiles=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),display=_useState6[0],setDisplay=_useState6[1];var onDrop=useCallback(function(acceptedFiles){// Do something with the files\nsetIsUploading(true);acceptedFiles.map(function(file){handleImageUpload(file);});},[]);var _useDropzone=useDropzone({onDrop:onDrop}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps,isDragActive=_useDropzone.isDragActive;var handleImageUpload=function handleImageUpload(file){var width=200;var height=100;var fileName=file.name;var reader=new FileReader();reader.readAsDataURL(file);reader.onload=function(event){var img=document.createElement(\"img\");img.src=event.target.result;img.onload=function(){var elem=document.createElement(\"canvas\");var TumbWidth=img.width;var TumbHeight=img.height;if(img.width>200&&img.height>200){if(img.width>img.height){var hRatio=img.height/200;TumbWidth=img.width/hRatio;TumbHeight=200;}else if(img.width<img.height){var wRatio=img.width/200;TumbWidth=200;TumbHeight=img.height/wRatio;}}elem.width=TumbWidth;elem.height=TumbHeight;var ctx=elem.getContext(\"2d\");// img.width and img.height will contain the original dimensions\nctx.drawImage(img,0,0,TumbWidth,TumbHeight);ctx.canvas.toBlob(function(blob){smallfile=new File([blob],fileName,{type:\"image/jpeg\",lastModified:Date.now()});uploadingOneImg(smallfile,file);},\"image/jpeg\",1);};reader.onerror=function(error){return console.log(error);};};};var uploadingOneImg=function uploadingOneImg(imgTumb,imgFull){//var divider;\nvar upload=request.post(CLOUDINARY_UPLOAD_URL).field(\"upload_preset\",CLOUDINARY_UPLOAD_PRESET).field(\"file\",imgTumb);upload.end(function(err,response){if(err){console.error(err);window.alert(\"Problem with uploading your picture..\");}if(response.body.secure_url!==\"\"){urlTumb=response.body.secure_url;}var upload2=request.post(CLOUDINARY_UPLOAD_URL).field(\"upload_preset\",CLOUDINARY_UPLOAD_PRESET).field(\"file\",imgFull);upload2.end(function(err,response){if(err){window.alert(\"Problem with uploading your picture..\");}if(response.body.secure_url!==\"\"){var uplArr=uploadedFiles;uplArr.push({src:response.body.secure_url,thumbnail:urlTumb,thumbnailWidth:response.body.width,scaletwidth:100,thumbnailHeight:response.body.height,isSelected:false,caption:\"After Rain (Jeshu John - designerspics.com)\"});setUploadedFiles(_toConsumableArray(uplArr));setIsUploading(false);setDisplay(true);setFormValue(function(prevValues){return _objectSpread({},prevValues,{ImagesArr:uplArr,picture:urlTumb});});}});});};return React.createElement(React.Fragment,null,React.createElement(\"div\",Object.assign({},getRootProps(),{style:{padding:\"5px\",border:\"2px dashed grey\",cursor:\"pointer\"}}),React.createElement(\"input\",getInputProps()),urlTumb&&!isUploading?// <Avatar style={{ background: \"green\" }}>\n//   <CheckCircleOutlineIcon />\n// </Avatar>\nReact.createElement(Avatar,{alt:\"Remy Sharp\",src:formValue.picture,style:{height:100,width:100}}):null,!urlTumb&&!isUploading?React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\",style:{background:\"lightgrey\",height:100,width:100,borderRadius:5}},React.createElement(Grid,{item:true},formValue.picture?React.createElement(Avatar,{alt:\"Remy Sharp\",src:formValue.picture,style:{height:100,width:100}}):React.createElement(CropFreeIcon,{fontSize:\"large\"}))):null,isUploading?React.createElement(Spinner,{height:100,width:100}):null));}export default MyDropzone;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/DropzoneSignup.js"],"names":["React","useState","useCallback","Grid","Avatar","PersonAddIcon","CropFreeIcon","useDropzone","Gallery","request","WallpaperIcon","Spinner","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","smallfile","urlTumb","MyDropzone","formValue","setFormValue","isUploading","setIsUploading","uploadedFiles","setUploadedFiles","display","setDisplay","onDrop","acceptedFiles","map","file","handleImageUpload","getRootProps","getInputProps","isDragActive","width","height","fileName","name","reader","FileReader","readAsDataURL","onload","event","img","document","createElement","src","target","result","elem","TumbWidth","TumbHeight","hRatio","wRatio","ctx","getContext","drawImage","canvas","toBlob","blob","File","type","lastModified","Date","now","uploadingOneImg","onerror","error","console","log","imgTumb","imgFull","upload","post","field","end","err","response","window","alert","body","secure_url","upload2","uplArr","push","thumbnail","thumbnailWidth","scaletwidth","thumbnailHeight","isSelected","caption","prevValues","ImagesArr","picture","padding","border","cursor","background","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport CropFreeIcon from '@material-ui/icons/CropFree';\n\nimport { useDropzone } from \"react-dropzone\";\nimport Gallery from \"react-grid-gallery\";\nimport request from \"superagent\";\nimport WallpaperIcon from \"@material-ui/icons/Wallpaper\";\n\nimport Spinner from \"../Atoms/Spinner\";\n\nconst CLOUDINARY_UPLOAD_PRESET = \"simple-preset-1\";\nconst CLOUDINARY_UPLOAD_URL =\n  \"https://api.cloudinary.com/v1_1/party-images-app/upload\";\nlet smallfile;\nvar urlTumb;\n\nfunction MyDropzone({formValue, setFormValue}) {\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [display, setDisplay] = useState(false);\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n\n    setIsUploading(true);\n\n    acceptedFiles.map(file => {\n      handleImageUpload(file);\n    });\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  const handleImageUpload = file => {\n    const width = 200;\n    const height = 100;\n    const fileName = file.name;\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = event => {\n      const img = document.createElement(\"img\");\n      img.src = event.target.result;\n\n      img.onload = () => {\n        const elem = document.createElement(\"canvas\");\n\n        let TumbWidth = img.width;\n        let TumbHeight = img.height;\n\n        if (img.width > 200 && img.height > 200) {\n          if (img.width > img.height) {\n            let hRatio = img.height / 200;\n            TumbWidth = img.width / hRatio;\n            TumbHeight = 200;\n          } else if (img.width < img.height) {\n            let wRatio = img.width / 200;\n            TumbWidth = 200;\n            TumbHeight = img.height / wRatio;\n          }\n        }\n\n        elem.width = TumbWidth;\n        elem.height = TumbHeight;\n        const ctx = elem.getContext(\"2d\");\n        // img.width and img.height will contain the original dimensions\n        ctx.drawImage(img, 0, 0, TumbWidth, TumbHeight);\n        ctx.canvas.toBlob(\n          blob => {\n            smallfile = new File([blob], fileName, {\n              type: \"image/jpeg\",\n              lastModified: Date.now()\n            });\n            uploadingOneImg(smallfile, file);\n          },\n          \"image/jpeg\",\n          1\n        );\n      };\n      reader.onerror = error => console.log(error);\n    };\n  };\n\n  const uploadingOneImg = (imgTumb, imgFull) => {\n    //var divider;\n    var upload = request\n      .post(CLOUDINARY_UPLOAD_URL)\n      .field(\"upload_preset\", CLOUDINARY_UPLOAD_PRESET)\n      .field(\"file\", imgTumb);\n    upload.end((err, response) => {\n      if (err) {\n        console.error(err);\n        window.alert(\"Problem with uploading your picture..\");\n      }\n\n      if (response.body.secure_url !== \"\") {\n        urlTumb = response.body.secure_url;\n      }\n\n      var upload2 = request\n        .post(CLOUDINARY_UPLOAD_URL)\n        .field(\"upload_preset\", CLOUDINARY_UPLOAD_PRESET)\n        .field(\"file\", imgFull);\n      upload2.end((err, response) => {\n        if (err) {\n          window.alert(\"Problem with uploading your picture..\");\n        }\n        if (response.body.secure_url !== \"\") {\n          var uplArr = uploadedFiles;\n          uplArr.push({\n            src: response.body.secure_url,\n            thumbnail: urlTumb,\n            thumbnailWidth: response.body.width,\n            scaletwidth: 100,\n            thumbnailHeight: response.body.height,\n            isSelected: false,\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n          });\n\n          setUploadedFiles([...uplArr]);\n          setIsUploading(false);\n          setDisplay(true);\n          setFormValue(prevValues => {\n            return { ...prevValues, ImagesArr: uplArr, picture: urlTumb };\n          });\n        }\n      });\n    });\n  };\n\n  return (\n    <>\n      <div {...getRootProps()} style={{ padding: \"5px\", border: \"2px dashed grey\", cursor: \"pointer\"}}>\n        <input {...getInputProps()} />\n        {urlTumb && !isUploading ? (\n          // <Avatar style={{ background: \"green\" }}>\n          //   <CheckCircleOutlineIcon />\n          // </Avatar>\n          <Avatar\n            alt=\"Remy Sharp\"\n            src={formValue.picture}\n            style={{ height: 100, width: 100 }}\n          ></Avatar>\n        ) : null}\n        {!urlTumb && !isUploading ? (\n          <Grid container justify='center' alignItems='center' style={{ background: \"lightgrey\", height: 100, width: 100, borderRadius: 5 }}>\n            <Grid item>\n              {formValue.picture ? <Avatar\n                alt=\"Remy Sharp\"\n                src={formValue.picture}\n                style={{ height: 100, width: 100 }}\n              ></Avatar>\n              : <CropFreeIcon fontSize=\"large\" />} \n            </Grid>\n          </Grid>\n        ) : null}\n        {isUploading ? <Spinner height={100} width={100} /> : null}\n      </div>\n    </>\n  );\n}\n\nexport default MyDropzone;\n"]},"metadata":{},"sourceType":"module"}