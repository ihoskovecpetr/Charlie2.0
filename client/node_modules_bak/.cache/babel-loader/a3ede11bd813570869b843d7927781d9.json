{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/event/ConfirmedGuest.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { NavLink } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ALL_EVENTS, CANCELLING_BOOKING } from \"../../Services/GQL\";\n\nfunction ConfirmedGuest({\n  event,\n  bookings,\n  GQL_refetch,\n  refetchVariables\n}) {\n  const classes = useStyles();\n\n  const _useMutation = useMutation(CANCELLING_BOOKING),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        cancellingMutation = _useMutation2[0],\n        cancellingState = _useMutation2[1];\n\n  let countGuests = 0;\n  let overFlowGst = false;\n  let leftoverGst = [];\n  console.log(\"ConfirmedGuest, bookings: \", bookings);\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    direction: \"row\",\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, event && event.areYouAuthor ? //\n  React.createElement(React.Fragment, null, bookings && bookings.map((booking, index) => booking.confirmed && !booking.cancelled && React.createElement(Grid, {\n    item: true,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, cancellingState && cancellingState.loading && React.createElement(Chip, {\n    className: classes.chip,\n    avatar: React.createElement(Avatar, {\n      alt: booking.user.name,\n      src: booking.user.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"M\"),\n    label: \"Deleting...\",\n    color: \"primary\",\n    variant: \"outlined\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), cancellingState && !cancellingState.loading && React.createElement(Chip, {\n    className: classes.chip,\n    avatar: React.createElement(Avatar, {\n      alt: booking.user.name,\n      src: booking.user.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"M\"),\n    label: booking.user.name,\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: () => console.log(\"XX\"),\n    onDelete: () => {\n      cancellingMutation({\n        variables: {\n          user_id: booking.user._id,\n          event_id: event._id\n        },\n        refetchQueries: () => [{\n          query: GQL_refetch,\n          variables: _objectSpread({\n            id: event._id\n          }, refetchVariables)\n        }, {\n          query: ALL_EVENTS,\n          variables: {\n            date: new Date(event.dateStart).toISOString().split(\"T\")[0]\n          }\n        }]\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), cancellingState && !cancellingState.loading && event && !event.areYouAuthor && React.createElement(Chip, {\n    className: classes.chip,\n    avatar: React.createElement(Avatar, {\n      alt: booking.user.name,\n      src: booking.user.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"User\"),\n    label: booking.user.name,\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: () => console.log(\"XX\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))) : React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(AvatarGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, bookings && bookings.map((booking, index) => {\n    if (booking.confirmed) {\n      countGuests++;\n\n      if (index <= 4) {\n        return React.createElement(NavLink, {\n          to: \"/user/\".concat(booking.user._id),\n          className: classes.noBorder,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          src: booking.user.picture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }));\n      } else {\n        overFlowGst = true;\n        leftoverGst.push(booking.user.name);\n      }\n    } else {\n      return null;\n    }\n  }), overFlowGst && React.createElement(Tooltip, {\n    title: leftoverGst.map(name => \"\".concat(name, \" \\u2022 \")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"+\", countGuests - 5))))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    paddingLeft: 10\n  },\n  chip: {},\n  noBorder: {\n    border: \"0px solid black\"\n  }\n}));\nexport default ConfirmedGuest;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Molecules/event/ConfirmedGuest.js"],"names":["React","makeStyles","Grid","Chip","Avatar","AvatarGroup","Tooltip","NavLink","useMutation","ALL_EVENTS","CANCELLING_BOOKING","ConfirmedGuest","event","bookings","GQL_refetch","refetchVariables","classes","useStyles","cancellingMutation","cancellingState","countGuests","overFlowGst","leftoverGst","console","log","mainContainer","areYouAuthor","map","booking","index","confirmed","cancelled","loading","chip","user","name","picture","variables","user_id","_id","event_id","refetchQueries","query","id","date","Date","dateStart","toISOString","split","noBorder","push","theme","paddingLeft","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ALL_EVENTS, CANCELLING_BOOKING } from \"../../Services/GQL\";\n\n\nfunction ConfirmedGuest({event, bookings, GQL_refetch, refetchVariables}) {\n  const classes = useStyles();\n  const [cancellingMutation, cancellingState] = useMutation(CANCELLING_BOOKING);\n\n  let countGuests = 0;\n  let overFlowGst = false;\n  let leftoverGst = [];\n\n  console.log(\"ConfirmedGuest, bookings: \", bookings,);\n\n  return (\n    <Grid container justify=\"flex-start\" alignItems=\"center\" direction=\"row\" className={classes.mainContainer}>\n      {event && event.areYouAuthor ? ( //\n        <>\n          {bookings && bookings.map((booking, index) => \n            booking.confirmed && !booking.cancelled && <Grid item key={index}>\n                    {cancellingState && cancellingState.loading && (\n                      <Chip\n                        className={classes.chip}\n                        avatar={\n                          <Avatar\n                            alt={booking.user.name}\n                            src={booking.user.picture}\n                          >\n                            M\n                          </Avatar>\n                        }\n                        label=\"Deleting...\"\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        disabled\n                      />\n                    )}\n                    {cancellingState && !cancellingState.loading && (\n                      <Chip\n                        className={classes.chip}\n                        avatar={\n                          <Avatar\n                            alt={booking.user.name}\n                            src={booking.user.picture}\n                          >\n                            M\n                          </Avatar>\n                        }\n                        label={booking.user.name}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={() => console.log(\"XX\")}\n                        onDelete={() => {\n                          cancellingMutation({\n                            variables: {\n                              user_id: booking.user._id,\n                              event_id: event._id\n                            },\n                            refetchQueries: () => [\n                              {\n                                query: GQL_refetch,\n                                variables: { id: event._id, ...refetchVariables }\n                              },\n                              {\n                                query: ALL_EVENTS,\n                                variables: {\n                                  date: new Date(event.dateStart)\n                                    .toISOString()\n                                    .split(\"T\")[0]\n                                }\n                              }\n                            ]\n                          });\n                        }}\n                      />\n                    )}\n                    {cancellingState && !cancellingState.loading && event &&\n                      !event.areYouAuthor && (\n                        <Chip\n                          className={classes.chip}\n                          avatar={\n                            <Avatar\n                              alt={booking.user.name}\n                              src={booking.user.picture}\n                            >\n                              User\n                            </Avatar>\n                          }\n                          label={booking.user.name}\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          onClick={() => console.log(\"XX\")}\n                        />\n                      )}\n                  </Grid>\n   )}\n        </>\n      ) : (\n        <Grid container>\n          <Grid item>\n            <AvatarGroup>\n              {bookings && bookings.map((booking, index) => {\n                if (booking.confirmed) {\n                  countGuests++;\n                  if (index <= 4) {\n                    return (\n                      <NavLink\n                        to={`/user/${booking.user._id}`}\n                        className={classes.noBorder}\n                        key={index}\n                      >\n                        <Avatar alt=\"Remy Sharp\" src={booking.user.picture} />\n                      </NavLink>\n                    );\n                  } else {\n                    overFlowGst = true;\n                    leftoverGst.push(booking.user.name);\n                  }\n                } else {\n                  return null;\n                }\n              })}\n              {overFlowGst && (\n                <Tooltip title={leftoverGst.map(name => `${name} • `)}>\n                  <Avatar>+{countGuests - 5}</Avatar>\n                </Tooltip>\n              )}\n            </AvatarGroup>\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    paddingLeft: 10\n  },\n  chip: {},\n  noBorder: {\n    border: \"0px solid black\"\n  }\n}));\n\nexport default ConfirmedGuest;\n"]},"metadata":{},"sourceType":"module"}