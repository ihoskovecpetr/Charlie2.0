{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useMemo}from\"react\";export function useScrollY(_ref){var y=_ref.y;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),displayPlay=_useState2[0],setDisplayPlay=_useState2[1];var limit=y?y:450;useEffect(function(){var handleResize=function handleResize(){if(window.scrollY>=limit&&!displayPlay){setDisplayPlay(true);}else if(window.scrollY<=limit&&displayPlay){setDisplayPlay(false);}};window.addEventListener(\"scroll\",handleResize);return function(){window.removeEventListener(\"scroll\",handleResize);};});var displayPlay_memo=useMemo(function(){return displayPlay;},[displayPlay]);return{displayPlay_memo:displayPlay_memo};}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Hooks/useScrollY.js"],"names":["React","useState","useEffect","useMemo","useScrollY","y","displayPlay","setDisplayPlay","limit","handleResize","window","scrollY","addEventListener","removeEventListener","displayPlay_memo"],"mappings":"qIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,OAArC,KAAoD,OAApD,CAEC,MAAO,SAASC,CAAAA,UAAT,MAAyB,IAAJC,CAAAA,CAAI,MAAJA,CAAI,eACOJ,QAAQ,CAAC,KAAD,CADf,wCACxBK,WADwB,eACXC,cADW,eAG/B,GAAMC,CAAAA,KAAK,CAAGH,CAAC,CAAGA,CAAH,CAAO,GAAtB,CAEAH,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAGC,MAAM,CAACC,OAAP,EAAkBH,KAAlB,EAA2B,CAACF,WAA/B,CAA2C,CACzCC,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,IAEM,IAAGG,MAAM,CAACC,OAAP,EAAkBH,KAAlB,EAA2BF,WAA9B,CAA0C,CAC9CC,cAAc,CAAC,KAAD,CAAd,CACD,CACF,CAND,CAQAG,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,YAAlC,EACA,MAAO,WAAM,CACXC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCJ,YAArC,EACD,CAFD,CAGD,CAbQ,CAAT,CAeA,GAAMK,CAAAA,gBAAgB,CAAGX,OAAO,CAAC,UAAM,CACrC,MAAOG,CAAAA,WAAP,CACD,CAF+B,CAE7B,CAACA,WAAD,CAF6B,CAAhC,CAIA,MAAO,CAAEQ,gBAAgB,CAAhBA,gBAAF,CAAP,CACD","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\n export function useScrollY({y}) {\n  const [displayPlay, setDisplayPlay] = useState(false);\n\n  const limit = y ? y : 450\n\n  useEffect(() => {\n    const handleResize = () => {\n      if(window.scrollY >= limit && !displayPlay){\n        setDisplayPlay(true)\n      }else if(window.scrollY <= limit && displayPlay){\n        setDisplayPlay(false)\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleResize);\n    return () => {\n      window.removeEventListener(\"scroll\", handleResize);\n    };\n  });\n\n  const displayPlay_memo = useMemo(() => {\n    return displayPlay;\n  }, [displayPlay]);\n\n  return { displayPlay_memo };\n}\n"]},"metadata":{},"sourceType":"module"}