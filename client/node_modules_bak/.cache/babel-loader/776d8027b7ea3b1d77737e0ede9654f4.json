{"ast":null,"code":"import _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Profile/EventCardProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport Badge from '@material-ui/core/Badge';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\"; // import countdown from \"countdown\";\n// import { withRouter, useHistory, NavLink } from \"react-router-dom\";\n// import { useMutation } from \"@apollo/react-hooks\";\n// import gql from \"graphql-tag\";\n\nimport { useXsSize } from \"../../Hooks/useXsSize\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\nimport { UserContext } from \"../../userContext\";\nimport PlayListWrap from \"./PlayListWrap\";\nimport PlayPageGallery from \"../../Molecules/play/PlayPageGallery\";\nimport PlayPageMap from \"../../Molecules/play/PlayPageMap\";\nimport PartyOn from \"src/Atoms/PartyOn\";\nimport EventButtons from \"src/Molecules/event/EventButtons\";\nexport default function EventCardProfile({\n  event\n}) {\n  const classes = useStyles();\n\n  const _useXsSize = useXsSize(),\n        xs_size_memo = _useXsSize.xs_size_memo,\n        md_size_memo = _useXsSize.md_size_memo;\n\n  const _useCountdown = useCountdown(event.dateStart, 1),\n        counteddownDate = _useCountdown.counteddownDate;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  const inputDescription = useRef(null);\n  useEffect(() => {\n    if (context.expanded_id === event._id) {\n      setExpanded(true);\n    } else {\n      setExpanded(false);\n    }\n  }, [context.expanded_id]);\n\n  const handleExpandClick = () => {\n    console.log(\"event._id: \", event._id);\n\n    if (context.expanded_id === event._id) {\n      setContext(prev => {\n        return _objectSpread({}, prev, {\n          expanded_id: null\n        });\n      });\n    } else {\n      setContext(prev => {\n        return _objectSpread({}, prev, {\n          expanded_id: event._id\n        });\n      });\n    }\n  };\n\n  let bgColor = \"transparent\";\n\n  if (event.happeningNow) {\n    bgColor = \"transparent\";\n  } else if (expanded) {\n    if (md_size_memo) {\n      bgColor = \"rgba(0,0,0,0.1)\";\n    } else {\n      bgColor = \"transparent\"; //\"rgba(0,0,0,0.05)\"\n    }\n  }\n\n  let badgeContent;\n\n  if (event.decided) {\n    if (event.confirmed) {\n      badgeContent = React.createElement(DoneIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    } else {\n      badgeContent = React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }); //\"rgba(0,0,0,0.05)\"\n    }\n  } else {\n    badgeContent = React.createElement(FiberManualRecordIcon, {\n      fontSize: \"small\",\n      className: classes.dotBadge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n  badgeContent = React.createElement(Avatar, {\n    src: event.author.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n  return React.createElement(Grid, {\n    item: true,\n    className: classes.mainItem,\n    style: {\n      // boxShadow: expanded ? \"4px 3px 5px 0px rgba(0,0,0,0.5)\" : \"none\",\n      color: md_size_memo ? \"white\" : \"black\",\n      width: xs_size_memo ? \"100%\" : \"86%\",\n      backgroundColor: bgColor,\n      //expanded ? bgColor : \"transparent\",\n      borderBottom: xs_size_memo ? \"1px solid white\" : \"2px solid lightGrey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    onClick: handleExpandClick,\n    alignItems: \"center\",\n    className: classes.mainSolidLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: xs_size_memo ? 4 : 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.itemAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    badgeContent: badgeContent,\n    className: classes.badge //color={event ? \"primary\" : \"secondary\"}\n    // style={{ backgroundColor: event.decided ? \"grey\" : \"red\"}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: event.imagesArr[0].thumbnail,\n    className: classes.mainAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: xs_size_memo ? 8 : 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"left\",\n    className: classes.mainHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, event.name), \" hosted by \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, event.author.name)), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"left\",\n    className: classes.countdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Start \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, counteddownDate))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.partyOnGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, event.happeningNow && React.createElement(PartyOn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })))), !xs_size_memo && React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    style: {\n      transition: \"transform .1s ease-in-out\",\n      transform: expanded ? \"rotate(-180deg)\" : \"rotate(0deg)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })))))), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(PlayPageGallery, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(PlayListWrap, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(PlayPageMap, {\n    event: event,\n    paddingSides: \"0px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(EventButtons, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"settings\",\n    style: {\n      backgroundColor: \"lightGrey\",\n      margin: 5\n    },\n    onClick: handleExpandClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(ExpandLessIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }))))));\n}\nconst useStyles = makeStyles(theme => ({\n  mainItem: {// borderRadius: 15,\n    // borderBottom: \"3px solid white\" //#707070\n    // margin: 10,\n    // padding: 10\n  },\n  mainSolidLine: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  leftMiddleItem: {},\n  middleBody: {},\n  mainHeader: {\n    fontSize: 16,\n    marginLeft: 20,\n    marginRight: 20\n  },\n  countdown: {\n    marginTop: 10,\n    fontWeight: 400,\n    color: \"grey\",\n    marginLeft: 20\n  },\n  partyOnGrid: {\n    marginTop: 10\n  },\n  badge: {\n    padding: '0 important'\n  },\n  dotBadge: {\n    height: 15,\n    width: 15\n  },\n  userAvatar: {\n    backgroundColor: red[500],\n    height: 80,\n    width: 80\n  },\n  btnContainer: {\n    marginBottom: 5,\n    marginTop: 10\n  },\n  textField: {},\n  textFieldCont: {\n    margin: 10\n  },\n  btnWrapLeft: {\n    borderRight: \"1px solid #707070\"\n  },\n  btn: {// height: 50,\n    // width: \"50%\"\n  },\n  itemAvatar: {},\n  mainAvatar: {\n    height: 90,\n    width: 90\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  },\n  thisLine: {\n    height: \"1px\",\n    width: \"100%\",\n    marginTop: \"2px\",\n    backgroundColor: \"#707070\"\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Atoms/Profile/EventCardProfile.js"],"names":["React","useState","useRef","useContext","useEffect","makeStyles","Grid","Avatar","IconButton","ExpandMoreIcon","ExpandLessIcon","DoneIcon","CloseIcon","FiberManualRecordIcon","Badge","Collapse","Typography","red","useXsSize","useCountdown","UserContext","PlayListWrap","PlayPageGallery","PlayPageMap","PartyOn","EventButtons","EventCardProfile","event","classes","useStyles","xs_size_memo","md_size_memo","dateStart","counteddownDate","expanded","setExpanded","context","setContext","inputDescription","expanded_id","_id","handleExpandClick","console","log","prev","bgColor","happeningNow","badgeContent","decided","confirmed","dotBadge","author","picture","mainItem","color","width","backgroundColor","borderBottom","mainSolidLine","itemAvatar","badge","imagesArr","thumbnail","mainAvatar","mainHeader","name","countdown","partyOnGrid","transition","transform","margin","theme","marginTop","marginBottom","leftMiddleItem","middleBody","fontSize","marginLeft","marginRight","fontWeight","padding","height","userAvatar","btnContainer","textField","textFieldCont","btnWrapLeft","borderRight","btn","btnAvatar","thisLine"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport Badge from '@material-ui/core/Badge';\n\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\n\n// import countdown from \"countdown\";\n// import { withRouter, useHistory, NavLink } from \"react-router-dom\";\n// import { useMutation } from \"@apollo/react-hooks\";\n// import gql from \"graphql-tag\";\n\nimport { useXsSize } from \"../../Hooks/useXsSize\";\nimport { useCountdown } from \"src/Hooks/useCountdown\";\nimport { UserContext } from \"../../userContext\";\n\nimport PlayListWrap from \"./PlayListWrap\";\nimport PlayPageGallery from \"../../Molecules/play/PlayPageGallery\";\nimport PlayPageMap from \"../../Molecules/play/PlayPageMap\";\nimport PartyOn from \"src/Atoms/PartyOn\";\nimport EventButtons from \"src/Molecules/event/EventButtons\";\n\n\nexport default function EventCardProfile({ event }) {\n  const classes = useStyles();\n  const { xs_size_memo, md_size_memo } = useXsSize();\n  const { counteddownDate } = useCountdown(event.dateStart, 1)\n  const [expanded, setExpanded] = useState(false);\n  const { context, setContext } = useContext(UserContext);\n\n  const inputDescription = useRef(null);\n\n  useEffect(() => {\n    if(context.expanded_id === event._id){\n      setExpanded(true)\n    }else{\n      setExpanded(false)\n    }\n  }, [context.expanded_id])\n\n  const handleExpandClick = () => {\n\n    console.log(\"event._id: \", event._id)\n\n    if(context.expanded_id === event._id){\n      setContext(prev => {\n        return { ...prev, \n          expanded_id: null\n        };\n        })\n    } else{\n          setContext(prev => {\n            return { ...prev, \n              expanded_id: event._id\n            };\n        })\n    }\n  };\n\n  let bgColor = \"transparent\"\n  if(event.happeningNow){\n    bgColor = \"transparent\"\n  }else if(expanded){\n    if(md_size_memo){\n      bgColor = \"rgba(0,0,0,0.1)\"\n    } else {\n      bgColor = \"transparent\" //\"rgba(0,0,0,0.05)\"\n    }\n  }\n\nlet badgeContent \nif(event.decided){\n    if(event.confirmed){\n      badgeContent =  <DoneIcon fontSize=\"small\" />\n    } else {\n      badgeContent =  <CloseIcon fontSize=\"small\" /> //\"rgba(0,0,0,0.05)\"\n    }\n  } else {\n    badgeContent = <FiberManualRecordIcon fontSize=\"small\" className={classes.dotBadge} /> \n  }\n  badgeContent = <Avatar src={event.author.picture} />\n\n\n  return (\n    <Grid\n      item\n      className={classes.mainItem}\n      style={{\n        // boxShadow: expanded ? \"4px 3px 5px 0px rgba(0,0,0,0.5)\" : \"none\",\n        color: md_size_memo ? \"white\" : \"black\",\n        width: xs_size_memo ? \"100%\" : \"86%\",\n        backgroundColor: bgColor, //expanded ? bgColor : \"transparent\",\n        borderBottom: xs_size_memo ? \"1px solid white\" : \"2px solid lightGrey\"\n      }}\n    >\n      <Grid\n        container\n        onClick={handleExpandClick}\n        alignItems=\"center\"\n        className={classes.mainSolidLine}\n      >\n        <Grid item xs={xs_size_memo ? 4 : 3}>\n          <Grid container justify=\"center\">\n            <Grid item className={classes.itemAvatar}>\n              <IconButton aria-label=\"settings\">\n                <Badge badgeContent={badgeContent} \n                        className={classes.badge} \n                        //color={event ? \"primary\" : \"secondary\"}\n                        // style={{ backgroundColor: event.decided ? \"grey\" : \"red\"}}\n                        >\n                  <img\n                    src={event.imagesArr[0].thumbnail}\n                    className={classes.mainAvatar}\n                  />\n                </Badge>\n              </IconButton>\n            </Grid>\n\n          </Grid>\n        </Grid>\n\n        <Grid item xs={xs_size_memo ? 8 : 7}>\n          <Typography\n            variant=\"body2\"\n            align=\"left\"\n            className={classes.mainHeader}\n          >\n            <b>{event.name}</b> hosted by <b>{event.author.name}</b>\n          </Typography>\n          <Grid container>\n          <Grid item xs={6}>\n          <Typography\n            variant=\"body2\"\n            align=\"left\"\n            className={classes.countdown}\n          >\n           Start <b>{counteddownDate}</b>\n          </Typography>\n          </Grid>\n          <Grid item xs={6} className={classes.partyOnGrid}>\n            {event.happeningNow && <PartyOn />}\n          </Grid>\n          </Grid>\n        </Grid>\n\n        {!xs_size_memo && (\n          <Grid item xs={2}>\n            <Grid container justify=\"center\">\n              <Grid\n                item\n                style={{\n                  transition: \"transform .1s ease-in-out\",\n                  transform: expanded ? \"rotate(-180deg)\" : \"rotate(0deg)\"\n                }}\n              >\n                <IconButton aria-label=\"settings\">\n                  <ExpandMoreIcon fontSize=\"large\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n\n          <PlayPageGallery event={event} />\n          <PlayListWrap\n              event={event}\n            />\n          <PlayPageMap\n              event={event}\n              paddingSides={\"0px\"}\n            /> \n            <EventButtons\n                event={event}\n              />\n            <Grid container justify=\"center\">\n              <Grid\n                item\n              >\n                <IconButton\n                      aria-label=\"settings\" \n                      style={{backgroundColor: \"lightGrey\",margin: 5}}\n                      onClick={handleExpandClick}>\n                  <ExpandLessIcon fontSize=\"large\" />\n                </IconButton>\n            </Grid>\n          </Grid>\n\n      </Collapse>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  mainItem: {\n    // borderRadius: 15,\n    // borderBottom: \"3px solid white\" //#707070\n    // margin: 10,\n    // padding: 10\n  },\n  mainSolidLine: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  leftMiddleItem: {},\n  middleBody: {},\n  mainHeader: {\n    fontSize: 16,\n    marginLeft: 20,\n    marginRight: 20\n  },\n  countdown: {\n    marginTop: 10,\n    fontWeight: 400,\n    color: \"grey\",\n    marginLeft: 20\n  },\n  partyOnGrid: {\n    marginTop: 10\n  },\n  badge: {\n    padding: '0 important'\n  },\n  dotBadge: {\n    height: 15,\n    width: 15\n  },\n  userAvatar: {\n    backgroundColor: red[500],\n    height: 80,\n    width: 80\n  },\n  btnContainer: {\n    marginBottom: 5,\n    marginTop: 10\n  },\n  textField: {},\n  textFieldCont: {\n    margin: 10\n  },\n  btnWrapLeft: {\n    borderRight: \"1px solid #707070\"\n  },\n  btn: {\n    // height: 50,\n    // width: \"50%\"\n  },\n  itemAvatar: {\n\n  },\n  mainAvatar: {\n    height: 90,\n    width: 90\n  },\n  btnAvatar: {\n    height: 20,\n    width: 20\n  },\n  thisLine: {\n    height: \"1px\",\n    width: \"100%\",\n    marginTop: \"2px\",\n    backgroundColor: \"#707070\"\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}