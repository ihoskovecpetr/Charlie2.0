{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/MapPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-undef */\nimport ReactDOM from \"react-dom\";\nimport React, { useContext, useState, useRef, useEffect, useMemo, useCallback } from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, HttpLink, split, gql } from \"apollo-boost\";\nimport { BatchHttpLink } from \"apollo-link-batch-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { setContext } from \"apollo-link-context\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"date-fns\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"src/userContext\";\nimport mapSetup from \"../Services/map-settings\";\nimport { ALL_EVENTS } from \"../Services/GQL\";\nimport Map from \"../Atoms/MapAtom\";\nimport InfoWindow from \"../Molecules/Infowindow\";\nimport MapSettingsPanel from \"../Molecules/MapSettingsPanel\";\nimport DrawerWrap from 'src/Molecules/map/DrawerWrap';\nlet infoBubble;\nlet previousMarker;\nlet AllMarkersArr;\nlet MapObject;\nlet GeolocationMarkerLib;\n\nif (google) {\n  // import { GeolocationMarker } from 'geolocation-marker'\n  GeolocationMarkerLib = require('geolocation-marker');\n}\n\nvar GQL_ENDPOINT = \"http://localhost:4005/graphql\";\n\nif (process.env.NODE_ENV == \"production\") {\n  GQL_ENDPOINT = \"https://\".concat(window.location.host, \"/graphql\");\n}\n\nconst httpLink = new BatchHttpLink({\n  uri: GQL_ENDPOINT,\n  headers: {\n    authorization: window.localStorage.getItem(\"token\")\n  }\n});\nvar WS_ENDPOINT = \"ws://localhost:4005/subs\";\n\nif (process.env.NODE_ENV == \"production\") {\n  WS_ENDPOINT = \"wss://\".concat(window.location.host, \"/subs\");\n}\n\nconst wsLink = new WebSocketLink({\n  uri: WS_ENDPOINT,\n  options: {\n    reconnect: true\n  }\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // get the authentication token from local storage if it exists\n  const token = window.localStorage.getItem(\"token\"); // return the headers to the context so httpLink can read them\n\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: \"Bearer \".concat(token)\n    })\n  };\n});\nconst link = split(({\n  query\n}) => {\n  const _getMainDefinition = getMainDefinition(query),\n        kind = _getMainDefinition.kind,\n        operation = _getMainDefinition.operation;\n\n  return kind === \"OperationDefinition\" && operation === \"subscription\";\n}, wsLink, authLink.concat(httpLink));\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      fetchPolicy: \"network-only\",\n      errorPolicy: \"all\"\n    }\n  }\n});\n\nfunction MapPage(props) {\n  const classes = useStyles();\n  let history = useHistory(); // const windowSize = useWindowSize()\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        windowHeight = _useState2[0],\n        setWindowHeight = _useState2[1];\n\n  const _useState3 = useState({\n    center: props.workingPosition && props.workingPosition.geometry ? props.workingPosition.geometry : {\n      lat: 50.068645,\n      lng: 14.457364\n    },\n    // ,\n    zoom: props.workingPosition && props.workingPosition.zoom ? props.workingPosition.zoom : 10,\n    disableDefaultUI: true,\n    zoomControl: true,\n    //mapTypeId: window.google.maps.MapTypeId.ROADMAP,\n    clickableIcons: false,\n    gestureHandling: \"cooperative\",\n    backgroundColor: \"#242323\",\n    styles: mapSetup\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mapOptions = _useState4[0],\n        setMapOptions = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        openDrawer = _useState6[0],\n        setOpenDrawer = _useState6[1];\n\n  const _useContext = useContext(UserContext),\n        context = _useContext.context,\n        setContext = _useContext.setContext;\n\n  const _useQuery = useQuery(ALL_EVENTS, {\n    variables: {\n      date: props.workingPosition && props.workingPosition.date ? props.workingPosition.date : new Date().toISOString().split(\"T\")[0],\n      offset: 1,\n      limit: 1\n    },\n    fetchPolicy: \"cache-and-network\"\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data,\n        fetchMore = _useQuery.fetchMore;\n\n  console.log(\"RERENDER MAP PAGE: openDrawer\", openDrawer);\n  useEffect(() => {\n    // if (!window.AppHistory) {\n    //   window.AppHistory = history;\n    // }\n    console.log(\"Map.js rerendering\");\n    setWindowHeight(window.innerHeight);\n  }, []);\n\n  const clearMarkers = () => {\n    for (let i = 0; i < AllMarkersArr.length; i++) {\n      AllMarkersArr[i].setMap(null);\n    }\n  };\n\n  const redirectLogin = () => {\n    history.push(\"/signin\");\n  };\n\n  if (error) {\n    alert(\"Unable to load Events...\");\n  }\n\n  const handleScrollLocTime = isoDate => {\n    let center = MapObject.getCenter();\n    console.log(\"Setting Working Position from hndleScroll\", center.lng());\n    props.setWorkingPosition(prev => {\n      return _objectSpread({}, prev, {\n        geometry: {\n          lng: center.lng(),\n          lat: center.lat()\n        },\n        zoom: MapObject.getZoom(),\n        date: isoDate\n      });\n    });\n  };\n\n  const onMapMount = useCallback(map => {\n    let uniqueArrayOfId = [];\n    let UniqArr = []; // let dataDB;\n\n    console.log(\"Map Mounted:: \", google); // declare var google;\n\n    MapObject = map;\n    var GeoMarker = new GeolocationMarkerLib.GeolocationMarker(map);\n\n    if (data && data.eventGeoDay) {\n      for (var i = 0; i < data.eventGeoDay.length; i++) {\n        if (uniqueArrayOfId.indexOf(data.eventGeoDay[i]._id) == -1 && data.eventGeoDay[i].confirmed == true) {\n          uniqueArrayOfId.push(data.eventGeoDay[i]._id);\n          UniqArr.push(data.eventGeoDay[i]);\n        }\n      }\n    }\n\n    map.addListener(\"idle\", function () {\n      console.log(\"Mapa Idle map: \", map);\n      var bounds = map.getBounds();\n      var center = map.getCenter(); //   //console.log(\"ZOOOM1: \", bounds);\n      //   //console.log(\"ZOOOM2: \", bounds.getNorthEast());\n      //   //var ne = bounds.getNorthEast();\n      //   //var sw = bounds.getSouthWest();\n      //   //console.log(\"ne, \", ne);\n      //   // console.log(sw)\n      //   // console.log(JSON.stringify(ne.lng()), JSON.stringify(ne.lat()), JSON.stringify(sw.lng()) , JSON.stringify(sw.lat()))\n      //   //  var ne1 = new Number(JSON.stringify(ne.lng()))\n      //   //  var ne2 = new Number(JSON.stringify(ne.lat()))\n      //   //  var sw1 = new Number(JSON.stringify(sw.lng()))\n      //   //  var sw2 = new Number(JSON.stringify(sw.lat()))\n      //   // var newPoly0 = [[sw1, sw2], [ne1, sw2], [ne1, ne2], [sw1, ne2]]\n      //   // var newPoly = [[sw1, sw2], [ne1, sw2], [ne1, ne2], [sw1, -33.8]]\n      //   // var newPoly2 = [[sw1, sw2], [ne1, sw2], [ne1, ne2], [sw1, -33.9]]\n      //   // console.log(\"newPoly\", newPoly)\n      //   // var SumPolyWork = SumPoly\n      //   // console.log(\"...SumPolyWork\")\n      //   // console.log(...SumPolyWork)\n      //   // SumPoly = polygon.union(...SumPolyWork , POLY_A);\n      //   // console.log(\"SumPoly\", SumPoly)\n      //   //console.log(\"Setting current: \");\n      //   //   if(props.workingPosition.zoom != map.getZoom() || props.workingPosition.geolocation.lat != center.lat()){\n\n      console.log(\"Set new Idle zoom: \", center.lat(), center.lng()); //  if(center){\n      //     props.setWorkingPosition(prev => {return({\n      //       ...prev,\n      //       geolocation: { lat: center.lat(), lng: center.lng() },\n      //       zoom: map.getZoom()\n      //     })});\n      //  }\n      //   //   }\n      //   //here.fetchBoundariesSingle(ne,sw)\n      //   //console.log(\"Fetch points BoarDERS?\");\n    });\n    map.addListener(\"click\", function (event) {\n      // here.setState({confirmedPressed: false})\n      if (previousMarker) {\n        infoBubble.close();\n        setTimeout(() => {\n          if (document.getElementById(\"infoWindow\")) {\n            ReactDOM.unmountComponentAtNode(document.getElementById(\"infoWindow\"));\n          }\n        }, 10); //infoBubble.setMap(null);\n\n        previousMarker = undefined;\n      }\n    });\n    infoBubble = new window.InfoBubble({\n      content: \"<div id=\\\"infoWindow\\\"> </div>\",\n      shadowStyle: 1,\n      padding: 0,\n      backgroundColor: \"#242323\",\n      borderRadius: 0,\n      arrowSize: 10,\n      borderWidth: 0,\n      borderColor: \"#ffffff\",\n      disableAutoPan: true,\n      hideCloseButton: true,\n      arrowPosition: 50,\n      backgroundClassName: \"nonused\",\n      enableEventPropagation: false,\n      arrowStyle: 0,\n      minWidth: 200,\n      minHeight: 160\n    });\n    {\n      if (!loading) {\n        AllMarkersArr = UniqArr.map((location, i) => {\n          var urlNA = \"https://res.cloudinary.com/party-images-app/image/upload/v1583692669/ijy8dorejsarudzkauma.png\"; // {BasicMarker}\n\n          var urlAttend = \"https://res.cloudinary.com/party-images-app/image/upload/v1583692624/nwvqlicffptzqpwha5no.png\"; // {CharlieMarker} \n\n          var url = urlNA;\n          location.bookings && location.bookings.map((guest, index) => {//console.log(\"User indexOf: \", guest.user._id, user._id);\n            // if (guest.user._id == context._id) {\n            //   //console.log(\"Yes, GUEST\");\n            //   {\n            //     !guest.cancelled && guest.confirmed && (url = urlAttend);\n            //   }\n            // } else {\n            //   //console.log(\"No, GUEST\");\n            // }\n            // if (here.props.email.indexOf(guest.guest_email) !== -1 && guest.guest_confirmed == true) {\n            //   url = urlAttend\n            // }\n          });\n          var image = {\n            url: url,\n            size: new window.google.maps.Size(48, 48),\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(24, 48),\n            scaledSize: new window.google.maps.Size(48, 48)\n          };\n          var marker = new window.google.maps.Marker({\n            position: {\n              lat: location.geometry.coordinates[1],\n              lng: location.geometry.coordinates[0]\n            },\n            map: map,\n            icon: image,\n            // animation: window.google.maps.Animation.DROP,\n            title: location.name\n          });\n          marker.addListener(\"click\", function () {\n            console.log(\"Marker Click\", infoBubble);\n\n            if (previousMarker) {\n              infoBubble.close();\n              previousMarker = undefined;\n            } else {\n              infoBubble.addListener(\"domready\", e => {\n                setTimeout(() => {\n                  ReactDOM.render(React.createElement(React.Fragment, null, React.createElement(ApolloProvider, {\n                    client: client,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 331\n                    },\n                    __self: this\n                  }, React.createElement(UserContext.Provider, {\n                    value: () => {},\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 332\n                    },\n                    __self: this\n                  }, React.createElement(Router, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 333\n                    },\n                    __self: this\n                  }, React.createElement(DrawerWrap, {\n                    open: true,\n                    event: location,\n                    context: context,\n                    setContext: setContext,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 334\n                    },\n                    __self: this\n                  })))), React.createElement(InfoWindow, {\n                    lat: location.geometry.coordinates[0],\n                    lng: location.geometry.coordinates[1],\n                    id: location._id,\n                    location: location,\n                    context: context,\n                    setContext: setContext,\n                    setOpenDrawer: setOpenDrawer,\n                    openDrawer: openDrawer,\n                    redirectLogin: redirectLogin,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 338\n                    },\n                    __self: this\n                  })), document.getElementById(\"infoWindow\"));\n                }, 100);\n              });\n              infoBubble.open(map, marker);\n              previousMarker = location;\n            }\n          });\n          return marker;\n        });\n      }\n    }\n  });\n  useEffect(() => {\n    console.log(\"Context Map Geo rewrite from actual!!\");\n\n    if (context.geolocationObj && !props.workingPosition.geolocation) {\n      console.log(\"Settig LngLat from CONTEXT  \", context.geolocationObj);\n      setMapOptions(prev => {\n        return _objectSpread({}, prev, {\n          center: context.geolocationObj\n        });\n      });\n    }\n  }, [context.geolocationObj]);\n  useEffect(() => {\n    console.log(\"props.workingPosition: \", props.workingPosition);\n\n    if (props.workingPosition && props.workingPosition.geometry) {\n      console.log(\"Settig lngLat prop.workingLoc \", props.workingPosition);\n      setMapOptions(prev => {\n        return _objectSpread({}, prev, {\n          center: props.workingPosition.geometry\n        });\n      });\n    }\n  }, [props.workingPosition]);\n  const MapAtom = useMemo(() => React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"\".concat(1 * windowHeight, \"px\"),\n      top: 0,\n      position: \"absolute\",\n      background: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, React.createElement(Map, {\n    onMount: onMapMount,\n    options: mapOptions,\n    className: \"main-map\",\n    styling: {\n      width: \"100%\",\n      position: 'absolute',\n      height: \"\".concat(1 * windowHeight, \"px\"),\n      top: 0,\n      bottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  })), [onMapMount, mapOptions]);\n  return React.createElement(\"div\", {\n    component: \"main\",\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }), React.createElement(MapSettingsPanel //dateState={workDate}\n  , {\n    dateState: props.workingPosition && props.workingPosition.date ? props.workingPosition.date : 0,\n    positionState: props.workingPosition && props.workingPosition.geometry,\n    setWorkDate: props.setWorkingPosition,\n    handleScrollLocTime: handleScrollLocTime,\n    clearMarkers: clearMarkers,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }), MapAtom);\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  container: {\n    padding: 0\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nexport default MapPage;","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Pages/MapPage.js"],"names":["ReactDOM","React","useContext","useState","useRef","useEffect","useMemo","useCallback","Switch","Route","BrowserRouter","Router","ApolloClient","InMemoryCache","HttpLink","split","gql","BatchHttpLink","ApolloProvider","WebSocketLink","setContext","getMainDefinition","CssBaseline","makeStyles","useQuery","useHistory","UserContext","mapSetup","ALL_EVENTS","Map","InfoWindow","MapSettingsPanel","DrawerWrap","infoBubble","previousMarker","AllMarkersArr","MapObject","GeolocationMarkerLib","google","require","GQL_ENDPOINT","process","env","NODE_ENV","window","location","host","httpLink","uri","headers","authorization","localStorage","getItem","WS_ENDPOINT","wsLink","options","reconnect","authLink","_","token","link","query","kind","operation","concat","client","cache","defaultOptions","fetchPolicy","errorPolicy","MapPage","props","classes","useStyles","history","windowHeight","setWindowHeight","center","workingPosition","geometry","lat","lng","zoom","disableDefaultUI","zoomControl","clickableIcons","gestureHandling","backgroundColor","styles","mapOptions","setMapOptions","openDrawer","setOpenDrawer","context","variables","date","Date","toISOString","offset","limit","loading","error","data","fetchMore","console","log","innerHeight","clearMarkers","i","length","setMap","redirectLogin","push","alert","handleScrollLocTime","isoDate","getCenter","setWorkingPosition","prev","getZoom","onMapMount","map","uniqueArrayOfId","UniqArr","GeoMarker","GeolocationMarker","eventGeoDay","indexOf","_id","confirmed","addListener","bounds","getBounds","event","close","setTimeout","document","getElementById","unmountComponentAtNode","undefined","InfoBubble","content","shadowStyle","padding","borderRadius","arrowSize","borderWidth","borderColor","disableAutoPan","hideCloseButton","arrowPosition","backgroundClassName","enableEventPropagation","arrowStyle","minWidth","minHeight","urlNA","urlAttend","url","bookings","guest","index","image","size","maps","Size","origin","Point","anchor","scaledSize","marker","Marker","position","coordinates","icon","title","name","e","render","open","geolocationObj","geolocation","MapAtom","width","height","top","background","bottom","container","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","palette","secondary","main","form","submit","backdrop","zIndex","drawer","color"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport ReactDOM from \"react-dom\";\nimport React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n  useCallback\n} from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  split,\n  gql\n} from \"apollo-boost\";\nimport { BatchHttpLink } from \"apollo-link-batch-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { setContext } from \"apollo-link-context\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport \"date-fns\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserContext } from \"src/userContext\";\nimport mapSetup from \"../Services/map-settings\";\nimport { ALL_EVENTS } from \"../Services/GQL\";\n\nimport Map from \"../Atoms/MapAtom\";\nimport InfoWindow from \"../Molecules/Infowindow\";\nimport MapSettingsPanel from \"../Molecules/MapSettingsPanel\";\nimport DrawerWrap from 'src/Molecules/map/DrawerWrap';\n\nlet infoBubble;\nlet previousMarker;\nlet AllMarkersArr;\nlet MapObject;\n\nlet GeolocationMarkerLib\n\nif(google){\n  // import { GeolocationMarker } from 'geolocation-marker'\n  GeolocationMarkerLib = require('geolocation-marker');\n}\n\nvar GQL_ENDPOINT = `http://localhost:4005/graphql`;\nif (process.env.NODE_ENV == \"production\") {\n  GQL_ENDPOINT = `https://${window.location.host}/graphql`;\n}\nconst httpLink = new BatchHttpLink({\n  uri: GQL_ENDPOINT,\n  headers: {\n    authorization: window.localStorage.getItem(\"token\")\n  }\n});\n\nvar WS_ENDPOINT = `ws://localhost:4005/subs`;\nif (process.env.NODE_ENV == \"production\") {\n  WS_ENDPOINT = `wss://${window.location.host}/subs`;\n}\n\nconst wsLink = new WebSocketLink({\n  uri: WS_ENDPOINT,\n  options: {\n    reconnect: true\n  }\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = window.localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      fetchPolicy: \"network-only\",\n      errorPolicy: \"all\"\n    }\n  }\n});\n\nfunction MapPage(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  // const windowSize = useWindowSize()\n  const [windowHeight, setWindowHeight] = useState(0);\n  const [mapOptions, setMapOptions] = useState({\n                                          center: props.workingPosition && props.workingPosition.geometry ? props.workingPosition.geometry : { lat: 50.068645, lng: 14.457364 },// ,\n                                          zoom: props.workingPosition && props.workingPosition.zoom ? props.workingPosition.zoom : 10,\n                                          disableDefaultUI: true,\n                                          zoomControl: true,\n                                          //mapTypeId: window.google.maps.MapTypeId.ROADMAP,\n                                          clickableIcons: false,\n                                          gestureHandling: \"cooperative\",\n                                          backgroundColor: \"#242323\",\n                                          styles: mapSetup\n                                        });\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const { context, setContext } = useContext(UserContext);\n  const { loading, error, data, fetchMore } = useQuery(ALL_EVENTS, {\n    variables: {  date: props.workingPosition && props.workingPosition.date ? props.workingPosition.date : new Date().toISOString().split(\"T\")[0], \n                  offset: 1,\n                  limit: 1 \n              },\n      fetchPolicy: \"cache-and-network\"\n  });\n\n  console.log(\"RERENDER MAP PAGE: openDrawer\", openDrawer)\n\n\n  useEffect(() => {\n    // if (!window.AppHistory) {\n    //   window.AppHistory = history;\n    // }\n    console.log(\"Map.js rerendering\")\n    setWindowHeight(window.innerHeight)\n  }, []);\n\n\n  const clearMarkers = () => {\n    for (let i = 0; i < AllMarkersArr.length; i++) {\n      AllMarkersArr[i].setMap(null);\n    }\n  };\n\n  const redirectLogin = () => {\n    history.push(\"/signin\");\n  };\n\n  if (error) {\n    alert(\"Unable to load Events...\");\n  }\n\n  const handleScrollLocTime = isoDate => {\n    let center = MapObject.getCenter();\n    console.log(\"Setting Working Position from hndleScroll\", center.lng())\n    props.setWorkingPosition(prev => {return({\n      ...prev,\n      geometry: { lng: center.lng(), lat: center.lat() },\n      zoom: MapObject.getZoom(),\n      date: isoDate\n      })\n    });\n  };\n\n  const onMapMount = useCallback(map => {\n    let uniqueArrayOfId = [];\n    let UniqArr = [];\n    // let dataDB;\n    console.log(\"Map Mounted:: \", google);\n    // declare var google;\n    MapObject = map;\n\n    var GeoMarker = new GeolocationMarkerLib.GeolocationMarker(map);\n\n    if (data && data.eventGeoDay) {\n      for (var i = 0; i < data.eventGeoDay.length; i++) {\n        if (\n          uniqueArrayOfId.indexOf(data.eventGeoDay[i]._id) == -1 &&\n          data.eventGeoDay[i].confirmed == true\n        ) {\n          uniqueArrayOfId.push(data.eventGeoDay[i]._id);\n          UniqArr.push(data.eventGeoDay[i]);\n        }\n      }\n    }\n\n    map.addListener(\"idle\", function() {\n      console.log(\"Mapa Idle map: \", map)\n      var bounds = map.getBounds();\n      var center = map.getCenter();\n\n    //   //console.log(\"ZOOOM1: \", bounds);\n    //   //console.log(\"ZOOOM2: \", bounds.getNorthEast());\n    //   //var ne = bounds.getNorthEast();\n    //   //var sw = bounds.getSouthWest();\n    //   //console.log(\"ne, \", ne);\n    //   // console.log(sw)\n    //   // console.log(JSON.stringify(ne.lng()), JSON.stringify(ne.lat()), JSON.stringify(sw.lng()) , JSON.stringify(sw.lat()))\n    //   //  var ne1 = new Number(JSON.stringify(ne.lng()))\n    //   //  var ne2 = new Number(JSON.stringify(ne.lat()))\n    //   //  var sw1 = new Number(JSON.stringify(sw.lng()))\n    //   //  var sw2 = new Number(JSON.stringify(sw.lat()))\n\n    //   // var newPoly0 = [[sw1, sw2], [ne1, sw2], [ne1, ne2], [sw1, ne2]]\n    //   // var newPoly = [[sw1, sw2], [ne1, sw2], [ne1, ne2], [sw1, -33.8]]\n    //   // var newPoly2 = [[sw1, sw2], [ne1, sw2], [ne1, ne2], [sw1, -33.9]]\n    //   // console.log(\"newPoly\", newPoly)\n\n    //   // var SumPolyWork = SumPoly\n\n    //   // console.log(\"...SumPolyWork\")\n    //   // console.log(...SumPolyWork)\n\n    //   // SumPoly = polygon.union(...SumPolyWork , POLY_A);\n    //   // console.log(\"SumPoly\", SumPoly)\n    //   //console.log(\"Setting current: \");\n\n    //   //   if(props.workingPosition.zoom != map.getZoom() || props.workingPosition.geolocation.lat != center.lat()){\n         console.log(\"Set new Idle zoom: \", center.lat(), center.lng())\n        //  if(center){\n        //     props.setWorkingPosition(prev => {return({\n        //       ...prev,\n        //       geolocation: { lat: center.lat(), lng: center.lng() },\n        //       zoom: map.getZoom()\n        //     })});\n        //  }\n\n    //   //   }\n\n\n\n\n    //   //here.fetchBoundariesSingle(ne,sw)\n    //   //console.log(\"Fetch points BoarDERS?\");\n    });\n\n    map.addListener(\"click\", function(event) {\n\n      // here.setState({confirmedPressed: false})\n      if (previousMarker) {\n        infoBubble.close();\n        setTimeout(() => {\n          if (document.getElementById(\"infoWindow\")) {\n            ReactDOM.unmountComponentAtNode(\n              document.getElementById(\"infoWindow\")\n            );\n          }\n        }, 10);\n        //infoBubble.setMap(null);\n        previousMarker = undefined;\n      }\n    });\n\n    infoBubble = new window.InfoBubble({\n      content: `<div id=\"infoWindow\"> </div>`,\n      shadowStyle: 1,\n      padding: 0,\n      backgroundColor: \"#242323\",\n      borderRadius: 0,\n      arrowSize: 10,\n      borderWidth: 0,\n      borderColor: \"#ffffff\",\n      disableAutoPan: true,\n      hideCloseButton: true,\n      arrowPosition: 50,\n      backgroundClassName: \"nonused\",\n      enableEventPropagation: false,\n      arrowStyle: 0,\n      minWidth: 200,\n      minHeight: 160\n    });\n    {\n      if (!loading) {\n        AllMarkersArr = UniqArr.map((location, i) => {\n          var urlNA = \"https://res.cloudinary.com/party-images-app/image/upload/v1583692669/ijy8dorejsarudzkauma.png\" // {BasicMarker}\n          var urlAttend = \"https://res.cloudinary.com/party-images-app/image/upload/v1583692624/nwvqlicffptzqpwha5no.png\" // {CharlieMarker} \n          var url = urlNA;\n\n          location.bookings &&\n            location.bookings.map((guest, index) => {\n              //console.log(\"User indexOf: \", guest.user._id, user._id);\n              // if (guest.user._id == context._id) {\n              //   //console.log(\"Yes, GUEST\");\n              //   {\n              //     !guest.cancelled && guest.confirmed && (url = urlAttend);\n              //   }\n              // } else {\n              //   //console.log(\"No, GUEST\");\n              // }\n              // if (here.props.email.indexOf(guest.guest_email) !== -1 && guest.guest_confirmed == true) {\n              //   url = urlAttend\n              // }\n            });\n          var image = {\n            url: url,\n            size: new window.google.maps.Size(48, 48),\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(24, 48),\n            scaledSize: new window.google.maps.Size(48, 48)\n          };\n\n          var marker = new window.google.maps.Marker({\n            position: {\n              lat: location.geometry.coordinates[1],\n              lng: location.geometry.coordinates[0]\n            },\n            map: map,\n            icon: image,\n            // animation: window.google.maps.Animation.DROP,\n            title: location.name\n          });\n\n          marker.addListener(\"click\", function() {\n            console.log(\"Marker Click\", infoBubble)\n\n            if (previousMarker) {\n              infoBubble.close()\n              previousMarker = undefined\n            } else{\n            infoBubble.addListener(\"domready\", e => {\n                setTimeout(() => {\n                ReactDOM.render(\n                  <>\n                  <ApolloProvider client={client}>\n                    <UserContext.Provider value={() => {}} >\n                      <Router>\n                        <DrawerWrap open={true} event={location} context={context} setContext={setContext} />\n                      </Router>\n                    </UserContext.Provider>\n                  </ApolloProvider>\n                  <InfoWindow\n                      lat={location.geometry.coordinates[0]}\n                      lng={location.geometry.coordinates[1]}\n                      id={location._id}\n                      location={location}\n                      context={context}\n                      setContext={setContext}\n                      setOpenDrawer={setOpenDrawer}\n                      openDrawer={openDrawer}\n                      redirectLogin={redirectLogin} />\n                  </>\n                  ,\n                  document.getElementById(\"infoWindow\")\n                );\n              }, 100);\n            });\n            infoBubble.open(map, marker);\n            previousMarker = location\n          }\n          });\n\n          return marker;\n        });\n      }\n    }\n  });\n\n  useEffect(() => {\n    \n    console.log(\"Context Map Geo rewrite from actual!!\")\n    if (context.geolocationObj && !props.workingPosition.geolocation) {\n      console.log(\"Settig LngLat from CONTEXT  \", context.geolocationObj)\n\n      setMapOptions(prev => {\n        return({\n          ...prev,\n          center: context.geolocationObj\n        })\n      })\n    }\n  }, [context.geolocationObj])\n\n  useEffect(() => {\n    console.log(\"props.workingPosition: \", props.workingPosition)\n    if (props.workingPosition && props.workingPosition.geometry) {\n      console.log(\"Settig lngLat prop.workingLoc \", props.workingPosition)\n\n      setMapOptions(prev => {\n        return({\n          ...prev,\n          center: props.workingPosition.geometry\n        })\n      })\n    }\n  }, [props.workingPosition])\n\n\n\n  const MapAtom = useMemo(\n    () => (\n      <div style={{ \n            width: \"100%\",\n            height: `${1*windowHeight}px`,\n            top: 0,\n            position: \"absolute\",\n            background: \"black\"\n            }}>\n      <Map\n        onMount={onMapMount}\n        options={mapOptions}\n        className=\"main-map\"\n        styling={{\n          width: \"100%\", \n          position: 'absolute', \n          height: `${1*windowHeight}px`,\n          top: 0,\n          bottom: 0}}\n      />\n      </div>\n    ),\n    [onMapMount, mapOptions]\n  );\n\n\n  return (\n    <div component=\"main\" className={classes.container}>\n      <CssBaseline />\n      <MapSettingsPanel\n        //dateState={workDate}\n        dateState={props.workingPosition && props.workingPosition.date ? props.workingPosition.date : 0}\n        positionState={props.workingPosition && props.workingPosition.geometry}\n        setWorkDate={props.setWorkingPosition}\n        handleScrollLocTime={handleScrollLocTime}\n        clearMarkers={clearMarkers}\n        loading={loading}\n      />\n      {MapAtom}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  container: {\n    padding: 0\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default MapPage;\n"]},"metadata":{},"sourceType":"module"}