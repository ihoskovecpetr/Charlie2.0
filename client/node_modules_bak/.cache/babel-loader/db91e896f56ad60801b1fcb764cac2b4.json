{"ast":null,"code":"import _toConsumableArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import Grid from\"@material-ui/core/Grid\";import{makeStyles}from\"@material-ui/core/styles\";import{NavLink,useHistory}from\"react-router-dom\";import{useXsSize}from\"../../Hooks/useXsSize\";import{UserContext}from\"../../userContext\";import{sortByDate}from\"../../Services/functions\";import EventCardProfile from\"../../Atoms/Profile/EventCardProfile\";export default function UserEventsProfile(_ref){var showUserBookings=_ref.showUserBookings,userEvents=_ref.userEvents;var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),sortedEvents=_useState2[0],setSortedEvents=_useState2[1];useEffect(function(){var justShowUserBookings=showUserBookings.map(function(item){return item.event;});var justUserEvents=userEvents.map(function(item){var extEvent=item;extEvent.areYouAuthor=true;return extEvent;});var sortedEventsPrep=sortByDate([].concat(_toConsumableArray(justShowUserBookings),_toConsumableArray(justUserEvents)),\"dateStart\",\"DESC\");setSortedEvents(sortedEventsPrep);},[userEvents,showUserBookings]);return React.createElement(Grid,{container:true,justify:\"center\",direction:\"column\",alignItems:\"flex-start\",alignContent:\"center\",className:classes.mainContainer},userEvents&&showUserBookings&&sortedEvents&&sortedEvents.map(function(event,index){return React.createElement(Grid,{item:true,xs:12,key:index,className:classes.itemGrid},React.createElement(Grid,{container:true,justify:\"center\",className:classes.itemContainer},React.createElement(EventCardProfile,{event:event})));}));}var useStyles=makeStyles(function(theme){return{mainContainer:{width:\"100%\"},itemContainer:{width:\"100%\"},itemGrid:{width:\"100%\"}};});","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/profile/ProfileEventsPrinter.js"],"names":["React","useState","useContext","useEffect","Grid","makeStyles","NavLink","useHistory","useXsSize","UserContext","sortByDate","EventCardProfile","UserEventsProfile","showUserBookings","userEvents","classes","useStyles","sortedEvents","setSortedEvents","justShowUserBookings","map","item","event","justUserEvents","extEvent","areYouAuthor","sortedEventsPrep","mainContainer","index","itemGrid","itemContainer","theme","width"],"mappings":"kRAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,kBAApC,CAEA,OAASC,SAAT,KAA0B,uBAA1B,CACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,sCAA7B,CAEA,cAAe,SAASC,CAAAA,iBAAT,MAA6D,IAAhCC,CAAAA,gBAAgC,MAAhCA,gBAAgC,CAAdC,UAAc,MAAdA,UAAc,CAC1E,GAAMC,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CAD0E,cAElCf,QAAQ,CAAC,EAAD,CAF0B,wCAEnEgB,YAFmE,eAErDC,eAFqD,eAK1Ef,SAAS,CAAC,UAAM,CAEd,GAAMgB,CAAAA,oBAAoB,CAAGN,gBAAgB,CAACO,GAAjB,CAAqB,SAAAC,IAAI,CAAI,CACtD,MAAOA,CAAAA,IAAI,CAACC,KAAZ,CACH,CAF4B,CAA7B,CAIA,GAAMC,CAAAA,cAAc,CAAGT,UAAU,CAACM,GAAX,CAAe,SAAAC,IAAI,CAAI,CAC1C,GAAIG,CAAAA,QAAQ,CAAGH,IAAf,CACAG,QAAQ,CAACC,YAAT,CAAwB,IAAxB,CACA,MAAOD,CAAAA,QAAP,CACH,CAJsB,CAAvB,CAMA,GAAIE,CAAAA,gBAAgB,CAAGhB,UAAU,8BAC1BS,oBAD0B,qBAE1BI,cAF0B,GAG9B,WAH8B,CAGjB,MAHiB,CAAjC,CAKAL,eAAe,CAACQ,gBAAD,CAAf,CAED,CAnBQ,CAmBP,CAAEZ,UAAF,CAAcD,gBAAd,CAnBO,CAAT,CAqBA,MACE,qBAAC,IAAD,EACA,SAAS,KADT,CAEA,OAAO,CAAC,QAFR,CAGA,SAAS,CAAC,QAHV,CAIA,UAAU,CAAC,YAJX,CAKA,YAAY,CAAC,QALb,CAMA,SAAS,CAAEE,OAAO,CAACY,aANnB,EAQCb,UAAU,EAAID,gBAAd,EAAkCI,YAAlC,EAAkDA,YAAY,CAACG,GAAb,CAAiB,SAACE,KAAD,CAAQM,KAAR,QAChE,qBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,GAAG,CAAEA,KAAxB,CAA+B,SAAS,CAAEb,OAAO,CAACc,QAAlD,EACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,QAAxB,CAAiC,SAAS,CAAEd,OAAO,CAACe,aAApD,EACI,oBAAC,gBAAD,EAAkB,KAAK,CAAER,KAAzB,EADJ,CADJ,CADgE,EAAjB,CARnD,CADF,CAkBD,CAED,GAAMN,CAAAA,SAAS,CAAGX,UAAU,CAAC,SAAA0B,KAAK,QAAK,CACnCJ,aAAa,CAAE,CACXK,KAAK,CAAE,MADI,CADoB,CAIrCF,aAAa,CAAE,CACbE,KAAK,CAAE,MADM,CAJsB,CAOrCH,QAAQ,CAAE,CACRG,KAAK,CAAE,MADC,CAP2B,CAAL,EAAN,CAA5B","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nimport { useXsSize } from \"../../Hooks/useXsSize\";\nimport { UserContext } from \"../../userContext\";\nimport { sortByDate } from \"../../Services/functions\";\n\nimport EventCardProfile from \"../../Atoms/Profile/EventCardProfile\";\n\nexport default function UserEventsProfile({ showUserBookings, userEvents }) {\n  const classes = useStyles();\n  const [sortedEvents, setSortedEvents] = useState([]);\n\n\n  useEffect(() => {\n\n    const justShowUserBookings = showUserBookings.map(item => {\n        return item.event\n    })\n\n    const justUserEvents = userEvents.map(item => {\n        let extEvent = item\n        extEvent.areYouAuthor = true\n        return extEvent\n    })\n\n    let sortedEventsPrep = sortByDate([\n        ...justShowUserBookings,\n        ...justUserEvents\n    ], \"dateStart\", \"DESC\");\n\n    setSortedEvents(sortedEventsPrep)\n\n  },[ userEvents, showUserBookings ])\n\n  return (\n    <Grid\n    container\n    justify=\"center\"\n    direction=\"column\"\n    alignItems=\"flex-start\"\n    alignContent=\"center\"\n    className={classes.mainContainer}\n  >\n    {userEvents && showUserBookings && sortedEvents && sortedEvents.map((event, index) => (\n        <Grid item xs={12} key={index} className={classes.itemGrid}>\n            <Grid container justify=\"center\" className={classes.itemContainer}>\n                <EventCardProfile event={event} />\n            </Grid>\n        </Grid>\n      ))}\n  </Grid>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        width: \"100%\",\n      },\n  itemContainer: {\n    width: \"100%\",\n  },\n  itemGrid: {\n    width: \"100%\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}