{"ast":null,"code":"import _slicedToArray from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  mutation newestUserBookings($user_id: ID!) {\\n    newestUserBookings(user_id: $user_id) {\\n      event {\\n        _id\\n        name\\n        description\\n        dateStart\\n        imagesArr {\\n          caption\\n          src\\n          thumbnail\\n          thumbnailHeight\\n          thumbnailWidth\\n          scaletwidth\\n          marginLeft\\n          vwidth\\n        }\\n        author {\\n          _id\\n          name\\n          picture\\n        }\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,useContext,useMemo}from\"react\";import Container from\"@material-ui/core/Container\";import Grid from\"@material-ui/core/Grid\";import Typography from\"@material-ui/core/Typography\";import{Animated}from\"react-animated-css\";import{makeStyles}from\"@material-ui/core/styles\";import{useMutation,useQuery}from\"@apollo/react-hooks\";import gql from\"graphql-tag\";// import \"../../Pages/Menu.css\";\nimport{UserContext}from\"../../userContext\";import Spinner from\"../../Atoms/Spinner\";import LoginFirstBoard from\"src/Atoms/LoginFirstBoard\";import EventCard from\"../../Atoms/EventCard\";var USER_NEW_BOOKINGS=gql(_templateObject());export default function Screen3(props){var classes=useStyles();var _useContext=useContext(UserContext),context=_useContext.context;var _useMutation=useMutation(USER_NEW_BOOKINGS,{variables:{user_id:context._id}}),_useMutation2=_slicedToArray(_useMutation,2),newBookingsArr=_useMutation2[0],_useMutation2$=_useMutation2[1],loading=_useMutation2$.loading,error=_useMutation2$.error,data=_useMutation2$.data;var Sorted=[];if(context.success){{!loading&&!data&&newBookingsArr();}}useEffect(function(){if(context.success&&context._id){newBookingsArr();}},[context]);// if (props.idx === 3) {\n//   console.log(\"Ano podminka\");\n// }\nif(data){Sorted=data.newestUserBookings.filter(function(item){if(item.event)return true;return false;});if(Sorted.length>=2){Sorted=data.newestUserBookings.sort(function(a,b){var aDate=new Date(a.event.dateStart);var bDate=new Date(b.event.dateStart);if(aDate>bDate){return 1;}if(aDate<bDate){return-1;}});}}return React.createElement(\"div\",{className:\"section s3\"},React.createElement(Container,{maxWidth:\"sm\",className:classes.container_2},React.createElement(Grid,{item:true,id:\"s_3_id\"// style={{ display: \"none\" }}\n},React.createElement(Animated,{animationIn:\"bounceInLeft\",animationOut:\"fadeOut\",animationInDelay:500,animationInDuration:1000,isVisible:true},React.createElement(Typography,{className:classes.defaultHeader},\"YOUR \",React.createElement(\"b\",null,\"NEXT\"),\" EVENT\"))),React.createElement(Grid,{item:true,xs:12},React.createElement(Grid,{justify:\"center\",container:true},React.createElement(Grid,{item:true},!loading&&!data&&React.createElement(LoginFirstBoard,null),loading&&React.createElement(Spinner,{height:100,width:100}),Sorted.map(function(event,index){if(new Date(event.event.dateStart)>=new Date()){return React.createElement(EventCard,{event:event.event,key:index});}else{return React.createElement(\"p\",null,\"You have got no upconning event\");}}))))));}var useStyles=makeStyles(function(theme){return{container_2:{color:\"black\",paddingTop:80,paddingBottom:80},defaultHeader:{color:theme.palette.charliePink,fontWeight:300,paddingTop:20,fontSize:20,margin:10},containerIframe:{width:\"100%\"},iFrame:{width:\"100%\",height:250}};});","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/menu/screen_3.js"],"names":["React","useState","useEffect","useContext","useMemo","Container","Grid","Typography","Animated","makeStyles","useMutation","useQuery","gql","UserContext","Spinner","LoginFirstBoard","EventCard","USER_NEW_BOOKINGS","Screen3","props","classes","useStyles","context","variables","user_id","_id","newBookingsArr","loading","error","data","Sorted","success","newestUserBookings","filter","item","event","length","sort","a","b","aDate","Date","dateStart","bDate","container_2","defaultHeader","map","index","theme","color","paddingTop","paddingBottom","palette","charliePink","fontWeight","fontSize","margin","containerIframe","width","iFrame","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Animated } from \"react-animated-css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\n// import \"../../Pages/Menu.css\";\nimport { UserContext } from \"../../userContext\";\n\nimport Spinner from \"../../Atoms/Spinner\";\nimport LoginFirstBoard from \"src/Atoms/LoginFirstBoard\";\nimport EventCard from \"../../Atoms/EventCard\";\n\nconst USER_NEW_BOOKINGS = gql`\n  mutation newestUserBookings($user_id: ID!) {\n    newestUserBookings(user_id: $user_id) {\n      event {\n        _id\n        name\n        description\n        dateStart\n        imagesArr {\n          caption\n          src\n          thumbnail\n          thumbnailHeight\n          thumbnailWidth\n          scaletwidth\n          marginLeft\n          vwidth\n        }\n        author {\n          _id\n          name\n          picture\n        }\n      }\n    }\n  }\n`;\n\n\nexport default function Screen3(props) {\n  const classes = useStyles();\n  const { context } = useContext(UserContext);\n  const [newBookingsArr, { loading, error, data }] = useMutation(\n    USER_NEW_BOOKINGS,\n    {\n      variables: { user_id: context._id }\n    }\n  );\n\n  let Sorted = [];\n\n  if (context.success) {\n    {\n      !loading && !data && newBookingsArr();\n    }\n  }\n\n  useEffect(() => {\n    if (context.success && context._id) {\n        newBookingsArr()\n    }\n\n  }, [context]);\n\n  // if (props.idx === 3) {\n  //   console.log(\"Ano podminka\");\n  // }\n  if (data) {\n    Sorted = data.newestUserBookings.filter(item => {\n      if(item.event)return true\n      return false})\n\n    if(Sorted.length >= 2){\n          Sorted = data.newestUserBookings.sort(function(a, b) {\n          let aDate = new Date(a.event.dateStart);\n          let bDate = new Date(b.event.dateStart);\n          if (aDate > bDate) {\n            return 1;\n          }\n          if (aDate < bDate) {\n            return -1;\n          }\n        });\n    }\n\n  }\n\n  return (\n    <div className=\"section s3\">\n      <Container maxWidth=\"sm\" className={classes.container_2}>\n        <Grid item id=\"s_3_id\" // style={{ display: \"none\" }}\n        >\n          <Animated\n            animationIn=\"bounceInLeft\"\n            animationOut=\"fadeOut\"\n            animationInDelay={500}\n            animationInDuration={1000}\n            isVisible={true}\n          >\n            <Typography className={classes.defaultHeader}>\n              YOUR <b>NEXT</b> EVENT\n            </Typography>\n          </Animated>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid justify=\"center\" container>\n            <Grid item >\n              {!loading && !data && <LoginFirstBoard />}\n              {loading && <Spinner height={100} width={100} />}\n              {Sorted.map((event, index) => {\n                if (new Date(event.event.dateStart) >= new Date()) {\n                  return <EventCard event={event.event} key={index} />;\n                } else {\n                  return <p>You have got no upconning event</p>;\n                }\n              })}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  container_2: {\n    color: \"black\",\n    paddingTop: 80,\n    paddingBottom: 80\n  },\n\n  defaultHeader: {\n    color: theme.palette.charliePink,\n    fontWeight: 300,\n    paddingTop: 20,\n    fontSize: 20,\n    margin: 10\n  },\n  containerIframe: {\n    width: \"100%\"\n  },\n  iFrame: {\n    width: \"100%\",\n    height: 250\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}