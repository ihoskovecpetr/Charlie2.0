{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Menu/HowItWorksItem.js\";\nimport React, { useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSpring, animated } from 'react-spring';\nimport useVisibilitySensor from \"@rooks/use-visibility-sensor\";\nconst useStyles = makeStyles(theme => ({\n  mainItem: {\n    height: 274,\n    padding: 10\n  },\n  hwIcon: {\n    height: 90\n  },\n  hwIconOut: {\n    height: 95\n  },\n  subtitle: {\n    fontSize: 22,\n    fontWeight: 500,\n    margin: 10,\n    color: theme.palette.charliePink\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: 500,\n    margin: 10,\n    textAlign: \"center\"\n  }\n}));\nexport default function HowItWorksItem({\n  image,\n  subtitle,\n  text\n}) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        expanded = _React$useState2[0],\n        setExpanded = _React$useState2[1];\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const rootNode = useRef(null);\n\n  const _useVisibilitySensor = useVisibilitySensor(rootNode, {\n    intervalCheck: 100,\n    scrollCheck: true,\n    resizeCheck: true\n  }),\n        isVisible = _useVisibilitySensor.isVisible,\n        visibilityRect = _useVisibilitySensor.visibilityRect;\n\n  const swingIn = useSpring({\n    transform: \"translateX(0px)\",\n    opacity: 1,\n    from: {\n      opacity: 0,\n      transform: \"translateX(-100px)\"\n    },\n    reset: isVisible\n  });\n  return React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 12,\n    className: classes.mainItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, isVisible ? React.createElement(animated.div, {\n    style: swingIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    className: classes.hwIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: classes.hwIconOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" \"), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.subtitle,\n    ref: rootNode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, subtitle)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\u201C\", text, \"\\\"\"))));\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0-renew/Charlie2.0/client/src/Atoms/Menu/HowItWorksItem.js"],"names":["React","useRef","makeStyles","Grid","Typography","useSpring","animated","useVisibilitySensor","useStyles","theme","mainItem","height","padding","hwIcon","hwIconOut","subtitle","fontSize","fontWeight","margin","color","palette","charliePink","text","textAlign","HowItWorksItem","image","classes","useState","expanded","setExpanded","handleExpandClick","rootNode","intervalCheck","scrollCheck","resizeCheck","isVisible","visibilityRect","swingIn","transform","opacity","from","reset"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,cAAlC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAGA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,GADF;AAENC,IAAAA,OAAO,EAAE;AAFH,GADyB;AAKjCC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE;AADF,GALyB;AAQjCG,EAAAA,SAAS,EAAE;AACTH,IAAAA,MAAM,EAAE;AADC,GARsB;AAWjCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,UAAU,EAAE,GAFJ;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC;AAJb,GAXuB;AAiBjCC,EAAAA,IAAI,EAAE;AACJN,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,GAFR;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJK,IAAAA,SAAS,EAAE;AAJP;AAjB2B,CAAL,CAAN,CAA5B;AAyBA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA,KAAD;AAAQV,EAAAA,QAAR;AAAkBO,EAAAA;AAAlB,CAAxB,EAAiD;AAC9D,QAAMI,OAAO,GAAGlB,SAAS,EAAzB;;AAD8D,0BAE9BR,KAAK,CAAC2B,QAAN,CAAe,KAAf,CAF8B;AAAA;AAAA,QAEvDC,QAFuD;AAAA,QAE7CC,WAF6C;;AAG9D,QAAMC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAG9B,MAAM,CAAC,IAAD,CAAvB;;AAN8D,+BAQxBM,mBAAmB,CAACwB,QAAD,EAAW;AAClEC,IAAAA,aAAa,EAAE,GADmD;AAElEC,IAAAA,WAAW,EAAE,IAFqD;AAGlEC,IAAAA,WAAW,EAAE;AAHqD,GAAX,CARK;AAAA,QAQtDC,SARsD,wBAQtDA,SARsD;AAAA,QAQ3CC,cAR2C,wBAQ3CA,cAR2C;;AAa9D,QAAMC,OAAO,GAAGhC,SAAS,CAAC;AACxBiC,IAAAA,SAAS,EAAE,iBADa;AACMC,IAAAA,OAAO,EAAE,CADf;AAExBC,IAAAA,IAAI,EAAE;AAACD,MAAAA,OAAO,EAAE,CAAV;AAAaD,MAAAA,SAAS,EAAE;AAAxB,KAFkB;AAGxBG,IAAAA,KAAK,EAAEN;AAHiB,GAAD,CAAzB;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,SAAS,EAAET,OAAO,CAAChB,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,SAAS,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCyB,SAAS,GAAG,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACb;AAAK,IAAA,GAAG,EAAEZ,KAAV;AAAiB,IAAA,SAAS,EAAEC,OAAO,CAACb,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAAH,GAEO;AAAK,IAAA,SAAS,EAAEa,OAAO,CAACZ,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHjB,EAID,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAEY,OAAO,CAACX,QAAnD;AAA6D,IAAA,GAAG,EAAEgB,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,QADH,CADL,CAJC,EAUA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAA0C,IAAA,SAAS,EAAEW,OAAO,CAACJ,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACEA,IADF,OADJ,CAVA,CADA,CADF;AAqBD","sourcesContent":["import React, {useRef} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {useSpring, animated} from 'react-spring'\nimport useVisibilitySensor from \"@rooks/use-visibility-sensor\"\n\n\nconst useStyles = makeStyles(theme => ({\n    mainItem: {\n        height: 274,\n        padding: 10\n      },\n      hwIcon: {\n        height: 90,\n      },\n      hwIconOut: {\n        height: 95,\n      },\n      subtitle: {\n        fontSize: 22,\n        fontWeight: 500,\n        margin: 10,\n        color: theme.palette.charliePink\n      },\n      text: {\n        fontSize: 18,\n        fontWeight: 500,\n        margin: 10,\n        textAlign: \"center\"\n      },\n}));\n\nexport default function HowItWorksItem({image, subtitle, text}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const rootNode = useRef(null);\n  \n  const { isVisible, visibilityRect } = useVisibilitySensor(rootNode, {\n    intervalCheck: 100,\n    scrollCheck: true,\n    resizeCheck: true\n});\n  const swingIn = useSpring({\n    transform: \"translateX(0px)\", opacity: 1, \n    from: {opacity: 0, transform: \"translateX(-100px)\"},   \n    reset: isVisible})\n\n  return (\n    <Grid item sm={4} xs={12} className={classes.mainItem}>\n    <Grid container alignItems=\"center\" direction=\"column\">\n    {isVisible ? <animated.div style={swingIn}>\n    <img src={image} className={classes.hwIcon}/>\n   </animated.div> : <div className={classes.hwIconOut}> </div>}\n   <Grid item>\n        <Typography variant=\"subtitle1\" className={classes.subtitle} ref={rootNode}>\n          {subtitle}\n        </Typography>\n    </Grid>\n\n    <Grid item>\n        <Typography variant=\"body1\" component=\"p\" className={classes.text}>\n        â€œ{text}\"\n        </Typography>\n    </Grid>\n   </Grid>\n\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}