{"ast":null,"code":"import _slicedToArray from \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nexport function useXsSize() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        xs_size = _useState2[0],\n        setXs_size = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        md_size = _useState4[0],\n        setMd_size = _useState4[1];\n\n  useEffect(() => {\n    if (window.innerWidth <= 585) {\n      setXs_size(true);\n    }\n\n    if (window.innerWidth <= 960) {\n      setMd_size(true);\n    }\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 585) {\n        if (!xs_size) {\n          setXs_size(true);\n        }\n      } else {\n        if (xs_size) {\n          setXs_size(false);\n        }\n      }\n\n      if (window.innerWidth <= 960) {\n        if (!md_size) {\n          setMd_size(true);\n        }\n      } else {\n        if (md_size) {\n          setMd_size(false);\n        }\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n  const xs_size_memo = useMemo(() => {\n    return xs_size;\n  }, [xs_size]);\n  const md_size_memo = useMemo(() => {\n    return md_size;\n  }, [md_size]);\n  return {\n    xs_size_memo,\n    md_size_memo\n  };\n}","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Hooks/useXsSize.js"],"names":["React","useState","useEffect","useMemo","useXsSize","xs_size","setXs_size","md_size","setMd_size","window","innerWidth","handleResize","addEventListener","removeEventListener","xs_size_memo","md_size_memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA,oBACIH,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACnBI,OADmB;AAAA,QACVC,UADU;;AAAA,qBAEIL,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,QAEnBM,OAFmB;AAAA,QAEVC,UAFU;;AAI1BN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACD,QAAIG,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5BF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAG,MAAM;AACzB,UAAIF,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,YAAI,CAACL,OAAL,EAAc;AACZC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAJD,MAIO;AACL,YAAID,OAAJ,EAAa;AACXC,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AAED,UAAIG,MAAM,CAACC,UAAP,IAAqB,GAAzB,EAA8B;AAC5B,YAAI,CAACH,OAAL,EAAc;AACZC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAJD,MAIO;AACL,YAAID,OAAJ,EAAa;AACXC,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;AAEF,KArBD;;AAsBAC,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC;AACD,KAFD;AAGD,GA3BQ,CAAT;AA6BA,QAAMG,YAAY,GAAGX,OAAO,CAAC,MAAM;AACjC,WAAOE,OAAP;AACD,GAF2B,EAEzB,CAACA,OAAD,CAFyB,CAA5B;AAIA,QAAMU,YAAY,GAAGZ,OAAO,CAAC,MAAM;AACjC,WAAOI,OAAP;AACD,GAF2B,EAEzB,CAACA,OAAD,CAFyB,CAA5B;AAIA,SAAO;AAAEO,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACD","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\n\nexport function useXsSize() {\n  const [xs_size, setXs_size] = useState(false);\n  const [md_size, setMd_size] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth <= 585) {\n      setXs_size(true);\n    }\n    if (window.innerWidth <= 960) {\n      setMd_size(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 585) {\n        if (!xs_size) {\n          setXs_size(true);\n        }\n      } else {\n        if (xs_size) {\n          setXs_size(false);\n        }\n      }\n\n      if (window.innerWidth <= 960) {\n        if (!md_size) {\n          setMd_size(true);\n        }\n      } else {\n        if (md_size) {\n          setMd_size(false);\n        }\n      }\n\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  const xs_size_memo = useMemo(() => {\n    return xs_size;\n  }, [xs_size]);\n\n  const md_size_memo = useMemo(() => {\n    return md_size;\n  }, [md_size]);\n\n  return { xs_size_memo, md_size_memo };\n}\n"]},"metadata":{},"sourceType":"module"}