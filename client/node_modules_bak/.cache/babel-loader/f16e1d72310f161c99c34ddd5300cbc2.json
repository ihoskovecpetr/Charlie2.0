{"ast":null,"code":"var _jsxFileName = \"/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/MapSettingsPanel.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Spinner from \"../Atoms/Spinner\";\nexport default function MapSettingsPanel(props) {\n  const classes = useStyles();\n  let den = new Date(props.dateState);\n\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    console.log(\"Min: \", isoDen);\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n  };\n\n  const handleChangeDate = e => {\n    console.log(\"To\", e.target.value);\n    props.handleScrollLocTime(e.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    alignItems: \"flex-end\",\n    alignContent: \"flex-end\",\n    justify: \"flex-end\",\n    className: classes.settingsPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"flex-end\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.loading && React.createElement(Spinner, {\n    height: 40,\n    width: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: props.loading ? true : false // color={props.loading ? \"disabled\" : \"secondary\"}\n    ,\n    onClick: () => {\n      minusDay();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ArrowBackIosIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"datetime-local\" //label=\"Choose day\"\n    ,\n    variant: \"outlined\",\n    type: \"date\",\n    color: \"secondary\",\n    margin: \"dense\",\n    value: props.dateState,\n    onChange: handleChangeDate,\n    className: classes.textField,\n    InputProps: {\n      className: classes.inputTexFld\n    },\n    InputLabelProps: {\n      shrink: true,\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: props.loading ? true : false,\n    onClick: () => {\n      plusDay();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ArrowForwardIosIcon, {\n    fontSize: \"large\",\n    color: \"secondary\",\n    disabled: props.loading ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n}\nconst useStyles = makeStyles(theme => ({\n  settingsPanel: {\n    position: \"absolute\",\n    top: 0,\n    height: 120,\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.2)\",\n    zIndex: 10\n  },\n  textField: {\n    margin: 0,\n    color: 'white',\n    backgroundColor: 'white',\n    borderRadius: 5\n  },\n  dateInput: {},\n  inputTexFld: {\n    color: \"black\",\n    border: \"1px solid white\",\n    fontWeight: 600\n  }\n}));","map":{"version":3,"sources":["/Users/petrhoskovec/Desktop/code/Charlie2.0/client/src/Molecules/MapSettingsPanel.js"],"names":["React","makeStyles","TextField","Grid","IconButton","AddIcon","RemoveIcon","ArrowBackIosIcon","ArrowForwardIosIcon","Spinner","MapSettingsPanel","props","classes","useStyles","den","Date","dateState","plusDay","setDate","getDate","isoDen","toISOString","split","clearMarkers","handleScrollLocTime","minusDay","console","log","handleChangeDate","e","target","value","settingsPanel","loading","textField","className","inputTexFld","shrink","color","theme","position","top","height","width","background","zIndex","margin","backgroundColor","borderRadius","dateInput","border","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport Spinner from \"../Atoms/Spinner\";\n\nexport default function MapSettingsPanel(props) {\n  const classes = useStyles();\n  let den = new Date(props.dateState);\n\n  const plusDay = () => {\n    den.setDate(den.getDate() + 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n\n  };\n\n  const minusDay = () => {\n    den.setDate(den.getDate() - 1);\n    let isoDen = den.toISOString().split(\"T\")[0];\n    console.log(\"Min: \", isoDen)\n    props.clearMarkers();\n    props.handleScrollLocTime(isoDen);\n  };\n\n  const handleChangeDate = (e) => {\n    console.log(\"To\", e.target.value)\n    props.handleScrollLocTime(e.target.value);\n\n\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"flex-end\"\n        alignContent=\"flex-end\"\n        justify=\"flex-end\"\n        className={classes.settingsPanel}\n      >\n        <Grid item>\n          <Grid\n            container\n            alignItems=\"center\"\n            alignContent=\"flex-end\"\n            justify=\"flex-end\"\n          >\n            <Grid item>\n              {props.loading && <Spinner height={40} width={40} />}\n            </Grid>\n            <Grid item>\n              <IconButton \n                disabled={props.loading ? true : false} \n                // color={props.loading ? \"disabled\" : \"secondary\"}\n                onClick={() => {\n                  minusDay();\n                }}>\n                  <ArrowBackIosIcon fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n\n            <Grid item>\n              <TextField\n                id=\"datetime-local\"\n                //label=\"Choose day\"\n                variant=\"outlined\"\n                type=\"date\"\n                color=\"secondary\"\n                margin=\"dense\"\n                value={props.dateState}\n                onChange={handleChangeDate}\n                className={classes.textField}\n                InputProps={{\n                  className: classes.inputTexFld\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                  color: \"white\"\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <IconButton\n                disabled={props.loading ? true : false}\n                onClick={() => {\n                  plusDay();\n                }}\n              >\n                <ArrowForwardIosIcon\n                  fontSize=\"large\"\n                  color={\"secondary\"}\n                  disabled={props.loading ? true : false}\n                />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container>\n      </Grid>\n    </>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  settingsPanel: {\n    position: \"absolute\",\n    top: 0,\n    height: 120,\n    width: \"100%\",\n    background: \"rgba(0,0,0,0.2)\",\n    zIndex: 10\n  },\n  textField: {\n    margin: 0,\n    color: 'white',\n    backgroundColor: 'white',\n    borderRadius: 5\n  },\n  dateInput: {},\n  inputTexFld: {\n    color: \"black\",\n    border: \"1px solid white\",\n    fontWeight: 600\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}